<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11/bin/ks_tests</line>
</preamble>

<pid>7805</pid>
<ppid>7804</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--leak-check=full</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=test_out/cpp_stl_11/valgrind.xml</arg>
  </vargv>
  <argv>
    <exe>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11/bin/ks_tests</exe>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.312 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x7C019C</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>valid_not_parsed_if_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>valid_not_parsed_if.cpp</file>
      <line>20</line>
    </frame>
    <frame>
      <ip>0x7C014E</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>valid_not_parsed_if_t::valid_not_parsed_if_t(kaitai::kstream*, kaitai::kstruct*, valid_not_parsed_if_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>valid_not_parsed_if.cpp</file>
      <line>11</line>
    </frame>
    <frame>
      <ip>0x72A7BA</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_valid_not_parsed_if::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_valid_not_parsed_if.cpp</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x72A739</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_valid_not_parsed_if_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_valid_not_parsed_if.cpp</file>
      <line>9</line>
    </frame>
    <frame>
      <ip>0x6D12DF</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
      <dir>/usr/include/boost/test/utils</dir>
      <file>callback.hpp</file>
      <line>56</line>
    </frame>
    <frame>
      <ip>0x6D121F</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
      <dir>/usr/include/boost/test/utils</dir>
      <file>callback.hpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EB7D22</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::traverse_test_tree(boost::unit_test::test_suite const&amp;, boost::unit_test::test_tree_visitor&amp;)</fn>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:08.076 </time>
</status>

<error>
  <unique>0x6</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>415 (384 direct, 31 indirect) bytes in 1 blocks are definitely lost in loss record 6 of 11</text>
    <leakedbytes>415</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x7E82D7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>eos_exception_bytes_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>eos_exception_bytes.cpp</file>
      <line>18</line>
    </frame>
    <frame>
      <ip>0x7E8237</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>eos_exception_bytes_t::eos_exception_bytes_t(kaitai::kstream*, kaitai::kstruct*, eos_exception_bytes_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>eos_exception_bytes.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x72CCA5</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_eos_exception_bytes::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_eos_exception_bytes.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x72CBB9</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_eos_exception_bytes_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_eos_exception_bytes.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x6D12DF</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
      <dir>/usr/include/boost/test/utils</dir>
      <file>callback.hpp</file>
      <line>56</line>
    </frame>
    <frame>
      <ip>0x6D121F</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
      <dir>/usr/include/boost/test/utils</dir>
      <file>callback.hpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>415 (384 direct, 31 indirect) bytes in 1 blocks are definitely lost in loss record 7 of 11</text>
    <leakedbytes>415</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x77F647</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>eos_exception_u4_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>eos_exception_u4.cpp</file>
      <line>18</line>
    </frame>
    <frame>
      <ip>0x77F5A7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>eos_exception_u4_t::eos_exception_u4_t(kaitai::kstream*, kaitai::kstruct*, eos_exception_u4_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>eos_exception_u4.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x72F825</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_eos_exception_u4::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_eos_exception_u4.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x72F739</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_eos_exception_u4_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_eos_exception_u4.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x6D12DF</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
      <dir>/usr/include/boost/test/utils</dir>
      <file>callback.hpp</file>
      <line>56</line>
    </frame>
    <frame>
      <ip>0x6D121F</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
      <dir>/usr/include/boost/test/utils</dir>
      <file>callback.hpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x8</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>418 (384 direct, 34 indirect) bytes in 1 blocks are definitely lost in loss record 8 of 11</text>
    <leakedbytes>418</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x7C4E78</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>switch_repeat_expr_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>switch_repeat_expr.cpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x7C4BCB</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>switch_repeat_expr_t::switch_repeat_expr_t(kaitai::kstream*, kaitai::kstruct*, switch_repeat_expr_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>switch_repeat_expr.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x72E108</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_switch_repeat_expr::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_switch_repeat_expr.cpp</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x72E083</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_switch_repeat_expr_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_switch_repeat_expr.cpp</file>
      <line>9</line>
    </frame>
    <frame>
      <ip>0x6D12DF</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
      <dir>/usr/include/boost/test/utils</dir>
      <file>callback.hpp</file>
      <line>56</line>
    </frame>
    <frame>
      <ip>0x6D121F</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
      <dir>/usr/include/boost/test/utils</dir>
      <file>callback.hpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xa</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>1,242 (1,152 direct, 90 indirect) bytes in 3 blocks are definitely lost in loss record 10 of 11</text>
    <leakedbytes>1242</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x7B77D7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>repeat_until_sized_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>repeat_until_sized.cpp</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x7B7653</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>repeat_until_sized_t::repeat_until_sized_t(kaitai::kstream*, kaitai::kstruct*, repeat_until_sized_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>repeat_until_sized.cpp</file>
      <line>14</line>
    </frame>
    <frame>
      <ip>0x6EE9D4</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_repeat_until_sized::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_repeat_until_sized.cpp</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x6EE94D</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_repeat_until_sized_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_repeat_until_sized.cpp</file>
      <line>9</line>
    </frame>
    <frame>
      <ip>0x6D12DF</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
      <dir>/usr/include/boost/test/utils</dir>
      <file>callback.hpp</file>
      <line>56</line>
    </frame>
    <frame>
      <ip>0x6D121F</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
      <dir>/usr/include/boost/test/utils</dir>
      <file>callback.hpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xb</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>8,192 bytes in 1 blocks are definitely lost in loss record 11 of 11</text>
    <leakedbytes>8192</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B800</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x53A68AB</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19</obj>
      <fn>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer()</fn>
    </frame>
    <frame>
      <ip>0x53A6EC1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19</obj>
      <fn>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open(char const*, std::_Ios_Openmode)</fn>
    </frame>
    <frame>
      <ip>0x53A7FAF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19</obj>
      <fn>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ifstream(char const*, std::_Ios_Openmode)</fn>
    </frame>
    <frame>
      <ip>0x7414C8</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_valid_fail_inst::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_valid_fail_inst.cpp</file>
      <line>11</line>
    </frame>
    <frame>
      <ip>0x741487</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_valid_fail_inst_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_valid_fail_inst.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x6D12DF</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
      <dir>/usr/include/boost/test/utils</dir>
      <file>callback.hpp</file>
      <line>56</line>
    </frame>
    <frame>
      <ip>0x6D121F</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
      <dir>/usr/include/boost/test/utils</dir>
      <file>callback.hpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

