<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11/bin/ks_tests</line>
</preamble>

<pid>6820</pid>
<ppid>6819</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--leak-check=full</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=test_out/cpp_stl_11/valgrind.xml</arg>
  </vargv>
  <argv>
    <exe>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11/bin/ks_tests</exe>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.151 </time>
</status>


<status>
  <state>FINISHED</state>
  <time>00:00:00:02.384 </time>
</status>

<error>
  <unique>0xd</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>36 (24 direct, 12 indirect) bytes in 1 blocks are definitely lost in loss record 14 of 28</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4540ED</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>index_sizes_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>index_sizes.cpp</file>
      <line>19</line>
    </frame>
    <frame>
      <ip>0x45407A</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>index_sizes_t::index_sizes_t(kaitai::kstream*, kaitai::kstruct*, index_sizes_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>index_sizes.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x489CF0</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_index_sizes::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_index_sizes.cpp</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x489C50</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_index_sizes_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_index_sizes.cpp</file>
      <line>9</line>
    </frame>
    <frame>
      <ip>0x445115</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
    </frame>
    <frame>
      <ip>0x4450D7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xe</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>40 (24 direct, 16 indirect) bytes in 1 blocks are definitely lost in loss record 15 of 28</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x454BE2</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>repeat_until_s4_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>repeat_until_s4.cpp</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x454B7B</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>repeat_until_s4_t::repeat_until_s4_t(kaitai::kstream*, kaitai::kstruct*, repeat_until_s4_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>repeat_until_s4.cpp</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x468B40</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_repeat_until_s4::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_repeat_until_s4.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x468AA0</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_repeat_until_s4_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_repeat_until_s4.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x445115</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
    </frame>
    <frame>
      <ip>0x4450D7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0xf</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>40 (24 direct, 16 indirect) bytes in 1 blocks are definitely lost in loss record 16 of 28</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4565C2</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>repeat_eos_u4_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>repeat_eos_u4.cpp</file>
      <line>16</line>
    </frame>
    <frame>
      <ip>0x456572</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>repeat_eos_u4_t::repeat_eos_u4_t(kaitai::kstream*, kaitai::kstruct*, repeat_eos_u4_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>repeat_eos_u4.cpp</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x46CCE0</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_repeat_eos_u4::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_repeat_eos_u4.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x46CC40</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_repeat_eos_u4_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_repeat_eos_u4.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x445115</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
    </frame>
    <frame>
      <ip>0x4450D7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x10</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>40 (24 direct, 16 indirect) bytes in 1 blocks are definitely lost in loss record 17 of 28</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x44F59C</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>expr_array_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>expr_array.cpp</file>
      <line>34</line>
    </frame>
    <frame>
      <ip>0x44F4E4</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>expr_array_t::expr_array_t(kaitai::kstream*, kaitai::kstruct*, expr_array_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>expr_array.cpp</file>
      <line>29</line>
    </frame>
    <frame>
      <ip>0x48C3E0</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_expr_array::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_expr_array.cpp</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x48C340</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_expr_array_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_expr_array.cpp</file>
      <line>9</line>
    </frame>
    <frame>
      <ip>0x445115</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
    </frame>
    <frame>
      <ip>0x4450D7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x11</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>48 (24 direct, 24 indirect) bytes in 1 blocks are definitely lost in loss record 18 of 28</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x44F654</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>expr_array_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>expr_array.cpp</file>
      <line>40</line>
    </frame>
    <frame>
      <ip>0x44F4E4</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>expr_array_t::expr_array_t(kaitai::kstream*, kaitai::kstruct*, expr_array_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>expr_array.cpp</file>
      <line>29</line>
    </frame>
    <frame>
      <ip>0x48C3E0</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_expr_array::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_expr_array.cpp</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x48C340</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_expr_array_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_expr_array.cpp</file>
      <line>9</line>
    </frame>
    <frame>
      <ip>0x445115</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
    </frame>
    <frame>
      <ip>0x4450D7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x13</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>63 (24 direct, 39 indirect) bytes in 1 blocks are definitely lost in loss record 20 of 28</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x44F00F</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>repeat_n_strz_double_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>repeat_n_strz_double.cpp</file>
      <line>19</line>
    </frame>
    <frame>
      <ip>0x44EF9A</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>repeat_n_strz_double_t::repeat_n_strz_double_t(kaitai::kstream*, kaitai::kstruct*, repeat_n_strz_double_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>repeat_n_strz_double.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x465910</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_repeat_n_strz_double::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_repeat_n_strz_double.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x465870</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_repeat_n_strz_double_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_repeat_n_strz_double.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x445115</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
    </frame>
    <frame>
      <ip>0x4450D7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x14</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>63 (24 direct, 39 indirect) bytes in 1 blocks are definitely lost in loss record 21 of 28</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x44F1AA</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>repeat_n_strz_double_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>repeat_n_strz_double.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x44EF9A</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>repeat_n_strz_double_t::repeat_n_strz_double_t(kaitai::kstream*, kaitai::kstruct*, repeat_n_strz_double_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>repeat_n_strz_double.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x465910</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_repeat_n_strz_double::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_repeat_n_strz_double.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x465870</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_repeat_n_strz_double_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_repeat_n_strz_double.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x445115</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
    </frame>
    <frame>
      <ip>0x4450D7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x18</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>102 (24 direct, 78 indirect) bytes in 1 blocks are definitely lost in loss record 25 of 28</text>
    <leakedbytes>102</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x453D2A</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>repeat_n_strz_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>repeat_n_strz.cpp</file>
      <line>18</line>
    </frame>
    <frame>
      <ip>0x453CC2</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>repeat_n_strz_t::repeat_n_strz_t(kaitai::kstream*, kaitai::kstruct*, repeat_n_strz_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>repeat_n_strz.cpp</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x47B320</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_repeat_n_strz::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_repeat_n_strz.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x47B280</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_repeat_n_strz_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_repeat_n_strz.cpp</file>
      <line>10</line>
    </frame>
    <frame>
      <ip>0x445115</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
    </frame>
    <frame>
      <ip>0x4450D7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x19</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>135 (24 direct, 111 indirect) bytes in 1 blocks are definitely lost in loss record 26 of 28</text>
    <leakedbytes>135</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x44DA43</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>instance_std_array_t::entries()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>instance_std_array.cpp</file>
      <line>33</line>
    </frame>
    <frame>
      <ip>0x44A2BD</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_instance_std_array::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_instance_std_array.cpp</file>
      <line>17</line>
    </frame>
    <frame>
      <ip>0x449CA0</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_instance_std_array_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_instance_std_array.cpp</file>
      <line>9</line>
    </frame>
    <frame>
      <ip>0x445115</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
    </frame>
    <frame>
      <ip>0x4450D7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4EB7D22</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::traverse_test_tree(boost::unit_test::test_suite const&amp;, boost::unit_test::test_tree_visitor&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1a</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>141 (24 direct, 117 indirect) bytes in 1 blocks are definitely lost in loss record 27 of 28</text>
    <leakedbytes>141</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x44F720</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>expr_array_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>expr_array.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x44F4E4</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>expr_array_t::expr_array_t(kaitai::kstream*, kaitai::kstruct*, expr_array_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>expr_array.cpp</file>
      <line>29</line>
    </frame>
    <frame>
      <ip>0x48C3E0</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_expr_array::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_expr_array.cpp</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x48C340</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_expr_array_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_expr_array.cpp</file>
      <line>9</line>
    </frame>
    <frame>
      <ip>0x445115</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
    </frame>
    <frame>
      <ip>0x4450D7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1b</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>149 (24 direct, 125 indirect) bytes in 1 blocks are definitely lost in loss record 28 of 28</text>
    <leakedbytes>149</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4C2B0E0</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4541A1</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>index_sizes_t::_read()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>index_sizes.cpp</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x45407A</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>index_sizes_t::index_sizes_t(kaitai::kstream*, kaitai::kstruct*, index_sizes_t*)</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_11</dir>
      <file>index_sizes.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x489CF0</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_index_sizes::test_method()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_index_sizes.cpp</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x489C50</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>test_index_sizes_invoker()</fn>
      <dir>/home/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_11</dir>
      <file>test_index_sizes.cpp</file>
      <line>9</line>
    </frame>
    <frame>
      <ip>0x445115</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::unused boost::unit_test::ut_detail::invoker&lt;boost::unit_test::ut_detail::unused&gt;::invoke&lt;void (*)()&gt;(void (*&amp;)())</fn>
    </frame>
    <frame>
      <ip>0x4450D7</ip>
      <obj>/home/travis/build/kaitai-io/ci_targets/compiled/cpp_stl_11/bin/ks_tests</obj>
      <fn>boost::unit_test::ut_detail::callback0_impl_t&lt;boost::unit_test::ut_detail::unused, void (*)()&gt;::invoke()</fn>
    </frame>
    <frame>
      <ip>0x4E9F1F0</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
    </frame>
    <frame>
      <ip>0x4E7A545</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::catch_signals(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E7AD82</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::execution_monitor::execute(boost::unit_test::callback0&lt;int&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E9F2F1</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::unit_test_monitor_t::execute_and_translate(boost::unit_test::test_case const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x4E88F93</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libboost_unit_test_framework.so.1.54.0</obj>
      <fn>boost::unit_test::framework_impl::visit(boost::unit_test::test_case const&amp;)</fn>
    </frame>
  </stack>
</error>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

