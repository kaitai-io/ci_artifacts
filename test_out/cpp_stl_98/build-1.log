Scanning dependencies of target ks_tests
[  0%] Building CXX object CMakeFiles/ks_tests.dir/prereq/custom_fx.cpp.o
[  1%] Building CXX object CMakeFiles/ks_tests.dir/test_bits_byte_aligned.cpp.o
[  1%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/runtime/cpp_stl/kaitai/kaitaistream.cpp.o
[  1%] Building CXX object CMakeFiles/ks_tests.dir/prereq/my_custom_fx.cpp.o
[  2%] Building CXX object CMakeFiles/ks_tests.dir/prereq/custom_fx_no_args.cpp.o
[  2%] Building CXX object CMakeFiles/ks_tests.dir/main.cpp.o
[  2%] Building CXX object CMakeFiles/ks_tests.dir/test_bcd_user_type_be.cpp.o
[  2%] Building CXX object CMakeFiles/ks_tests.dir/test_bcd_user_type_le.cpp.o
[  2%] Building CXX object CMakeFiles/ks_tests.dir/test_bits_enum.cpp.o
[  2%] Building CXX object CMakeFiles/ks_tests.dir/test_bits_simple.cpp.o
[  2%] Building CXX object CMakeFiles/ks_tests.dir/test_buffered_struct.cpp.o
[  3%] Building CXX object CMakeFiles/ks_tests.dir/test_bytes_pad_term.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bits_byte_aligned.cpp:12:5: error: unknown type name 'bits_byte_aligned_t'; did you mean 'bitsByteAligned_t'?
    bits_byte_aligned_t* r = new bits_byte_aligned_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    bitsByteAligned_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bits_byte_aligned.h:13:7: note: 'bitsByteAligned_t' declared here
class bitsByteAligned_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bits_byte_aligned.cpp:12:34: error: unknown type name 'bits_byte_aligned_t'; did you mean 'bitsByteAligned_t'?
    bits_byte_aligned_t* r = new bits_byte_aligned_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 bitsByteAligned_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bits_byte_aligned.h:13:7: note: 'bitsByteAligned_t' declared here
class bitsByteAligned_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bcd_user_type_be.cpp:12:5: error: unknown type name 'bcd_user_type_be_t'; did you mean 'bcdUserTypeBe_t'?
    bcd_user_type_be_t* r = new bcd_user_type_be_t(&ks);
    ^~~~~~~~~~~~~~~~~~
    bcdUserTypeBe_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bcd_user_type_be.h:13:7: note: 'bcdUserTypeBe_t' declared here
class bcdUserTypeBe_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bcd_user_type_be.cpp:12:33: error: unknown type name 'bcd_user_type_be_t'; did you mean 'bcdUserTypeBe_t'?
    bcd_user_type_be_t* r = new bcd_user_type_be_t(&ks);
                                ^~~~~~~~~~~~~~~~~~
                                bcdUserTypeBe_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bcd_user_type_be.h:13:7: note: 'bcdUserTypeBe_t' declared here
class bcdUserTypeBe_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bcd_user_type_le.cpp:12:5: error: unknown type name 'bcd_user_type_le_t'; did you mean 'bcdUserTypeLe_t'?
    bcd_user_type_le_t* r = new bcd_user_type_le_t(&ks);
    ^~~~~~~~~~~~~~~~~~
    bcdUserTypeLe_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bcd_user_type_le.h:13:7: note: 'bcdUserTypeLe_t' declared here
class bcdUserTypeLe_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bcd_user_type_le.cpp:12:33: error: unknown type name 'bcd_user_type_le_t'; did you mean 'bcdUserTypeLe_t'?
    bcd_user_type_le_t* r = new bcd_user_type_le_t(&ks);
                                ^~~~~~~~~~~~~~~~~~
                                bcdUserTypeLe_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bcd_user_type_le.h:13:7: note: 'bcdUserTypeLe_t' declared here
class bcdUserTypeLe_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_bits_byte_aligned.cpp.o] Error 1
[  3%] Building CXX object CMakeFiles/ks_tests.dir/test_cast_nested.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_bcd_user_type_be.cpp.o] Error 1
[  3%] Building CXX object CMakeFiles/ks_tests.dir/test_cast_to_imported.cpp.o
[  3%] Building CXX object CMakeFiles/ks_tests.dir/test_cast_to_top.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_bcd_user_type_le.cpp.o] Error 1
[  4%] Building CXX object CMakeFiles/ks_tests.dir/test_debug_0.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bits_simple.cpp:12:5: error: unknown type name 'bits_simple_t'; did you mean 'bitsSimple_t'?
    bits_simple_t* r = new bits_simple_t(&ks);
    ^~~~~~~~~~~~~
    bitsSimple_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bits_simple.h:13:7: note: 'bitsSimple_t' declared here
class bitsSimple_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bits_simple.cpp:12:28: error: unknown type name 'bits_simple_t'; did you mean 'bitsSimple_t'?
    bits_simple_t* r = new bits_simple_t(&ks);
                           ^~~~~~~~~~~~~
                           bitsSimple_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bits_simple.h:13:7: note: 'bitsSimple_t' declared here
class bitsSimple_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bits_enum.cpp:12:5: error: unknown type name 'bits_enum_t'; did you mean 'bitsEnum_t'?
    bits_enum_t* r = new bits_enum_t(&ks);
    ^~~~~~~~~~~
    bitsEnum_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bits_enum.h:13:7: note: 'bitsEnum_t' declared here
class bitsEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bits_enum.cpp:12:26: error: unknown type name 'bits_enum_t'; did you mean 'bitsEnum_t'?
    bits_enum_t* r = new bits_enum_t(&ks);
                         ^~~~~~~~~~~
                         bitsEnum_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bits_enum.h:13:7: note: 'bitsEnum_t' declared here
class bitsEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bits_enum.cpp:14:33: error: use of undeclared identifier 'bits_enum_t'; did you mean 'bitsEnum_t'?
    BOOST_CHECK_EQUAL(r->one(), bits_enum_t::ANIMAL_PLATYPUS);
                                ^~~~~~~~~~~
                                bitsEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bits_enum.h:13:7: note: 'bitsEnum_t' declared here
class bitsEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bits_enum.cpp:15:33: error: use of undeclared identifier 'bits_enum_t'; did you mean 'bitsEnum_t'?
    BOOST_CHECK_EQUAL(r->two(), bits_enum_t::ANIMAL_HORSE);
                                ^~~~~~~~~~~
                                bitsEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bits_enum.h:13:7: note: 'bitsEnum_t' declared here
class bitsEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bits_enum.cpp:16:35: error: use of undeclared identifier 'bits_enum_t'; did you mean 'bitsEnum_t'?
    BOOST_CHECK_EQUAL(r->three(), bits_enum_t::ANIMAL_CAT);
                                  ^~~~~~~~~~~
                                  bitsEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bits_enum.h:13:7: note: 'bitsEnum_t' declared here
class bitsEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_buffered_struct.cpp:12:5: error: unknown type name 'buffered_struct_t'; did you mean 'bufferedStruct_t'?
    buffered_struct_t* r = new buffered_struct_t(&ks);
    ^~~~~~~~~~~~~~~~~
    bufferedStruct_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/buffered_struct.h:13:7: note: 'bufferedStruct_t' declared here
class bufferedStruct_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_buffered_struct.cpp:12:32: error: unknown type name 'buffered_struct_t'; did you mean 'bufferedStruct_t'?
    buffered_struct_t* r = new buffered_struct_t(&ks);
                               ^~~~~~~~~~~~~~~~~
                               bufferedStruct_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/buffered_struct.h:13:7: note: 'bufferedStruct_t' declared here
class bufferedStruct_t : public kaitai::kstruct {
      ^
5 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_bits_enum.cpp.o] Error 1
[  4%] Building CXX object CMakeFiles/ks_tests.dir/test_debug_array_user.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_bits_simple.cpp.o] Error 1
[  4%] Building CXX object CMakeFiles/ks_tests.dir/test_debug_enum_name.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_buffered_struct.cpp.o] Error 1
[  4%] Building CXX object CMakeFiles/ks_tests.dir/test_debug_switch_user.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bytes_pad_term.cpp:12:5: error: unknown type name 'bytes_pad_term_t'; did you mean 'bytesPadTerm_t'?
    bytes_pad_term_t* r = new bytes_pad_term_t(&ks);
    ^~~~~~~~~~~~~~~~
    bytesPadTerm_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bytes_pad_term.h:13:7: note: 'bytesPadTerm_t' declared here
class bytesPadTerm_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_bytes_pad_term.cpp:12:31: error: unknown type name 'bytes_pad_term_t'; did you mean 'bytesPadTerm_t'?
    bytes_pad_term_t* r = new bytes_pad_term_t(&ks);
                              ^~~~~~~~~~~~~~~~
                              bytesPadTerm_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bytes_pad_term.h:13:7: note: 'bytesPadTerm_t' declared here
class bytesPadTerm_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_bytes_pad_term.cpp.o] Error 1
[  5%] Building CXX object CMakeFiles/ks_tests.dir/test_default_big_endian.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_cast_nested.cpp:12:5: error: unknown type name 'cast_nested_t'; did you mean 'castNested_t'?
    cast_nested_t* r = new cast_nested_t(&ks);
    ^~~~~~~~~~~~~
    castNested_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/cast_nested.h:14:7: note: 'castNested_t' declared here
class castNested_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_cast_nested.cpp:12:28: error: unknown type name 'cast_nested_t'; did you mean 'castNested_t'?
    cast_nested_t* r = new cast_nested_t(&ks);
                           ^~~~~~~~~~~~~
                           castNested_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/cast_nested.h:14:7: note: 'castNested_t' declared here
class castNested_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_cast_to_top.cpp:12:5: error: unknown type name 'cast_to_top_t'; did you mean 'castToTop_t'?
    cast_to_top_t* r = new cast_to_top_t(&ks);
    ^~~~~~~~~~~~~
    castToTop_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/cast_to_top.h:13:7: note: 'castToTop_t' declared here
class castToTop_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_cast_to_top.cpp:12:28: error: unknown type name 'cast_to_top_t'; did you mean 'castToTop_t'?
    cast_to_top_t* r = new cast_to_top_t(&ks);
                           ^~~~~~~~~~~~~
                           castToTop_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/cast_to_top.h:13:7: note: 'castToTop_t' declared here
class castToTop_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_cast_to_imported.cpp:13:5: error: unknown type name 'cast_to_imported_t'; did you mean 'castToImported_t'?
    cast_to_imported_t* r = new cast_to_imported_t(&ks);
    ^~~~~~~~~~~~~~~~~~
    castToImported_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/cast_to_imported.h:15:7: note: 'castToImported_t' declared here
class castToImported_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_cast_to_imported.cpp:13:33: error: unknown type name 'cast_to_imported_t'; did you mean 'castToImported_t'?
    cast_to_imported_t* r = new cast_to_imported_t(&ks);
                                ^~~~~~~~~~~~~~~~~~
                                castToImported_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/cast_to_imported.h:15:7: note: 'castToImported_t' declared here
class castToImported_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_cast_nested.cpp.o] Error 1
[  5%] Building CXX object CMakeFiles/ks_tests.dir/test_default_endian_expr_exception.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_cast_to_top.cpp.o] Error 1
[  5%] Building CXX object CMakeFiles/ks_tests.dir/test_default_endian_expr_inherited.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_cast_to_imported.cpp.o] Error 1
[  5%] Building CXX object CMakeFiles/ks_tests.dir/test_default_endian_expr_is_be.cpp.o
[  6%] Building CXX object CMakeFiles/ks_tests.dir/test_default_endian_expr_is_le.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_debug_array_user.cpp:10:5: error: unknown type name 'debug_array_user_t'; did you mean 'debugArrayUser_t'?
    debug_array_user_t* r = new debug_array_user_t(&ks);
    ^~~~~~~~~~~~~~~~~~
    debugArrayUser_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/debug_array_user.h:14:7: note: 'debugArrayUser_t' declared here
class debugArrayUser_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_debug_array_user.cpp:10:33: error: unknown type name 'debug_array_user_t'; did you mean 'debugArrayUser_t'?
    debug_array_user_t* r = new debug_array_user_t(&ks);
                                ^~~~~~~~~~~~~~~~~~
                                debugArrayUser_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/debug_array_user.h:14:7: note: 'debugArrayUser_t' declared here
class debugArrayUser_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_debug_switch_user.cpp:13:5: error: unknown type name 'debug_switch_user_t'; did you mean 'debugSwitchUser_t'?
    debug_switch_user_t* r = new debug_switch_user_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    debugSwitchUser_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/debug_switch_user.h:13:7: note: 'debugSwitchUser_t' declared here
class debugSwitchUser_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_debug_switch_user.cpp:13:34: error: unknown type name 'debug_switch_user_t'; did you mean 'debugSwitchUser_t'?
    debug_switch_user_t* r = new debug_switch_user_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 debugSwitchUser_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/debug_switch_user.h:13:7: note: 'debugSwitchUser_t' declared here
class debugSwitchUser_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_debug_switch_user.cpp:18:35: error: use of undeclared identifier 'debug_switch_user_t'; did you mean 'debugSwitchUser_t'?
    BOOST_CHECK_EQUAL(static_cast<debug_switch_user_t::one_t*>(r->data())->val(), -190);
                                  ^~~~~~~~~~~~~~~~~~~
                                  debugSwitchUser_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/debug_switch_user.h:13:7: note: 'debugSwitchUser_t' declared here
class debugSwitchUser_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_debug_array_user.cpp.o] Error 1
[  6%] Building CXX object CMakeFiles/ks_tests.dir/test_default_endian_mod.cpp.o
3 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_debug_switch_user.cpp.o] Error 1
[  6%] Building CXX object CMakeFiles/ks_tests.dir/test_docstrings.cpp.o
[  6%] Building CXX object CMakeFiles/ks_tests.dir/test_docstrings_docref.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_default_big_endian.cpp:12:5: error: unknown type name 'default_big_endian_t'; did you mean 'defaultBigEndian_t'?
    default_big_endian_t* r = new default_big_endian_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    defaultBigEndian_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_big_endian.h:13:7: note: 'defaultBigEndian_t' declared here
class defaultBigEndian_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_default_big_endian.cpp:12:35: error: unknown type name 'default_big_endian_t'; did you mean 'defaultBigEndian_t'?
    default_big_endian_t* r = new default_big_endian_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  defaultBigEndian_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_big_endian.h:13:7: note: 'defaultBigEndian_t' declared here
class defaultBigEndian_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_default_big_endian.cpp.o] Error 1
[  7%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_0.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_default_endian_expr_exception.cpp:13:5: error: unknown type name 'default_endian_expr_exception_t'; did you mean 'defaultEndianExprException_t'?
    default_endian_expr_exception_t* r = 0;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    defaultEndianExprException_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_endian_expr_exception.h:14:7: note: 'defaultEndianExprException_t' declared here
class defaultEndianExprException_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_default_endian_expr_exception.cpp:15:17: error: unknown type name 'default_endian_expr_exception_t'; did you mean 'defaultEndianExprException_t'?
        r = new default_endian_expr_exception_t(&ks),
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                defaultEndianExprException_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_endian_expr_exception.h:14:7: note: 'defaultEndianExprException_t' declared here
class defaultEndianExprException_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_default_endian_expr_is_be.cpp:12:5: error: unknown type name 'default_endian_expr_is_be_t'
    default_endian_expr_is_be_t* r = new default_endian_expr_is_be_t(&ks);
    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_default_endian_expr_inherited.cpp:12:5: error: unknown type name 'default_endian_expr_inherited_t'; did you mean 'defaultEndianExprInherited_t'?
    default_endian_expr_inherited_t* r = new default_endian_expr_inherited_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    defaultEndianExprInherited_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_endian_expr_inherited.h:14:7: note: 'defaultEndianExprInherited_t' declared here
class defaultEndianExprInherited_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_default_endian_expr_inherited.cpp:12:46: error: unknown type name 'default_endian_expr_inherited_t'; did you mean 'defaultEndianExprInherited_t'?
    default_endian_expr_inherited_t* r = new default_endian_expr_inherited_t(&ks);
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                             defaultEndianExprInherited_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_endian_expr_inherited.h:14:7: note: 'defaultEndianExprInherited_t' declared here
class defaultEndianExprInherited_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_default_endian_expr_is_be.cpp:12:42: error: unknown type name 'default_endian_expr_is_be_t'
    default_endian_expr_is_be_t* r = new default_endian_expr_is_be_t(&ks);
                                         ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_default_endian_expr_exception.cpp.o] Error 1
[  7%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_1.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_default_endian_expr_is_le.cpp:12:5: error: unknown type name 'default_endian_expr_is_le_t'
    default_endian_expr_is_le_t* r = new default_endian_expr_is_le_t(&ks);
    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_default_endian_expr_is_le.cpp:12:42: error: unknown type name 'default_endian_expr_is_le_t'
    default_endian_expr_is_le_t* r = new default_endian_expr_is_le_t(&ks);
                                         ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_default_endian_expr_is_be.cpp.o] Error 1
[  7%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_deep.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_default_endian_expr_inherited.cpp.o] Error 1
[  7%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_deep_literals.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_default_endian_expr_is_le.cpp.o] Error 1
[  8%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_fancy.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_default_endian_mod.cpp:12:5: error: unknown type name 'default_endian_mod_t'; did you mean 'defaultEndianMod_t'?
    default_endian_mod_t* r = new default_endian_mod_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    defaultEndianMod_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_endian_mod.h:13:7: note: 'defaultEndianMod_t' declared here
class defaultEndianMod_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_default_endian_mod.cpp:12:35: error: unknown type name 'default_endian_mod_t'; did you mean 'defaultEndianMod_t'?
    default_endian_mod_t* r = new default_endian_mod_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  defaultEndianMod_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_endian_mod.h:13:7: note: 'defaultEndianMod_t' declared here
class defaultEndianMod_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_docstrings_docref.cpp:12:5: error: unknown type name 'docstrings_docref_t'; did you mean 'docstringsDocref_t'?
    docstrings_docref_t* r = new docstrings_docref_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    docstringsDocref_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/docstrings_docref.h:18:7: note: 'docstringsDocref_t' declared here
class docstringsDocref_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_docstrings_docref.cpp:12:34: error: unknown type name 'docstrings_docref_t'; did you mean 'docstringsDocref_t'?
    docstrings_docref_t* r = new docstrings_docref_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 docstringsDocref_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/docstrings_docref.h:18:7: note: 'docstringsDocref_t' declared here
class docstringsDocref_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_default_endian_mod.cpp.o] Error 1
[  8%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_for_unknown_id.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_docstrings_docref.cpp.o] Error 1
[  8%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_if.cpp.o
[  8%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_import.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_0.cpp:12:5: error: unknown type name 'enum_0_t'; did you mean 'enum0_t'?
    enum_0_t* r = new enum_0_t(&ks);
    ^~~~~~~~
    enum0_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_0.h:13:7: note: 'enum0_t' declared here
class enum0_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_0.cpp:12:23: error: unknown type name 'enum_0_t'; did you mean 'enum0_t'?
    enum_0_t* r = new enum_0_t(&ks);
                      ^~~~~~~~
                      enum0_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_0.h:13:7: note: 'enum0_t' declared here
class enum0_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_0.cpp:14:35: error: use of undeclared identifier 'enum_0_t'; did you mean 'enum0_t'?
    BOOST_CHECK_EQUAL(r->pet_1(), enum_0_t::ANIMAL_CAT);
                                  ^~~~~~~~
                                  enum0_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_0.h:13:7: note: 'enum0_t' declared here
class enum0_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_0.cpp:15:35: error: use of undeclared identifier 'enum_0_t'; did you mean 'enum0_t'?
    BOOST_CHECK_EQUAL(r->pet_2(), enum_0_t::ANIMAL_CHICKEN);
                                  ^~~~~~~~
                                  enum0_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_0.h:13:7: note: 'enum0_t' declared here
class enum0_t : public kaitai::kstruct {
      ^
4 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_0.cpp.o] Error 1
[  9%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_int_range_s.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_1.cpp:12:5: error: unknown type name 'enum_1_t'; did you mean 'enum1_t'?
    enum_1_t* r = new enum_1_t(&ks);
    ^~~~~~~~
    enum1_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_1.h:13:7: note: 'enum1_t' declared here
class enum1_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_1.cpp:12:23: error: unknown type name 'enum_1_t'; did you mean 'enum1_t'?
    enum_1_t* r = new enum_1_t(&ks);
                      ^~~~~~~~
                      enum1_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_1.h:13:7: note: 'enum1_t' declared here
class enum1_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_1.cpp:14:54: error: use of undeclared identifier 'enum_1_t'; did you mean 'enum1_t'?
    BOOST_CHECK_EQUAL(r->main()->submain()->pet_1(), enum_1_t::main_obj_t::ANIMAL_CAT);
                                                     ^~~~~~~~
                                                     enum1_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_1.h:13:7: note: 'enum1_t' declared here
class enum1_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_1.cpp:14:64: error: no member named 'main_obj_t' in 'enum1_t'; did you mean 'mainObj_t'?
    BOOST_CHECK_EQUAL(r->main()->submain()->pet_1(), enum_1_t::main_obj_t::ANIMAL_CAT);
                                                     ~~~~~~~~~~^~~~~~~~~~
                                                               mainObj_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^~~~
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^~~~
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^~
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^~~
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_1.h:26:11: note: 'mainObj_t' declared here
    class mainObj_t : public kaitai::kstruct {
          ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_1.cpp:15:54: error: use of undeclared identifier 'enum_1_t'; did you mean 'enum1_t'?
    BOOST_CHECK_EQUAL(r->main()->submain()->pet_2(), enum_1_t::main_obj_t::ANIMAL_CHICKEN);
                                                     ^~~~~~~~
                                                     enum1_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_1.h:13:7: note: 'enum1_t' declared here
class enum1_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_1.cpp:15:64: error: no member named 'main_obj_t' in 'enum1_t'; did you mean 'mainObj_t'?
    BOOST_CHECK_EQUAL(r->main()->submain()->pet_2(), enum_1_t::main_obj_t::ANIMAL_CHICKEN);
                                                     ~~~~~~~~~~^~~~~~~~~~
                                                               mainObj_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^~~~
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^~~~
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^~
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^~~
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_1.h:26:11: note: 'mainObj_t' declared here
    class mainObj_t : public kaitai::kstruct {
          ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_deep.cpp:12:5: error: unknown type name 'enum_deep_t'; did you mean 'enumDeep_t'?
    enum_deep_t* r = new enum_deep_t(&ks);
    ^~~~~~~~~~~
    enumDeep_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_deep.h:13:7: note: 'enumDeep_t' declared here
class enumDeep_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_deep.cpp:12:26: error: unknown type name 'enum_deep_t'; did you mean 'enumDeep_t'?
    enum_deep_t* r = new enum_deep_t(&ks);
                         ^~~~~~~~~~~
                         enumDeep_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_deep.h:13:7: note: 'enumDeep_t' declared here
class enumDeep_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_deep.cpp:14:35: error: use of undeclared identifier 'enum_deep_t'; did you mean 'enumDeep_t'?
    BOOST_CHECK_EQUAL(r->pet_1(), enum_deep_t::container1_t::ANIMAL_CAT);
                                  ^~~~~~~~~~~
                                  enumDeep_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_deep.h:13:7: note: 'enumDeep_t' declared here
class enumDeep_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_deep.cpp:15:35: error: use of undeclared identifier 'enum_deep_t'; did you mean 'enumDeep_t'?
    BOOST_CHECK_EQUAL(r->pet_2(), enum_deep_t::container1_t::container2_t::ANIMAL_HARE);
                                  ^~~~~~~~~~~
                                  enumDeep_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_deep.h:13:7: note: 'enumDeep_t' declared here
class enumDeep_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_deep_literals.cpp:12:5: error: unknown type name 'enum_deep_literals_t'; did you mean 'enumDeepLiterals_t'?
    enum_deep_literals_t* r = new enum_deep_literals_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    enumDeepLiterals_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_deep_literals.h:13:7: note: 'enumDeepLiterals_t' declared here
class enumDeepLiterals_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_deep_literals.cpp:12:35: error: unknown type name 'enum_deep_literals_t'; did you mean 'enumDeepLiterals_t'?
    enum_deep_literals_t* r = new enum_deep_literals_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  enumDeepLiterals_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_deep_literals.h:13:7: note: 'enumDeepLiterals_t' declared here
class enumDeepLiterals_t : public kaitai::kstruct {
      ^
6 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_1.cpp.o] Error 1
[  9%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_int_range_u.cpp.o
4 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_deep.cpp.o] Error 1
[  9%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_invalid.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_deep_literals.cpp.o] Error 1
[  9%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_long_range_s.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_fancy.cpp:12:5: error: unknown type name 'enum_fancy_t'; did you mean 'enumFancy_t'?
    enum_fancy_t* r = new enum_fancy_t(&ks);
    ^~~~~~~~~~~~
    enumFancy_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_fancy.h:13:7: note: 'enumFancy_t' declared here
class enumFancy_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_fancy.cpp:12:27: error: unknown type name 'enum_fancy_t'; did you mean 'enumFancy_t'?
    enum_fancy_t* r = new enum_fancy_t(&ks);
                          ^~~~~~~~~~~~
                          enumFancy_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_fancy.h:13:7: note: 'enumFancy_t' declared here
class enumFancy_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_fancy.cpp:14:35: error: use of undeclared identifier 'enum_fancy_t'; did you mean 'enumFancy_t'?
    BOOST_CHECK_EQUAL(r->pet_1(), enum_fancy_t::ANIMAL_CAT);
                                  ^~~~~~~~~~~~
                                  enumFancy_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_fancy.h:13:7: note: 'enumFancy_t' declared here
class enumFancy_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_fancy.cpp:15:35: error: use of undeclared identifier 'enum_fancy_t'; did you mean 'enumFancy_t'?
    BOOST_CHECK_EQUAL(r->pet_2(), enum_fancy_t::ANIMAL_CHICKEN);
                                  ^~~~~~~~~~~~
                                  enumFancy_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_fancy.h:13:7: note: 'enumFancy_t' declared here
class enumFancy_t : public kaitai::kstruct {
      ^
4 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_fancy.cpp.o] Error 1
[ 10%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_long_range_u.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_for_unknown_id.cpp:12:5: error: unknown type name 'enum_for_unknown_id_t'; did you mean 'enumForUnknownId_t'?
    enum_for_unknown_id_t* r = new enum_for_unknown_id_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~
    enumForUnknownId_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_for_unknown_id.h:13:7: note: 'enumForUnknownId_t' declared here
class enumForUnknownId_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_for_unknown_id.cpp:12:36: error: unknown type name 'enum_for_unknown_id_t'; did you mean 'enumForUnknownId_t'?
    enum_for_unknown_id_t* r = new enum_for_unknown_id_t(&ks);
                                   ^~~~~~~~~~~~~~~~~~~~~
                                   enumForUnknownId_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_for_unknown_id.h:13:7: note: 'enumForUnknownId_t' declared here
class enumForUnknownId_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_if.cpp:12:5: error: unknown type name 'enum_if_t'; did you mean 'enumIf_t'?
    enum_if_t* r = new enum_if_t(&ks);
    ^~~~~~~~~
    enumIf_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_if.h:13:7: note: 'enumIf_t' declared here
class enumIf_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_if.cpp:12:24: error: unknown type name 'enum_if_t'; did you mean 'enumIf_t'?
    enum_if_t* r = new enum_if_t(&ks);
                       ^~~~~~~~~
                       enumIf_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_if.h:13:7: note: 'enumIf_t' declared here
class enumIf_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_if.cpp:14:43: error: use of undeclared identifier 'enum_if_t'; did you mean 'enumIf_t'?
    BOOST_CHECK_EQUAL(r->op1()->opcode(), enum_if_t::OPCODES_A_STRING);
                                          ^~~~~~~~~
                                          enumIf_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_if.h:13:7: note: 'enumIf_t' declared here
class enumIf_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_for_unknown_id.cpp.o] Error 1
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_if.cpp:16:43: error: use of undeclared identifier 'enum_if_t'; did you mean 'enumIf_t'?
    BOOST_CHECK_EQUAL(r->op2()->opcode(), enum_if_t::OPCODES_A_TUPLE);
                                          ^~~~~~~~~
                                          enumIf_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_if.h:13:7: note: 'enumIf_t' declared here
class enumIf_t : public kaitai::kstruct {
      ^
[ 10%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_negative.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_if.cpp:19:43: error: use of undeclared identifier 'enum_if_t'; did you mean 'enumIf_t'?
    BOOST_CHECK_EQUAL(r->op3()->opcode(), enum_if_t::OPCODES_A_STRING);
                                          ^~~~~~~~~
                                          enumIf_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_if.h:13:7: note: 'enumIf_t' declared here
class enumIf_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_import.cpp:14:5: error: unknown type name 'enum_import_t'; did you mean 'enumImport_t'?
    enum_import_t* r = new enum_import_t(&ks);
    ^~~~~~~~~~~~~
    enumImport_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_import.h:15:7: note: 'enumImport_t' declared here
class enumImport_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_import.cpp:14:28: error: unknown type name 'enum_import_t'; did you mean 'enumImport_t'?
    enum_import_t* r = new enum_import_t(&ks);
                           ^~~~~~~~~~~~~
                           enumImport_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_import.h:15:7: note: 'enumImport_t' declared here
class enumImport_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_import.cpp:17:35: error: use of undeclared identifier 'enum_0_t'; did you mean 'enum0_t'?
    BOOST_CHECK_EQUAL(r->pet_1(), enum_0_t::ANIMAL_CAT);
                                  ^~~~~~~~
                                  enum0_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_0.h:13:7: note: 'enum0_t' declared here
class enum0_t : public kaitai::kstruct {
      ^
5 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_if.cpp.o] Error 1
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_import.cpp:18:35: error: use of undeclared identifier 'enum_deep_t'; did you mean 'enumDeep_t'?
    BOOST_CHECK_EQUAL(r->pet_2(), enum_deep_t::container1_t::container2_t::ANIMAL_HARE);
                                  ^~~~~~~~~~~
                                  enumDeep_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_deep.h:13:7: note: 'enumDeep_t' declared here
class enumDeep_t : public kaitai::kstruct {
      ^
[ 10%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_of_value_inst.cpp.o
4 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_import.cpp.o] Error 1
[ 10%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_to_i.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_int_range_s.cpp:12:5: error: unknown type name 'enum_int_range_s_t'; did you mean 'enumIntRangeS_t'?
    enum_int_range_s_t* r = new enum_int_range_s_t(&ks);
    ^~~~~~~~~~~~~~~~~~
    enumIntRangeS_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_int_range_s.h:13:7: note: 'enumIntRangeS_t' declared here
class enumIntRangeS_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_int_range_s.cpp:12:33: error: unknown type name 'enum_int_range_s_t'; did you mean 'enumIntRangeS_t'?
    enum_int_range_s_t* r = new enum_int_range_s_t(&ks);
                                ^~~~~~~~~~~~~~~~~~
                                enumIntRangeS_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_int_range_s.h:13:7: note: 'enumIntRangeS_t' declared here
class enumIntRangeS_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_int_range_s.cpp:15:32: error: use of undeclared identifier 'enum_int_range_s_t'; did you mean 'enumIntRangeS_t'?
    BOOST_CHECK_EQUAL(r->f1(), enum_int_range_s_t::CONSTANTS_INT_MIN);
                               ^~~~~~~~~~~~~~~~~~
                               enumIntRangeS_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_int_range_s.h:13:7: note: 'enumIntRangeS_t' declared here
class enumIntRangeS_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_int_range_s.cpp:16:32: error: use of undeclared identifier 'enum_int_range_s_t'; did you mean 'enumIntRangeS_t'?
    BOOST_CHECK_EQUAL(r->f2(), enum_int_range_s_t::CONSTANTS_ZERO);
                               ^~~~~~~~~~~~~~~~~~
                               enumIntRangeS_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_int_range_s.h:13:7: note: 'enumIntRangeS_t' declared here
class enumIntRangeS_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_int_range_s.cpp:17:32: error: use of undeclared identifier 'enum_int_range_s_t'; did you mean 'enumIntRangeS_t'?
    BOOST_CHECK_EQUAL(r->f3(), enum_int_range_s_t::CONSTANTS_INT_MAX);
                               ^~~~~~~~~~~~~~~~~~
                               enumIntRangeS_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_int_range_s.h:13:7: note: 'enumIntRangeS_t' declared here
class enumIntRangeS_t : public kaitai::kstruct {
      ^
5 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_int_range_s.cpp.o] Error 1
[ 11%] Building CXX object CMakeFiles/ks_tests.dir/test_enum_to_i_class_border_1.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_int_range_u.cpp:12:5: error: unknown type name 'enum_int_range_u_t'; did you mean 'enumIntRangeU_t'?
    enum_int_range_u_t* r = new enum_int_range_u_t(&ks);
    ^~~~~~~~~~~~~~~~~~
    enumIntRangeU_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_int_range_u.h:13:7: note: 'enumIntRangeU_t' declared here
class enumIntRangeU_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_int_range_u.cpp:12:33: error: unknown type name 'enum_int_range_u_t'; did you mean 'enumIntRangeU_t'?
    enum_int_range_u_t* r = new enum_int_range_u_t(&ks);
                                ^~~~~~~~~~~~~~~~~~
                                enumIntRangeU_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_int_range_u.h:13:7: note: 'enumIntRangeU_t' declared here
class enumIntRangeU_t : public kaitai::kstruct {
      ^
In file included from /Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_s.cpp:4:
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.h:18:31: warning: integer literal is too large to be represented in type 'long' and is subject to undefined behavior under C++98, interpreting as 'unsigned long'; this literal will be ill-formed in C++11 onwards [-Wc++11-compat]
        CONSTANTS_LONG_MIN = -9223372036854775808,
                              ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.h:17:10: /Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_int_range_u.cpp:15:32: error: use of undeclared identifier 'enum_int_range_u_t'; did you mean 'enumIntRangeU_t'?
    BOOST_CHECK_EQUAL(r->f1(), enum_int_range_u_t::CONSTANTS_ZERO);
                               ^~~~~~~~~~~~~~~~~~
                               enumIntRangeU_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_int_range_u.h:13:7: note: 'enumIntRangeU_t' declared here
class enumIntRangeU_t : public kaitai::kstruct {
      ^
warning: enumeration values exceed range of largest integer [-Wenum-too-large]
    enum constants_t {
         ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_int_range_u.cpp:16:32: error: use of undeclared identifier 'enum_int_range_u_t'; did you mean 'enumIntRangeU_t'?
    BOOST_CHECK_EQUAL(r->f2(), enum_int_range_u_t::CONSTANTS_INT_MAX);
                               ^~~~~~~~~~~~~~~~~~
                               enumIntRangeU_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_int_range_u.h:13:7: note: 'enumIntRangeU_t' declared here
class enumIntRangeU_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_invalid.cpp:12:5: error: unknown type name 'enum_invalid_t'; did you mean 'enumInvalid_t'?
    enum_invalid_t* r = new enum_invalid_t(&ks);
    ^~~~~~~~~~~~~~
    enumInvalid_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_invalid.h:13:7: note: 'enumInvalid_t' declared here
class enumInvalid_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_s.cpp:12:5: error: unknown type name 'enum_long_range_s_t'; did you mean 'enumLongRangeS_t'?
    enum_long_range_s_t* r = new enum_long_range_s_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    enumLongRangeS_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.h:13:7: note: 'enumLongRangeS_t' declared here
class enumLongRangeS_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_invalid.cpp:12:29: error: unknown type name 'enum_invalid_t'; did you mean 'enumInvalid_t'?
    enum_invalid_t* r = new enum_invalid_t(&ks);
                            ^~~~~~~~~~~~~~
                            enumInvalid_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_invalid.h:13:7: note: 'enumInvalid_t' declared here
class enumInvalid_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_invalid.cpp:14:35: error: use of undeclared identifier 'enum_invalid_t'; did you mean 'enumInvalid_t'?
    BOOST_CHECK_EQUAL(r->pet_1(), enum_invalid_t::ANIMAL_DOG);
                                  ^~~~~~~~~~~~~~
                                  enumInvalid_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_s.cpp:12:: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
34:    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
 error: unknown type name 'enum_long_range_s_t'; did you mean 'enumLongRangeS_t'?
note    enum_long_range_s_t* r = new enum_long_range_s_t(&ks);: 
                                 ^~~~~~~~~~~~~~~~~~~
                                 enumLongRangeS_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.h:13:7: note: 'enumLongRangeS_t' declared here
(skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)class enumLongRangeS_t : public kaitai::kstruct {
      ^

/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_invalid.h:13:7: note: 'enumInvalid_t' declared here
class enumInvalid_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_s.cpp:15:32: error: use of undeclared identifier 'enum_long_range_s_t'; did you mean 'enumLongRangeS_t'?
    BOOST_CHECK_EQUAL(r->f1(), enum_long_range_s_t::CONSTANTS_LONG_MIN);
                               ^~~~~~~~~~~~~~~~~~~
                               enumLongRangeS_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.h:13:7: note: 'enumLongRangeS_t' declared here
class enumLongRangeS_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_s.cpp:16:32: error: use of undeclared identifier 'enum_long_range_s_t'; did you mean 'enumLongRangeS_t'?
    BOOST_CHECK_EQUAL(r->f2(), enum_long_range_s_t::CONSTANTS_INT_BELOW_MIN);
                               ^~~~~~~~~~~~~~~~~~~
                               enumLongRangeS_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.h:13:7: note: 'enumLongRangeS_t' declared here
class enumLongRangeS_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_s.cpp:17:32: error: use of undeclared identifier 'enum_long_range_s_t'; did you mean 'enumLongRangeS_t'?
    BOOST_CHECK_EQUAL(r->f3(), enum_long_range_s_t::CONSTANTS_INT_MIN);
                               ^~~~~~~~~~~~~~~~~~~
                               enumLongRangeS_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.h:13:7: note: 'enumLongRangeS_t' declared here
class enumLongRangeS_t : public kaitai::kstruct {
      ^
4 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_int_range_u.cpp.o] Error 1
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_s.cpp:18:32: error: use of undeclared identifier 'enum_long_range_s_t'; did you mean 'enumLongRangeS_t'?
    BOOST_CHECK_EQUAL(r->f4(), enum_long_range_s_t::CONSTANTS_ZERO);
                               ^~~~~~~~~~~~~~~~~~~
                               enumLongRangeS_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.h:13:7: note: 'enumLongRangeS_t' declared here
class enumLongRangeS_t : public kaitai::kstruct {
      ^
[ 11%] Building CXX object CMakeFiles/ks_tests.dir/test_eof_exception_bytes.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_s.cpp:19:32: error: use of undeclared identifier 'enum_long_range_s_t'; did you mean 'enumLongRangeS_t'?
    BOOST_CHECK_EQUAL(r->f5(), enum_long_range_s_t::CONSTANTS_INT_MAX);
                               ^~~~~~~~~~~~~~~~~~~
                               enumLongRangeS_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.h:13:7: note: 'enumLongRangeS_t' declared here
class enumLongRangeS_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_s.cpp:20:32: error: use of undeclared identifier 'enum_long_range_s_t'; did you mean 'enumLongRangeS_t'?
    BOOST_CHECK_EQUAL(r->f6(), enum_long_range_s_t::CONSTANTS_INT_OVER_MAX);
                               ^~~~~~~~~~~~~~~~~~~
                               enumLongRangeS_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.h:13:7: note: 'enumLongRangeS_t' declared here
class enumLongRangeS_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_s.cpp:21:32: error: use of undeclared identifier 'enum_long_range_s_t'; did you mean 'enumLongRangeS_t'?
    BOOST_CHECK_EQUAL(r->f7(), enum_long_range_s_t::CONSTANTS_LONG_MAX);
                               ^~~~~~~~~~~~~~~~~~~
                               enumLongRangeS_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.h:13:7: note: 'enumLongRangeS_t' declared here
class enumLongRangeS_t : public kaitai::kstruct {
      ^
3 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_invalid.cpp.o] Error 1
[ 11%] Building CXX object CMakeFiles/ks_tests.dir/test_eof_exception_u4.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_u.cpp:12:5: error: unknown type name 'enum_long_range_u_t'; did you mean 'enumLongRangeU_t'?
    enum_long_range_u_t* r = new enum_long_range_u_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    enumLongRangeU_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_u.h:13:7: note: 'enumLongRangeU_t' declared here
class enumLongRangeU_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_u.cpp:12:34: error: unknown type name 'enum_long_range_u_t'; did you mean 'enumLongRangeU_t'?
    enum_long_range_u_t* r = new enum_long_range_u_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 enumLongRangeU_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_u.h:13:7: note: 'enumLongRangeU_t' declared here
class enumLongRangeU_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_u.cpp:15:32: error: use of undeclared identifier 'enum_long_range_u_t'; did you mean 'enumLongRangeU_t'?
    BOOST_CHECK_EQUAL(r->f1(), enum_long_range_u_t::CONSTANTS_ZERO);
                               ^~~~~~~~~~~~~~~~~~~
                               enumLongRangeU_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_u.h:13:7: note: 'enumLongRangeU_t' declared here
class enumLongRangeU_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_u.cpp:16:32: error: use of undeclared identifier 'enum_long_range_u_t'; did you mean 'enumLongRangeU_t'?
    BOOST_CHECK_EQUAL(r->f2(), enum_long_range_u_t::CONSTANTS_INT_MAX);
                               ^~~~~~~~~~~~~~~~~~~
                               enumLongRangeU_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_u.h:13:7: note: 'enumLongRangeU_t' declared here
class enumLongRangeU_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_u.cpp:17:32: error: use of undeclared identifier 'enum_long_range_u_t'; did you mean 'enumLongRangeU_t'?
    BOOST_CHECK_EQUAL(r->f3(), enum_long_range_u_t::CONSTANTS_INT_OVER_MAX);
                               ^~~~~~~~~~~~~~~~~~~
                               enumLongRangeU_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
2 warnings and 9 errors generated.
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_u.h:13:7: note: 'enumLongRangeU_t' declared here
class enumLongRangeU_t : public kaitai::kstruct {
      ^
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_long_range_s.cpp.o] Error 1
[ 12%] Building CXX object CMakeFiles/ks_tests.dir/test_eos_exception_bytes.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_long_range_u.cpp:18:32: error: use of undeclared identifier 'enum_long_range_u_t'; did you mean 'enumLongRangeU_t'?
    BOOST_CHECK_EQUAL(r->f4(), enum_long_range_u_t::CONSTANTS_LONG_MAX);
                               ^~~~~~~~~~~~~~~~~~~
                               enumLongRangeU_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_u.h:13:7: note: 'enumLongRangeU_t' declared here
class enumLongRangeU_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_negative.cpp:12:5: error: unknown type name 'enum_negative_t'; did you mean 'enumNegative_t'?
    enum_negative_t* r = new enum_negative_t(&ks);
    ^~~~~~~~~~~~~~~
    enumNegative_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_negative.h:13:7: note: 'enumNegative_t' declared here
class enumNegative_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_negative.cpp:12:30: error: unknown type name 'enum_negative_t'; did you mean 'enumNegative_t'?
    enum_negative_t* r = new enum_negative_t(&ks);
                             ^~~~~~~~~~~~~~~
                             enumNegative_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_negative.h:13:7: note: 'enumNegative_t' declared here
class enumNegative_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_negative.cpp:14:32: error: use of undeclared identifier 'enum_negative_t'; did you mean 'enumNegative_t'?
    BOOST_CHECK_EQUAL(r->f1(), enum_negative_t::CONSTANTS_NEGATIVE_ONE);
                               ^~~~~~~~~~~~~~~
                               enumNegative_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_negative.h:13:7: note: 'enumNegative_t' declared here
class enumNegative_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_negative.cpp:15:32: error: use of undeclared identifier 'enum_negative_t'; did you mean 'enumNegative_t'?
    BOOST_CHECK_EQUAL(r->f2(), enum_negative_t::CONSTANTS_POSITIVE_ONE);
                               ^~~~~~~~~~~~~~~
                               enumNegative_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_negative.h:13:7: note: 'enumNegative_t' declared here
class enumNegative_t : public kaitai::kstruct {
      ^
6 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_long_range_u.cpp.o] Error 1
[ 12%] Building CXX object CMakeFiles/ks_tests.dir/test_eos_exception_u4.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_of_value_inst.cpp:12:5: error: unknown type name 'enum_of_value_inst_t'; did you mean 'enumOfValueInst_t'?
    enum_of_value_inst_t* r = new enum_of_value_inst_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    enumOfValueInst_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_of_value_inst.h:13:7: note: 'enumOfValueInst_t' declared here
class enumOfValueInst_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_of_value_inst.cpp:12:35: error: unknown type name 'enum_of_value_inst_t'; did you mean 'enumOfValueInst_t'?
    enum_of_value_inst_t* r = new enum_of_value_inst_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  enumOfValueInst_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_of_value_inst.h:13:7: note: 'enumOfValueInst_t' declared here
class enumOfValueInst_t : public kaitai::kstruct {
      ^
4 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_negative.cpp.o] Error 1
[ 12%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_0.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_of_value_inst.cpp:14:35: error: use of undeclared identifier 'enum_of_value_inst_t'; did you mean 'enumOfValueInst_t'?
    BOOST_CHECK_EQUAL(r->pet_1(), enum_of_value_inst_t::ANIMAL_CAT);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  enumOfValueInst_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_of_value_inst.h:13:7: note: 'enumOfValueInst_t' declared here
class enumOfValueInst_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_of_value_inst.cpp:15:35: error: use of undeclared identifier 'enum_of_value_inst_t'; did you mean 'enumOfValueInst_t'?
    BOOST_CHECK_EQUAL(r->pet_2(), enum_of_value_inst_t::ANIMAL_CHICKEN);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  enumOfValueInst_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_of_value_inst.h:13:7: note: 'enumOfValueInst_t' declared here
class enumOfValueInst_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_of_value_inst.cpp:16:35: error: use of undeclared identifier 'enum_of_value_inst_t'; did you mean 'enumOfValueInst_t'?
    BOOST_CHECK_EQUAL(r->pet_3(), enum_of_value_inst_t::ANIMAL_DOG);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  enumOfValueInst_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_of_value_inst.h:13:7: note: 'enumOfValueInst_t' declared here
class enumOfValueInst_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_of_value_inst.cpp:17:35: error: use of undeclared identifier 'enum_of_value_inst_t'; did you mean 'enumOfValueInst_t'?
    BOOST_CHECK_EQUAL(r->pet_4(), enum_of_value_inst_t::ANIMAL_DOG);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  enumOfValueInst_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_of_value_inst.h:13:7: note: 'enumOfValueInst_t' declared here
class enumOfValueInst_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_to_i.cpp:12:5: error: unknown type name 'enum_to_i_t'
    enum_to_i_t* r = new enum_to_i_t(&ks);
    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_to_i.cpp:12:26: error: unknown type name 'enum_to_i_t'
    enum_to_i_t* r = new enum_to_i_t(&ks);
                         ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_to_i.cpp:14:35: error: use of undeclared identifier 'enum_to_i_t'
    BOOST_CHECK_EQUAL(r->pet_1(), enum_to_i_t::ANIMAL_CAT);
                                  ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_to_i.cpp:15:35: error: use of undeclared identifier 'enum_to_i_t'
    BOOST_CHECK_EQUAL(r->pet_2(), enum_to_i_t::ANIMAL_CHICKEN);
                                  ^
6 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_of_value_inst.cpp.o] Error 1
[ 12%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_1.cpp.o
4 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_to_i.cpp.o] Error 1
[ 13%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_2.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_to_i_class_border_1.cpp:13:5: error: unknown type name 'enum_to_i_class_border_1_t'
    enum_to_i_class_border_1_t* r = new enum_to_i_class_border_1_t(&ks);
    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_to_i_class_border_1.cpp:13:41: error: unknown type name 'enum_to_i_class_border_1_t'
    enum_to_i_class_border_1_t* r = new enum_to_i_class_border_1_t(&ks);
                                        ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_to_i_class_border_1.cpp:16:35: error: use of undeclared identifier 'enum_to_i_class_border_1_t'
    BOOST_CHECK_EQUAL(r->pet_1(), enum_to_i_class_border_1_t::ANIMAL_CAT);
                                  ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_enum_to_i_class_border_1.cpp:17:35: error: use of undeclared identifier 'enum_to_i_class_border_1_t'
    BOOST_CHECK_EQUAL(r->pet_2(), enum_to_i_class_border_1_t::ANIMAL_CHICKEN);
                                  ^
4 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_enum_to_i_class_border_1.cpp.o] Error 1
[ 13%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_3.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_eof_exception_bytes.cpp:13:5: error: unknown type name 'eof_exception_bytes_t'; did you mean 'eofExceptionBytes_t'?
    eof_exception_bytes_t* r = 0;
    ^~~~~~~~~~~~~~~~~~~~~
    eofExceptionBytes_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/eof_exception_bytes.h:13:7: note: 'eofExceptionBytes_t' declared here
class eofExceptionBytes_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_eof_exception_bytes.cpp:15:17: error: unknown type name 'eof_exception_bytes_t'; did you mean 'eofExceptionBytes_t'?
        r = new eof_exception_bytes_t(&ks),
                ^~~~~~~~~~~~~~~~~~~~~
                eofExceptionBytes_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/eof_exception_bytes.h:13:7: note: 'eofExceptionBytes_t' declared here
class eofExceptionBytes_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_eof_exception_u4.cpp:13:5: error: unknown type name 'eof_exception_u4_t'; did you mean 'eofExceptionU4_t'?
    eof_exception_u4_t* r = 0;
    ^~~~~~~~~~~~~~~~~~
    eofExceptionU4_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/eof_exception_u4.h:13:7: note: 'eofExceptionU4_t' declared here
class eofExceptionU4_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_eos_exception_bytes.cpp:13:5: error: unknown type name 'eos_exception_bytes_t'; did you mean 'eosExceptionBytes_t'?
    eos_exception_bytes_t* r = 0;
    ^~~~~~~~~~~~~~~~~~~~~
    eosExceptionBytes_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/eos_exception_bytes.h:13:7: note: 'eosExceptionBytes_t' declared here
class eosExceptionBytes_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_eof_exception_u4.cpp:15:17: error: unknown type name 'eof_exception_u4_t'; did you mean 'eofExceptionU4_t'?
        r = new eof_exception_u4_t(&ks),
                ^~~~~~~~~~~~~~~~~~
                eofExceptionU4_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/eof_exception_u4.h:13:7: note: 'eofExceptionU4_t' declared here
class eofExceptionU4_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_eos_exception_bytes.cpp:15:17: error: unknown type name 'eos_exception_bytes_t'; did you mean 'eosExceptionBytes_t'?
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_eof_exception_bytes.cpp.o] Error 1
        r = new eos_exception_bytes_t(&ks),
                ^~~~~~~~~~~~~~~~~~~~~
                eosExceptionBytes_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/eos_exception_bytes.h:13:7: note: 'eosExceptionBytes_t' declared here
class eosExceptionBytes_t : public kaitai::kstruct {
      ^
[ 13%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_array.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_eof_exception_u4.cpp.o] Error 1
[ 13%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_bits.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_eos_exception_bytes.cpp.o] Error 1
[ 14%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_bytes_cmp.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_eos_exception_u4.cpp:13:5: error: unknown type name 'eos_exception_u4_t'; did you mean 'eosExceptionU4_t'?
    eos_exception_u4_t* r = 0;
    ^~~~~~~~~~~~~~~~~~
    eosExceptionU4_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/eos_exception_u4.h:13:7: note: 'eosExceptionU4_t' declared here
class eosExceptionU4_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_eos_exception_u4.cpp:15:17: error: unknown type name 'eos_exception_u4_t'; did you mean 'eosExceptionU4_t'?
        r = new eos_exception_u4_t(&ks),
                ^~~~~~~~~~~~~~~~~~
                eosExceptionU4_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/eos_exception_u4.h:13:7: note: 'eosExceptionU4_t' declared here
class eosExceptionU4_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_0.cpp:12:5: error: unknown type name 'expr_0_t'; did you mean 'expr0_t'?
    expr_0_t* r = new expr_0_t(&ks);
    ^~~~~~~~
    expr0_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_0.h:13:7: note: 'expr0_t' declared here
class expr0_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_0.cpp:12:23: error: unknown type name 'expr_0_t'; did you mean 'expr0_t'?
    expr_0_t* r = new expr_0_t(&ks);
                      ^~~~~~~~
                      expr0_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_0.h:13:7: note: 'expr0_t' declared here
class expr0_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_eos_exception_u4.cpp.o] Error 1
[ 14%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_bytes_ops.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_0.cpp.o] Error 1
[ 14%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_calc_array_ops.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_1.cpp:12:5: error: unknown type name 'expr_1_t'; did you mean 'expr1_t'?
    expr_1_t* r = new expr_1_t(&ks);
    ^~~~~~~~
    expr1_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_1.h:13:7: note: 'expr1_t' declared here
class expr1_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_1.cpp:12:23: error: unknown type name 'expr_1_t'; did you mean 'expr1_t'?
    expr_1_t* r = new expr_1_t(&ks);
                      ^~~~~~~~
                      expr1_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_1.h:13:7: note: 'expr1_t' declared here
class expr1_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_2.cpp:12:5:2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_1.cpp.o] Error 1
 [ 14%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_enum.cpp.o
error: unknown type name 'expr_2_t'; did you mean 'expr2_t'?
    expr_2_t* r = new expr_2_t(&ks);
    ^~~~~~~~
    expr2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_2.h:13:7: note: 'expr2_t' declared here
class expr2_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_2.cpp:12:23: error: unknown type name 'expr_2_t'; did you mean 'expr2_t'?
    expr_2_t* r = new expr_2_t(&ks);
                      ^~~~~~~~
                      expr2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_2.h:13:7: note: 'expr2_t' declared here
class expr2_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_2.cpp.o] Error 1
[ 15%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_io_eof.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_3.cpp:12:5: error: unknown type name 'expr_3_t'; did you mean 'expr3_t'?
    expr_3_t* r = new expr_3_t(&ks);
    ^~~~~~~~
    expr3_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_3.h:13:7: note: 'expr3_t' declared here
class expr3_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_3.cpp:12:23: error: unknown type name 'expr_3_t'; did you mean 'expr3_t'?
    expr_3_t* r = new expr_3_t(&ks);
                      ^~~~~~~~
                      expr3_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_3.h:13:7: note: 'expr3_t' declared here
class expr3_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_3.cpp.o] Error 1
[ 15%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_io_pos.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_array.cpp:12:5: error: unknown type name 'expr_array_t'; did you mean 'exprArray_t'?
    expr_array_t* r = new expr_array_t(&ks);
    ^~~~~~~~~~~~
    exprArray_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_array.h:14:7: note: 'exprArray_t' declared here
class exprArray_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_array.cpp:12:27: error: unknown type name 'expr_array_t'; did you mean 'exprArray_t'?
    expr_array_t* r = new expr_array_t(&ks);
                          ^~~~~~~~~~~~
                          exprArray_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_array.h:14:7: note: 'exprArray_t' declared here
class exprArray_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_bits.cpp:13:5: error: unknown type name 'expr_bits_t'; did you mean 'exprBits_t'?
    expr_bits_t* r = new expr_bits_t(&ks);
    ^~~~~~~~~~~
    exprBits_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_bits.h:14:7: note: 'exprBits_t' declared here
class exprBits_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_bits.cpp:13:26: error: unknown type name 'expr_bits_t'; did you mean 'exprBits_t'?
    expr_bits_t* r = new expr_bits_t(&ks);
                         ^~~~~~~~~~~
                         exprBits_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_bits.h:14:7: note: 'exprBits_t' declared here
class exprBits_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_bits.cpp:17:38: error: use of undeclared identifier 'expr_bits_t'; did you mean 'exprBits_t'?
    BOOST_CHECK_EQUAL(r->enum_seq(), expr_bits_t::ITEMS_FOO);
                                     ^~~~~~~~~~~
                                     exprBits_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_bits.h:14:7: note: 'exprBits_t' declared here
class exprBits_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_bytes_cmp.cpp:12:5: error: unknown type name 'expr_bytes_cmp_t'; did you mean 'exprBytesCmp_t'?
    expr_bytes_cmp_t* r = new expr_bytes_cmp_t(&ks);
    ^~~~~~~~~~~~~~~~
    exprBytesCmp_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_bytes_cmp.h:13:7: note: 'exprBytesCmp_t' declared here
class exprBytesCmp_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_bytes_cmp.cpp:12:31: error: unknown type name 'expr_bytes_cmp_t'; did you mean 'exprBytesCmp_t'?
    expr_bytes_cmp_t* r = new expr_bytes_cmp_t(&ks);
                              ^~~~~~~~~~~~~~~~
                              exprBytesCmp_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_bytes_cmp.h:13:7: note: 'exprBytesCmp_t' declared here
class exprBytesCmp_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_bits.cpp:24:39: error: use of undeclared identifier 'expr_bits_t'; did you mean 'exprBits_t'?
    BOOST_CHECK_EQUAL(r->enum_inst(), expr_bits_t::ITEMS_BAR);
                                      ^~~~~~~~~~~
                                      exprBits_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_bits.h:14:7: note: 'exprBits_t' declared here
class exprBits_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_array.cpp.o] Error 1
[ 15%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_mod.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_bytes_cmp.cpp.o] Error 1
[ 15%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_sizeof_type_0.cpp.o
4 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_bits.cpp.o] Error 1
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_bytes_ops.cpp:12:5: error: unknown type name 'expr_bytes_ops_t'; did you mean 'exprBytesOps_t'?
    expr_bytes_ops_t* r = new expr_bytes_ops_t(&ks);
    ^~~~~~~~~~~~~~~~
    exprBytesOps_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_bytes_ops.h:13:7: note: 'exprBytesOps_t' declared here
class exprBytesOps_t : public kaitai::kstruct {
      ^
[ 16%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_sizeof_type_1.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_bytes_ops.cpp:12:31: error: unknown type name 'expr_bytes_ops_t'; did you mean 'exprBytesOps_t'?
    expr_bytes_ops_t* r = new expr_bytes_ops_t(&ks);
                              ^~~~~~~~~~~~~~~~
                              exprBytesOps_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_bytes_ops.h:13:7: note: 'exprBytesOps_t' declared here
class exprBytesOps_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_calc_array_ops.cpp:4:10: fatal error: 'expr_calc_array_ops.h' file not found
#include <expr_calc_array_ops.h>
         ^~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_calc_array_ops.cpp.o] Error 1
[ 16%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_sizeof_value_0.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_bytes_ops.cpp.o] Error 1
[ 16%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_sizeof_value_sized.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_enum.cpp:12:5: error: unknown type name 'expr_enum_t'; did you mean 'exprEnum_t'?
    expr_enum_t* r = new expr_enum_t(&ks);
    ^~~~~~~~~~~
    exprEnum_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_enum.h:13:7: note: 'exprEnum_t' declared here
class exprEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_enum.cpp:12:26: error: unknown type name 'expr_enum_t'; did you mean 'exprEnum_t'?
    expr_enum_t* r = new expr_enum_t(&ks);
                         ^~~~~~~~~~~
                         exprEnum_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_enum.h:13:7: note: 'exprEnum_t' declared here
class exprEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_enum.cpp:14:39: error: use of undeclared identifier 'expr_enum_t'; did you mean 'exprEnum_t'?
    BOOST_CHECK_EQUAL(r->const_dog(), expr_enum_t::ANIMAL_DOG);
                                      ^~~~~~~~~~~
                                      exprEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_enum.h:13:7: note: 'exprEnum_t' declared here
class exprEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_enum.cpp:15:42: error: use of undeclared identifier 'expr_enum_t'; did you mean 'exprEnum_t'?
    BOOST_CHECK_EQUAL(r->derived_boom(), expr_enum_t::ANIMAL_BOOM);
                                         ^~~~~~~~~~~
                                         exprEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_enum.h:13:7: note: 'exprEnum_t' declared here
class exprEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_enum.cpp:16:41: error: use of undeclared identifier 'expr_enum_t'; did you mean 'exprEnum_t'?
    BOOST_CHECK_EQUAL(r->derived_dog(), expr_enum_t::ANIMAL_DOG);
                                        ^~~~~~~~~~~
                                        exprEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_enum.h:13:7: note: 'exprEnum_t' declared here
class exprEnum_t : public kaitai::kstruct {
      ^
5 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_enum.cpp.o] Error 1
[ 16%] Building CXX object CMakeFiles/ks_tests.dir/test_expr_str_ops.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_io_eof.cpp:12:5: error: unknown type name 'expr_io_eof_t'; did you mean 'exprIoEof_t'?
    expr_io_eof_t* r = new expr_io_eof_t(&ks);
    ^~~~~~~~~~~~~
    exprIoEof_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_io_eof.h:13:7: note: 'exprIoEof_t' declared here
class exprIoEof_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_io_eof.cpp:12:28: error: unknown type name 'expr_io_eof_t'; did you mean 'exprIoEof_t'?
    expr_io_eof_t* r = new expr_io_eof_t(&ks);
                           ^~~~~~~~~~~~~
                           exprIoEof_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_io_eof.h:13:7: note: 'exprIoEof_t' declared here
class exprIoEof_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_io_eof.cpp.o] Error 1
[ 17%] Building CXX object CMakeFiles/ks_tests.dir/test_fixed_contents.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_io_pos.cpp:12:5: error: unknown type name 'expr_io_pos_t'; did you mean 'exprIoPos_t'?
    expr_io_pos_t* r = new expr_io_pos_t(&ks);
    ^~~~~~~~~~~~~
    exprIoPos_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_io_pos.h:13:7: note: 'exprIoPos_t' declared here
class exprIoPos_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_io_pos.cpp:12:28: error: unknown type name 'expr_io_pos_t'; did you mean 'exprIoPos_t'?
    expr_io_pos_t* r = new expr_io_pos_t(&ks);
                           ^~~~~~~~~~~~~
                           exprIoPos_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_io_pos.h:13:7: note: 'exprIoPos_t' declared here
class exprIoPos_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_io_pos.cpp.o] Error 1
[ 17%] Building CXX object CMakeFiles/ks_tests.dir/test_fixed_struct.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_mod.cpp:12:5: error: unknown type name 'expr_mod_t'; did you mean 'exprMod_t'?
    expr_mod_t* r = new expr_mod_t(&ks);
    ^~~~~~~~~~
    exprMod_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_mod.h:13:7: note: 'exprMod_t' declared here
class exprMod_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_mod.cpp:12:25: error: unknown type name 'expr_mod_t'; did you mean 'exprMod_t'?
    expr_mod_t* r = new expr_mod_t(&ks);
                        ^~~~~~~~~~
                        exprMod_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_mod.h:13:7: note: 'exprMod_t' declared here
class exprMod_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_sizeof_type_0.cpp:12:5: error: unknown type name 'expr_sizeof_type_0_t'; did you mean 'exprSizeofType0_t'?
    expr_sizeof_type_0_t* r = new expr_sizeof_type_0_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    exprSizeofType0_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_sizeof_type_0.h:13:7: note: 'exprSizeofType0_t' declared here
class exprSizeofType0_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_sizeof_type_0.cpp:12:35: error: unknown type name 'expr_sizeof_type_0_t'; did you mean 'exprSizeofType0_t'?
    expr_sizeof_type_0_t* r = new expr_sizeof_type_0_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  exprSizeofType0_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_sizeof_type_0.h:13:7: note: 'exprSizeofType0_t' declared here
class exprSizeofType0_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_sizeof_type_1.cpp:12:5: error: unknown type name 'expr_sizeof_type_1_t'; did you mean 'exprSizeofType1_t'?
    expr_sizeof_type_1_t* r = new expr_sizeof_type_1_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    exprSizeofType1_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_sizeof_type_1.h:13:7: note: 'exprSizeofType1_t' declared here
class exprSizeofType1_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_sizeof_type_1.cpp:12:35: error: unknown type name 'expr_sizeof_type_1_t'; did you mean 'exprSizeofType1_t'?
    expr_sizeof_type_1_t* r = new expr_sizeof_type_1_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  exprSizeofType1_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_sizeof_type_1.h:13:7: note: 'exprSizeofType1_t' declared here
class exprSizeofType1_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_mod.cpp.o] Error 1
[ 17%] Building CXX object CMakeFiles/ks_tests.dir/test_float_to_i.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_sizeof_type_0.cpp.o] Error 1
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_sizeof_value_0.cpp:12:5: error: unknown type name 'expr_sizeof_value_0_t'; did you mean 'exprSizeofValue0_t'?
    expr_sizeof_value_0_t* r = new expr_sizeof_value_0_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~
    exprSizeofValue0_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_sizeof_value_0.h:13:7: note: 'exprSizeofValue0_t' declared here
class exprSizeofValue0_t : public kaitai::kstruct {
      ^
[ 17%] Building CXX object CMakeFiles/ks_tests.dir/test_floating_points.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_sizeof_value_0.cpp:12:36: error: unknown type name 'expr_sizeof_value_0_t'; did you mean 'exprSizeofValue0_t'?
    expr_sizeof_value_0_t* r = new expr_sizeof_value_0_t(&ks);
                                   ^~~~~~~~~~~~~~~~~~~~~
                                   exprSizeofValue0_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_sizeof_value_0.h:13:7: note: 'exprSizeofValue0_t' declared here
class exprSizeofValue0_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_sizeof_type_1.cpp.o] Error 1
[ 18%] Building CXX object CMakeFiles/ks_tests.dir/test_hello_world.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_sizeof_value_sized.cpp:12:5: error: unknown type name 'expr_sizeof_value_sized_t'; did you mean 'exprSizeofValueSized_t'?
    expr_sizeof_value_sized_t* r = new expr_sizeof_value_sized_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~~~
    exprSizeofValueSized_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_sizeof_value_sized.h:13:7: note: 'exprSizeofValueSized_t' declared here
class exprSizeofValueSized_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_sizeof_value_sized.cpp:12:40: error: unknown type name 'expr_sizeof_value_sized_t'; did you mean 'exprSizeofValueSized_t'?
    expr_sizeof_value_sized_t* r = new expr_sizeof_value_sized_t(&ks);
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
                                       exprSizeofValueSized_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_sizeof_value_sized.h:13:7: note: 'exprSizeofValueSized_t' declared here
class exprSizeofValueSized_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_sizeof_value_0.cpp.o] Error 1
[ 18%] Building CXX object CMakeFiles/ks_tests.dir/test_if_instances.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_sizeof_value_sized.cpp.o] Error 1
[ 18%] Building CXX object CMakeFiles/ks_tests.dir/test_if_struct.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_str_ops.cpp:13:5: error: unknown type name 'expr_str_ops_t'; did you mean 'exprStrOps_t'?
    expr_str_ops_t* r = new expr_str_ops_t(&ks);
    ^~~~~~~~~~~~~~
    exprStrOps_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_str_ops.h:13:7: note: 'exprStrOps_t' declared here
class exprStrOps_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_expr_str_ops.cpp:13:29: error: unknown type name 'expr_str_ops_t'; did you mean 'exprStrOps_t'?
    expr_str_ops_t* r = new expr_str_ops_t(&ks);
                            ^~~~~~~~~~~~~~
                            exprStrOps_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_str_ops.h:13:7: note: 'exprStrOps_t' declared here
class exprStrOps_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_expr_str_ops.cpp.o] Error 1
[ 18%] Building CXX object CMakeFiles/ks_tests.dir/test_if_values.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_fixed_contents.cpp:12:5: error: unknown type name 'fixed_contents_t'; did you mean 'fixedContents_t'?
    fixed_contents_t* r = new fixed_contents_t(&ks);
    ^~~~~~~~~~~~~~~~
    fixedContents_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/fixed_contents.h:13:7: note: 'fixedContents_t' declared here
class fixedContents_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_fixed_contents.cpp:12:31: error: unknown type name 'fixed_contents_t'; did you mean 'fixedContents_t'?
    fixed_contents_t* r = new fixed_contents_t(&ks);
                              ^~~~~~~~~~~~~~~~
                              fixedContents_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/fixed_contents.h:13:7: note: 'fixedContents_t' declared here
class fixedContents_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_fixed_contents.cpp.o] Error 1
[ 19%] Building CXX object CMakeFiles/ks_tests.dir/test_imports0.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_fixed_struct.cpp:13:5: error: unknown type name 'fixed_struct_t'; did you mean 'fixedStruct_t'?
    fixed_struct_t* r = new fixed_struct_t(&ks);
    ^~~~~~~~~~~~~~
    fixedStruct_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/fixed_struct.h:13:7: note: 'fixedStruct_t' declared here
class fixedStruct_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_fixed_struct.cpp:13:29: error: unknown type name 'fixed_struct_t'; did you mean 'fixedStruct_t'?
    fixed_struct_t* r = new fixed_struct_t(&ks);
                            ^~~~~~~~~~~~~~
                            fixedStruct_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/fixed_struct.h:13:7: note: 'fixedStruct_t' declared here
class fixedStruct_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_fixed_struct.cpp.o] Error 1
[ 19%] Building CXX object CMakeFiles/ks_tests.dir/test_imports_abs.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_float_to_i.cpp:12:5: error: unknown type name 'float_to_i_t'; did you mean 'floatToI_t'?
    float_to_i_t* r = new float_to_i_t(&ks);
    ^~~~~~~~~~~~
    floatToI_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/float_to_i.h:13:7: note: 'floatToI_t' declared here
class floatToI_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_float_to_i.cpp:12:27: error: unknown type name 'float_to_i_t'; did you mean 'floatToI_t'?
    float_to_i_t* r = new float_to_i_t(&ks);
                          ^~~~~~~~~~~~
                          floatToI_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/float_to_i.h:13:7: note: 'floatToI_t' declared here
class floatToI_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_floating_points.cpp:12:5: error: unknown type name 'floating_points_t'; did you mean 'floatingPoints_t'?
    floating_points_t* r = new floating_points_t(&ks);
    ^~~~~~~~~~~~~~~~~
    floatingPoints_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/floating_points.h:13:7: note: 'floatingPoints_t' declared here
class floatingPoints_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_floating_points.cpp:12:32: error: unknown type name 'floating_points_t'; did you mean 'floatingPoints_t'?
    floating_points_t* r = new floating_points_t(&ks);
                               ^~~~~~~~~~~~~~~~~
                               floatingPoints_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/floating_points.h:13:7: note: 'floatingPoints_t' declared here
class floatingPoints_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_hello_world.cpp:12:5: error: unknown type name 'hello_world_t'; did you mean 'helloWorld_t'?
    hello_world_t* r = new hello_world_t(&ks);
    ^~~~~~~~~~~~~
    helloWorld_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/hello_world.h:13:7: note: 'helloWorld_t' declared here
class helloWorld_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_hello_world.cpp:12:28: error: unknown type name 'hello_world_t'; did you mean 'helloWorld_t'?
    hello_world_t* r = new hello_world_t(&ks);
                           ^~~~~~~~~~~~~
                           helloWorld_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/hello_world.h:13:7: note: 'helloWorld_t' declared here
class helloWorld_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_float_to_i.cpp.o] Error 1
[ 19%] Building CXX object CMakeFiles/ks_tests.dir/test_imports_abs_abs.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_if_instances.cpp:12:5: error: unknown type name 'if_instances_t'; did you mean 'ifInstances_t'?
    if_instances_t* r = new if_instances_t(&ks);
    ^~~~~~~~~~~~~~
    ifInstances_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/if_instances.h:13:7: note: 'ifInstances_t' declared here
class ifInstances_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_if_instances.cpp:12:29: error: unknown type name 'if_instances_t'; did you mean 'ifInstances_t'?
    if_instances_t* r = new if_instances_t(&ks);
                            ^~~~~~~~~~~~~~
                            ifInstances_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/if_instances.h:13:7: note: 'ifInstances_t' declared here
class ifInstances_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_hello_world.cpp.o] Error 1
[ 19%] Building CXX object CMakeFiles/ks_tests.dir/test_imports_abs_rel.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_floating_points.cpp.o] Error 1
[ 20%] Building CXX object CMakeFiles/ks_tests.dir/test_imports_circular_a.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_if_struct.cpp:12:5: error: unknown type name 'if_struct_t'; did you mean 'ifStruct_t'?
    if_struct_t* r = new if_struct_t(&ks);
    ^~~~~~~~~~~
    ifStruct_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/if_struct.h:13:7: note: 'ifStruct_t' declared here
class ifStruct_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_if_struct.cpp:12:26: error: unknown type name 'if_struct_t'; did you mean 'ifStruct_t'?
    if_struct_t* r = new if_struct_t(&ks);
                         ^~~~~~~~~~~
                         ifStruct_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/if_struct.h:13:7: note: 'ifStruct_t' declared here
class ifStruct_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_if_instances.cpp.o] Error 1
[ 20%] Building CXX object CMakeFiles/ks_tests.dir/test_imports_rel_1.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_if_struct.cpp.o] Error 1
[ 20%] Building CXX object CMakeFiles/ks_tests.dir/test_index_sizes.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_if_values.cpp:12:5: error: unknown type name 'if_values_t'; did you mean 'ifValues_t'?
    if_values_t* r = new if_values_t(&ks);
    ^~~~~~~~~~~
    ifValues_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/if_values.h:14:7: note: 'ifValues_t' declared here
class ifValues_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_if_values.cpp:12:26: error: unknown type name 'if_values_t'; did you mean 'ifValues_t'?
    if_values_t* r = new if_values_t(&ks);
                         ^~~~~~~~~~~
                         ifValues_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/if_values.h:14:7: note: 'ifValues_t' declared here
class ifValues_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_if_values.cpp.o] Error 1
[ 20%] Building CXX object CMakeFiles/ks_tests.dir/test_index_to_param_eos.cpp.o
[ 21%] Building CXX object CMakeFiles/ks_tests.dir/test_index_to_param_expr.cpp.o
In file included from /Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_imports_abs.cpp:4:
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs.h:8:10: fatal error: '/common/vlq_base128_le.h' file not found
#include "/common/vlq_base128_le.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_imports_abs.cpp.o] Error 1
[ 21%] Building CXX object CMakeFiles/ks_tests.dir/test_index_to_param_until.cpp.o
In file included from /Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_imports_abs_abs.cpp:3:
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs_abs.h:8:10: fatal error: '/for_abs_imports/imported_and_abs.h' file not found
#include "/for_abs_imports/imported_and_abs.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_imports_abs_rel.cpp:3:
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs_rel.h:8:10: fatal error: '/for_abs_imports/imported_and_rel.h' file not found
#include "/for_abs_imports/imported_and_rel.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_imports_abs_abs.cpp.o] Error 1
[ 21%] Building CXX object CMakeFiles/ks_tests.dir/test_instance_io_user.cpp.o
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_imports_abs_rel.cpp.o] Error 1
[ 21%] Building CXX object CMakeFiles/ks_tests.dir/test_instance_std.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_imports_circular_a.cpp:13:5: error: unknown type name 'imports_circular_a_t'
    imports_circular_a_t* r = new imports_circular_a_t(&ks);
    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_imports_circular_a.cpp:13:35: error: unknown type name 'imports_circular_a_t'
    imports_circular_a_t* r = new imports_circular_a_t(&ks);
                                  ^
In file included from /Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_imports_rel_1.cpp:3:
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_rel_1.h:8:10: fatal error: 'for_rel_imports/imported_1.h' file not found
#include "for_rel_imports/imported_1.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_imports_rel_1.cpp.o] Error 1
[ 22%] Building CXX object CMakeFiles/ks_tests.dir/test_instance_std_array.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_imports_circular_a.cpp.o] Error 1
[ 22%] Building CXX object CMakeFiles/ks_tests.dir/test_instance_user_array.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_index_sizes.cpp:12:5: error: unknown type name 'index_sizes_t'; did you mean 'indexSizes_t'?
    index_sizes_t* r = new index_sizes_t(&ks);
    ^~~~~~~~~~~~~
    indexSizes_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/index_sizes.h:14:7: note: 'indexSizes_t' declared here
class indexSizes_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_index_sizes.cpp:12:28: error: unknown type name 'index_sizes_t'; did you mean 'indexSizes_t'?
    index_sizes_t* r = new index_sizes_t(&ks);
                           ^~~~~~~~~~~~~
                           indexSizes_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/index_sizes.h:14:7: note: 'indexSizes_t' declared here
class indexSizes_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_index_sizes.cpp.o] Error 1
[ 22%] Building CXX object CMakeFiles/ks_tests.dir/test_integers.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_index_to_param_eos.cpp:12:5: error: unknown type name 'index_to_param_eos_t'; did you mean 'indexToParamEos_t'?
    index_to_param_eos_t* r = new index_to_param_eos_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    indexToParamEos_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/index_to_param_eos.h:14:7: note: 'indexToParamEos_t' declared here
class indexToParamEos_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_index_to_param_eos.cpp:12:35: error: unknown type name 'index_to_param_eos_t'; did you mean 'indexToParamEos_t'?
    index_to_param_eos_t* r = new index_to_param_eos_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  indexToParamEos_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/index_to_param_eos.h:14:7: note: 'indexToParamEos_t' declared here
class indexToParamEos_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_index_to_param_eos.cpp.o] Error 1
[ 23%] Building CXX object CMakeFiles/ks_tests.dir/test_io_local_var.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_index_to_param_expr.cpp:12:5: error: unknown type name 'index_to_param_expr_t'; did you mean 'indexToParamExpr_t'?
    index_to_param_expr_t* r = new index_to_param_expr_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~
    indexToParamExpr_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/index_to_param_expr.h:14:7: note: 'indexToParamExpr_t' declared here
class indexToParamExpr_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_index_to_param_expr.cpp:12:36: error: unknown type name 'index_to_param_expr_t'; did you mean 'indexToParamExpr_t'?
    index_to_param_expr_t* r = new index_to_param_expr_t(&ks);
                                   ^~~~~~~~~~~~~~~~~~~~~
                                   indexToParamExpr_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/index_to_param_expr.h:14:7: note: 'indexToParamExpr_t' declared here
class indexToParamExpr_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_index_to_param_until.cpp:12:5: error: unknown type name 'index_to_param_until_t'; did you mean 'indexToParamUntil_t'?
    index_to_param_until_t* r = new index_to_param_until_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~
    indexToParamUntil_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/index_to_param_until.h:14:7: note: 'indexToParamUntil_t' declared here
class indexToParamUntil_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_index_to_param_expr.cpp.o] Error 1
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_index_to_param_until.cpp:12:37: error: unknown type name 'index_to_param_until_t'; did you mean 'indexToParamUntil_t'?
    index_to_param_until_t* r = new index_to_param_until_t(&ks);
                                    ^~~~~~~~~~~~~~~~~~~~~~
                                    indexToParamUntil_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/index_to_param_until.h:14:7: note: 'indexToParamUntil_t' declared here
class indexToParamUntil_t : public kaitai::kstruct {
      ^
[ 23%] Building CXX object CMakeFiles/ks_tests.dir/test_js_signed_right_shift.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_index_to_param_until.cpp.o] Error 1
[ 23%] Building CXX object CMakeFiles/ks_tests.dir/test_meta_tags.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_instance_std.cpp:12:5:/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_instance_io_user.cpp:12:5: error: unknown type name 'instance_io_user_t'; did you mean 'instanceIoUser_t'?
    instance_io_user_t* r = new instance_io_user_t(&ks);
    ^~~~~~~~~~~~~~~~~~
    instanceIoUser_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/instance_io_user.h:14:7: note: 'instanceIoUser_t' declared here
class instanceIoUser_t : public kaitai::kstruct {
      ^
 error: unknown type name 'instance_std_t'; did you mean 'instanceStd_t'?
    instance_std_t* r = new instance_std_t(&ks);
    ^~~~~~~~~~~~~~
    instanceStd_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/instance_std.h:13:7: note: 'instanceStd_t' declared here
class instanceStd_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_instance_io_user.cpp:12:33:/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_instance_std.cpp:12:29: error: unknown type name 'instance_std_t'; did you mean 'instanceStd_t'?
    instance_std_t* r = new instance_std_t(&ks);
                            ^~~~~~~~~~~~~~
                            instanceStd_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/instance_std.h:13:7: note: 'instanceStd_t' declared here
class instanceStd_t : public kaitai::kstruct {
      ^
 error: unknown type name 'instance_io_user_t'; did you mean 'instanceIoUser_t'?
    instance_io_user_t* r = new instance_io_user_t(&ks);
                                ^~~~~~~~~~~~~~~~~~
                                instanceIoUser_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/instance_io_user.h:14:7: note: 'instanceIoUser_t' declared here
class instanceIoUser_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_instance_std_array.cpp:12:5: error: unknown type name 'instance_std_array_t'; did you mean 'instanceStdArray_t'?
    instance_std_array_t* r = new instance_std_array_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    instanceStdArray_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/instance_std_array.h:14:7: note: 'instanceStdArray_t' declared here
class instanceStdArray_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_instance_std_array.cpp:12:35: error: unknown type name 'instance_std_array_t'; did you mean 'instanceStdArray_t'?
    instance_std_array_t* r = new instance_std_array_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  instanceStdArray_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/instance_std_array.h:14:7: note: 'instanceStdArray_t' declared here
class instanceStdArray_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_instance_std.cpp.o] Error 1
[ 23%] Building CXX object CMakeFiles/ks_tests.dir/test_meta_xref.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_instance_io_user.cpp.o] Error 1
[ 24%] Building CXX object CMakeFiles/ks_tests.dir/test_multiple_use.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_instance_user_array.cpp:12:5: error: unknown type name 'instance_user_array_t'; did you mean 'instanceUserArray_t'?
    instance_user_array_t* r = new instance_user_array_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~
    instanceUserArray_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/instance_user_array.h:14:7: note: 'instanceUserArray_t' declared here
class instanceUserArray_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_instance_user_array.cpp:12:36: error: unknown type name 'instance_user_array_t'; did you mean 'instanceUserArray_t'?
    instance_user_array_t* r = new instance_user_array_t(&ks);
                                   ^~~~~~~~~~~~~~~~~~~~~
                                   instanceUserArray_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/instance_user_array.h:14:7: note: 'instanceUserArray_t' declared here
class instanceUserArray_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_instance_std_array.cpp.o] Error 1
[ 24%] Building CXX object CMakeFiles/ks_tests.dir/test_nav_parent.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_instance_user_array.cpp.o] Error 1
[ 24%] Building CXX object CMakeFiles/ks_tests.dir/test_nav_parent2.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_io_local_var.cpp:12:5: error: unknown type name 'io_local_var_t'; did you mean 'ioLocalVar_t'?
    io_local_var_t* r = new io_local_var_t(&ks);
    ^~~~~~~~~~~~~~
    ioLocalVar_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/io_local_var.h:13:7: note: 'ioLocalVar_t' declared here
class ioLocalVar_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_io_local_var.cpp:12:29: error: unknown type name 'io_local_var_t'; did you mean 'ioLocalVar_t'?
    io_local_var_t* r = new io_local_var_t(&ks);
                            ^~~~~~~~~~~~~~
                            ioLocalVar_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/io_local_var.h:13:7: note: 'ioLocalVar_t' declared here
class ioLocalVar_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_io_local_var.cpp.o] Error 1
[ 24%] Building CXX object CMakeFiles/ks_tests.dir/test_nav_parent3.cpp.o
[ 25%] Building CXX object CMakeFiles/ks_tests.dir/test_nav_parent_false.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_js_signed_right_shift.cpp:12:5: error: unknown type name 'js_signed_right_shift_t'; did you mean 'jsSignedRightShift_t'?
    js_signed_right_shift_t* r = new js_signed_right_shift_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~
    jsSignedRightShift_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/js_signed_right_shift.h:13:7: note: 'jsSignedRightShift_t' declared here
class jsSignedRightShift_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_js_signed_right_shift.cpp:12:38: error: unknown type name 'js_signed_right_shift_t'; did you mean 'jsSignedRightShift_t'?
    js_signed_right_shift_t* r = new js_signed_right_shift_t(&ks);
                                     ^~~~~~~~~~~~~~~~~~~~~~~
                                     jsSignedRightShift_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/js_signed_right_shift.h:13:7: note: 'jsSignedRightShift_t' declared here
class jsSignedRightShift_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_js_signed_right_shift.cpp.o] Error 1
[ 25%] Building CXX object CMakeFiles/ks_tests.dir/test_nav_parent_false2.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_meta_tags.cpp:12:5: error: unknown type name 'meta_tags_t'; did you mean 'metaTags_t'?
    meta_tags_t* r = new meta_tags_t(&ks);
    ^~~~~~~~~~~
    metaTags_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/meta_tags.h:13:7: note: 'metaTags_t' declared here
class metaTags_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_meta_tags.cpp:12:26: error: unknown type name 'meta_tags_t'; did you mean 'metaTags_t'?
    meta_tags_t* r = new meta_tags_t(&ks);
                         ^~~~~~~~~~~
                         metaTags_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/meta_tags.h:13:7: note: 'metaTags_t' declared here
class metaTags_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_meta_tags.cpp.o] Error 1
[ 25%] Building CXX object CMakeFiles/ks_tests.dir/test_nav_parent_override.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_meta_xref.cpp:12:5:/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_multiple_use.cpp:12:5: error: unknown type name 'multiple_use_t'; did you mean 'multipleUse_t'?
    multiple_use_t* r = new multiple_use_t(&ks);
    ^~~~~~~~~~~~~~
    multipleUse_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/multiple_use.h:13:7: note: 'multipleUse_t' declared here
class multipleUse_t : public kaitai::kstruct {
      ^
 error: unknown type name 'meta_xref_t'; did you mean 'metaXref_t'?
    meta_xref_t* r = new meta_xref_t(&ks);
    ^~~~~~~~~~~
    metaXref_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/meta_xref.h:13:7: note: 'metaXref_t' declared here
class metaXref_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_meta_xref.cpp:12:26: error: unknown type name 'meta_xref_t'; did you mean 'metaXref_t'?
    meta_xref_t* r = new meta_xref_t(&ks);
                         ^~~~~~~~~~~
                         metaXref_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/meta_xref.h:13:7: note: 'metaXref_t' declared here
class metaXref_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_multiple_use.cpp:12:29: error: unknown type name 'multiple_use_t'; did you mean 'multipleUse_t'?
    multiple_use_t* r = new multiple_use_t(&ks);
                            ^~~~~~~~~~~~~~
                            multipleUse_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/multiple_use.h:13:7: note: 'multipleUse_t' declared here
class multipleUse_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent.cpp:12:5: error: unknown type name 'nav_parent_t'; did you mean 'navParent_t'?
    nav_parent_t* r = new nav_parent_t(&ks);
    ^~~~~~~~~~~~
    navParent_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent.h:14:7: note: 'navParent_t' declared here
class navParent_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent.cpp:12:27: error: unknown type name 'nav_parent_t'; did you mean 'navParent_t'?
    nav_parent_t* r = new nav_parent_t(&ks);
                          ^~~~~~~~~~~~
                          navParent_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent.h:14:7: note: 'navParent_t' declared here
class navParent_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_meta_xref.cpp.o] Error 1
[ 25%] Building CXX object CMakeFiles/ks_tests.dir/test_nav_parent_switch.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_multiple_use.cpp.o] Error 1
[ 26%] Building CXX object CMakeFiles/ks_tests.dir/test_nav_parent_switch_cast.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent2.cpp:12:5: error: unknown type name 'nav_parent2_t'; did you mean 'navParent2_t'?
    nav_parent2_t* r = new nav_parent2_t(&ks);
    ^~~~~~~~~~~~~
    navParent2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent2.h:14:7: note: 'navParent2_t' declared here
class navParent2_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent2.cpp:12:28: error: unknown type name 'nav_parent2_t'; did you mean 'navParent2_t'?
    nav_parent2_t* r = new nav_parent2_t(&ks);
                           ^~~~~~~~~~~~~
                           navParent2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent2.h:14:7: note: 'navParent2_t' declared here
class navParent2_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_nav_parent.cpp.o] Error 1
[ 26%] Building CXX object CMakeFiles/ks_tests.dir/test_nav_parent_vs_value_inst.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_nav_parent2.cpp.o] Error 1
[ 26%] Building CXX object CMakeFiles/ks_tests.dir/test_nav_root.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent3.cpp:12:5: error: unknown type name 'nav_parent3_t'; did you mean 'navParent3_t'?
    nav_parent3_t* r = new nav_parent3_t(&ks);
    ^~~~~~~~~~~~~
    navParent3_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent3.h:14:7: note: 'navParent3_t' declared here
class navParent3_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent3.cpp:12:28: error: unknown type name 'nav_parent3_t'; did you mean 'navParent3_t'?
    nav_parent3_t* r = new nav_parent3_t(&ks);
                           ^~~~~~~~~~~~~
                           navParent3_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent3.h:14:7: note: 'navParent3_t' declared here
class navParent3_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_false.cpp:12:5: error: unknown type name 'nav_parent_false_t'; did you mean 'navParentFalse_t'?
    nav_parent_false_t* r = new nav_parent_false_t(&ks);
    ^~~~~~~~~~~~~~~~~~
    navParentFalse_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_false.h:13:7: note: 'navParentFalse_t' declared here
class navParentFalse_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_false.cpp:12:33: error: unknown type name 'nav_parent_false_t'; did you mean 'navParentFalse_t'?
    nav_parent_false_t* r = new nav_parent_false_t(&ks);
                                ^~~~~~~~~~~~~~~~~~
                                navParentFalse_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_false.h:13:7: note: 'navParentFalse_t' declared here
class navParentFalse_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_nav_parent3.cpp.o] Error 1
[ 26%] Building CXX object CMakeFiles/ks_tests.dir/test_nested_same_name.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_nav_parent_false.cpp.o] Error 1
[ 27%] Building CXX object CMakeFiles/ks_tests.dir/test_nested_same_name2.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_false2.cpp:12:5: error: unknown type name 'nav_parent_false2_t'; did you mean 'navParentFalse2_t'?
    nav_parent_false2_t* r = new nav_parent_false2_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    navParentFalse2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_false2.h:13:7: note: 'navParentFalse2_t' declared here
class navParentFalse2_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_false2.cpp:12:34: error: unknown type name 'nav_parent_false2_t'; did you mean 'navParentFalse2_t'?
    nav_parent_false2_t* r = new nav_parent_false2_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 navParentFalse2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_false2.h:13:7: note: 'navParentFalse2_t' declared here
class navParentFalse2_t : public kaitai::kstruct {
      ^
2 errors generated.
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_override.cpp:12:5: error: unknown type name 'nav_parent_override_t'; did you mean 'navParentOverride_t'?
    nav_parent_override_t* r = new nav_parent_override_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~
    navParentOverride_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_override.h:13:7: note: 'navParentOverride_t' declared here
class navParentOverride_t : public kaitai::kstruct {
      ^
make[2]: *** [CMakeFiles/ks_tests.dir/test_nav_parent_false2.cpp.o] Error 1
[ 27%] Building CXX object CMakeFiles/ks_tests.dir/test_nested_types.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_override.cpp:12:36: error: unknown type name 'nav_parent_override_t'; did you mean 'navParentOverride_t'?
    nav_parent_override_t* r = new nav_parent_override_t(&ks);
                                   ^~~~~~~~~~~~~~~~~~~~~
                                   navParentOverride_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_override.h:13:7: note: 'navParentOverride_t' declared here
class navParentOverride_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_nav_parent_override.cpp.o] Error 1
[ 27%] Building CXX object CMakeFiles/ks_tests.dir/test_nested_types2.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_switch.cpp:12:5: error: unknown type name 'nav_parent_switch_t'; did you mean 'navParentSwitch_t'?
    nav_parent_switch_t* r = new nav_parent_switch_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    navParentSwitch_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_switch.h:13:7: note: 'navParentSwitch_t' declared here
class navParentSwitch_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_switch.cpp:12:34: error: unknown type name 'nav_parent_switch_t'; did you mean 'navParentSwitch_t'?
    nav_parent_switch_t* r = new nav_parent_switch_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 navParentSwitch_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_switch.h:13:7: note: 'navParentSwitch_t' declared here
class navParentSwitch_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_switch_cast.cpp:12:5: error: unknown type name 'nav_parent_switch_cast_t'; did you mean 'navParentSwitchCast_t'?
    nav_parent_switch_cast_t* r = new nav_parent_switch_cast_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~~
    navParentSwitchCast_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_switch_cast.h:13:7: note: 'navParentSwitchCast_t' declared here
class navParentSwitchCast_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_switch.cpp:15:35: error: /Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_switch_cast.cpp:12:39: error: unknown type name 'nav_parent_switch_cast_t'; did you mean 'navParentSwitchCast_t'?
use of undeclared identifier 'nav_parent_switch_t'; did you mean 'navParentSwitch_t'?
    BOOST_CHECK_EQUAL(static_cast<nav_parent_switch_t::element_1_t*>(r->content())->foo(), 66);
                                  ^~~~~~~~~~~~~~~~~~~
                                  navParentSwitch_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_switch.h:13:7: note: 'navParentSwitch_t' declared here
class navParentSwitch_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_switch.cpp:15:56: error: no type named 'element_1_t' in 'navParentSwitch_t'; did you mean 'element1_t'?
    BOOST_CHECK_EQUAL(static_cast<nav_parent_switch_t::element_1_t*>(r->content())->foo(), 66);
                                  ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
                                                       element1_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^~~~
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^~~~
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^~
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^~~
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_switch.h:27:11: note: 'element1_t' declared here
    class element1_t : public kaitai::kstruct {
          ^
    nav_parent_switch_cast_t* r = new nav_parent_switch_cast_t(&ks);
                                      ^~~~~~~~~~~~~~~~~~~~~~~~
                                      navParentSwitchCast_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_switch_cast.h:13:7: note: 'navParentSwitchCast_t' declared here
class navParentSwitchCast_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_switch.cpp:16:35: error: use of undeclared identifier 'nav_parent_switch_t'; did you mean 'navParentSwitch_t'?
    BOOST_CHECK_EQUAL(static_cast<nav_parent_switch_t::element_1_t*>(r->content())->subelement()->bar(), 255);
                                  ^~~~~~~~~~~~~~~~~~~
                                  navParentSwitch_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_switch.h:13:7: note: 'navParentSwitch_t' declared here
class navParentSwitch_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_switch.cpp:16:56: error: no type named 'element_1_t' in 'navParentSwitch_t'; did you mean 'element1_t'?
    BOOST_CHECK_EQUAL(static_cast<nav_parent_switch_t::element_1_t*>(r->content())->subelement()->bar(), 255);
                                  ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
                                                       element1_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^~~~
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^~~~
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^~
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^~~
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_switch.h:27:11: note: 'element1_t' declared here
    class element1_t : public kaitai::kstruct {
          ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_switch_cast.cpp:17:35: error: use of undeclared identifier 'nav_parent_switch_cast_t'; did you mean 'navParentSwitchCast_t'?
    BOOST_CHECK_EQUAL(static_cast<nav_parent_switch_cast_t::foo_t::one_t*>(r->foo()->buf())->bar()->flag(), 7);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~
                                  navParentSwitchCast_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_switch_cast.h:13:7: note: 'navParentSwitchCast_t' declared here
class navParentSwitchCast_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_vs_value_inst.cpp:12:5: error: unknown type name 'nav_parent_vs_value_inst_t'
    nav_parent_vs_value_inst_t* r = new nav_parent_vs_value_inst_t(&ks);
    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_parent_vs_value_inst.cpp:12:41: error: unknown type name 'nav_parent_vs_value_inst_t'
    nav_parent_vs_value_inst_t* r = new nav_parent_vs_value_inst_t(&ks);
                                        ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_root.cpp:12:5: error: unknown type name 'nav_root_t'; did you mean 'navRoot_t'?
    nav_root_t* r = new nav_root_t(&ks);
    ^~~~~~~~~~
    navRoot_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_root.h:14:7: note: 'navRoot_t' declared here
class navRoot_t : public kaitai::kstruct {
      ^
3 errors generated.
6 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_nav_parent_switch_cast.cpp.o] Error 1
make[2]: *** [CMakeFiles/ks_tests.dir/test_nav_parent_switch.cpp.o] Error 1
[ 27%] Building CXX object CMakeFiles/ks_tests.dir/test_nested_types3.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nav_root.cpp:12:25: [ 28%] Building CXX object CMakeFiles/ks_tests.dir/test_non_standard.cpp.o
error: unknown type name 'nav_root_t'; did you mean 'navRoot_t'?
    nav_root_t* r = new nav_root_t(&ks);
                        ^~~~~~~~~~
                        navRoot_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_root.h:14:7: note: 'navRoot_t' declared here
class navRoot_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_nav_parent_vs_value_inst.cpp.o] Error 1
[ 28%] Building CXX object CMakeFiles/ks_tests.dir/test_opaque_external_type.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_nav_root.cpp.o] Error 1
[ 28%] Building CXX object CMakeFiles/ks_tests.dir/test_opaque_external_type_02_parent.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nested_same_name.cpp:12:5: error: unknown type name 'nested_same_name_t'; did you mean 'nestedSameName_t'?
    nested_same_name_t* r = new nested_same_name_t(&ks);
    ^~~~~~~~~~~~~~~~~~
    nestedSameName_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_same_name.h:13:7: note: 'nestedSameName_t' declared here
class nestedSameName_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nested_same_name.cpp:12:33: error: unknown type name 'nested_same_name_t'; did you mean 'nestedSameName_t'?
    nested_same_name_t* r = new nested_same_name_t(&ks);
                                ^~~~~~~~~~~~~~~~~~
                                nestedSameName_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_same_name.h:13:7: note: 'nestedSameName_t' declared here
class nestedSameName_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nested_same_name2.cpp:12:5: error: unknown type name 'nested_same_name2_t'; did you mean 'nestedSameName2_t'?
    nested_same_name2_t* r = new nested_same_name2_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    nestedSameName2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_same_name2.h:13:7: note: 'nestedSameName2_t' declared here
class nestedSameName2_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_nested_same_name.cpp.o] Error 1
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nested_same_name2.cpp:12:34: error: unknown type name 'nested_same_name2_t'; did you mean 'nestedSameName2_t'?
    nested_same_name2_t* r = new nested_same_name2_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 nestedSameName2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_same_name2.h:13:7: note: 'nestedSameName2_t' declared here
class nestedSameName2_t : public kaitai::kstruct {
      ^
[ 28%] Building CXX object CMakeFiles/ks_tests.dir/test_opaque_with_param.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_nested_same_name2.cpp.o] Error 1
[ 29%] Building CXX object CMakeFiles/ks_tests.dir/test_optional_id.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nested_types.cpp:12:5: error: unknown type name 'nested_types_t'; did you mean 'nestedTypes_t'?
    nested_types_t* r = new nested_types_t(&ks);
    ^~~~~~~~~~~~~~
    nestedTypes_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_types.h:13:7: note: 'nestedTypes_t' declared here
class nestedTypes_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nested_types.cpp:12:29: error: unknown type name 'nested_types_t'; did you mean 'nestedTypes_t'?
    nested_types_t* r = new nested_types_t(&ks);
                            ^~~~~~~~~~~~~~
                            nestedTypes_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_types.h:13:7: note: 'nestedTypes_t' declared here
class nestedTypes_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nested_types2.cpp:12:5: error: unknown type name 'nested_types2_t'; did you mean 'nestedTypes2_t'?
    nested_types2_t* r = new nested_types2_t(&ks);
    ^~~~~~~~~~~~~~~
    nestedTypes2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_types2.h:13:7: note: 'nestedTypes2_t' declared here
class nestedTypes2_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_nested_types.cpp.o] Error 1
[ 29%] Building CXX object CMakeFiles/ks_tests.dir/test_params_call_extra_parens.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nested_types2.cpp:12:30: error: unknown type name 'nested_types2_t'; did you mean 'nestedTypes2_t'?
    nested_types2_t* r = new nested_types2_t(&ks);
                             ^~~~~~~~~~~~~~~
                             nestedTypes2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_types2.h:13:7: note: 'nestedTypes2_t' declared here
class nestedTypes2_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_nested_types2.cpp.o] Error 1
[ 29%] Building CXX object CMakeFiles/ks_tests.dir/test_params_call_short.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nested_types3.cpp:12:5: error: unknown type name 'nested_types3_t'; did you mean 'nestedTypes3_t'?
    nested_types3_t* r = new nested_types3_t(&ks);
    ^~~~~~~~~~~~~~~
    nestedTypes3_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_types3.h:13:7: note: 'nestedTypes3_t' declared here
class nestedTypes3_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_nested_types3.cpp:12:30: error: unknown type name 'nested_types3_t'; did you mean 'nestedTypes3_t'?
    nested_types3_t* r = new nested_types3_t(&ks);
                             ^~~~~~~~~~~~~~~
                             nestedTypes3_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_types3.h:13:7: note: 'nestedTypes3_t' declared here
class nestedTypes3_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_non_standard.cpp:12:5: error: unknown type name 'non_standard_t'; did you mean 'nonStandard_t'?
    non_standard_t* r = new non_standard_t(&ks);
    ^~~~~~~~~~~~~~
    nonStandard_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/non_standard.h:13:7: note: 'nonStandard_t' declared here
class nonStandard_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_non_standard.cpp:12:29: error: unknown type name 'non_standard_t'; did you mean 'nonStandard_t'?
    non_standard_t* r = new non_standard_t(&ks);
                            ^~~~~~~~~~~~~~
                            nonStandard_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/non_standard.h:13:7: note: 'nonStandard_t' declared here
class nonStandard_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_opaque_external_type.cpp:13:5: error: unknown type name 'opaque_external_type_t'; did you mean 'opaqueExternalType_t'?
    opaque_external_type_t* r = new opaque_external_type_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~
    opaqueExternalType_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/opaque_external_type.h:14:7: note: 'opaqueExternalType_t' declared here
class opaqueExternalType_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_opaque_external_type.cpp:13:37: error: unknown type name 'opaque_external_type_t'; did you mean 'opaqueExternalType_t'?
    opaque_external_type_t* r = new opaque_external_type_t(&ks);
                                    ^~~~~~~~~~~~~~~~~~~~~~
                                    opaqueExternalType_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/opaque_external_type.h:14:7: note: 'opaqueExternalType_t' declared here
class opaqueExternalType_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_nested_types3.cpp.o] Error 1
[ 29%] Building CXX object CMakeFiles/ks_tests.dir/test_params_def.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_non_standard.cpp.o] Error 1
[ 30%] Building CXX object CMakeFiles/ks_tests.dir/test_params_enum.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_opaque_external_type_02_parent.cpp:13:5: error: unknown type name 'opaque_external_type_02_parent_t'
    opaque_external_type_02_parent_t* r = new opaque_external_type_02_parent_t(&ks);
    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_opaque_external_type_02_parent.cpp:13:47: error: unknown type name 'opaque_external_type_02_parent_t'
    opaque_external_type_02_parent_t* r = new opaque_external_type_02_parent_t(&ks);
                                              ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_opaque_external_type.cpp.o] Error 1
[ 30%] Building CXX object CMakeFiles/ks_tests.dir/test_params_pass_usertype.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_opaque_external_type_02_parent.cpp.o] Error 1
[ 30%] Building CXX object CMakeFiles/ks_tests.dir/test_position_abs.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_opaque_with_param.cpp:13:5: error: unknown type name 'opaque_with_param_t'; did you mean 'opaqueWithParam_t'?
    opaque_with_param_t* r = new opaque_with_param_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    opaqueWithParam_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/opaque_with_param.h:14:7: note: 'opaqueWithParam_t' declared here
class opaqueWithParam_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_opaque_with_param.cpp:13:34: error: unknown type name 'opaque_with_param_t'; did you mean 'opaqueWithParam_t'?
    opaque_with_param_t* r = new opaque_with_param_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 opaqueWithParam_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/opaque_with_param.h:14:7: note: 'opaqueWithParam_t' declared here
class opaqueWithParam_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_optional_id.cpp:12:5: error: unknown type name 'optional_id_t'; did you mean 'optionalId_t'?
    optional_id_t* r = new optional_id_t(&ks);
    ^~~~~~~~~~~~~
    optionalId_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/optional_id.h:13:7: note: 'optionalId_t' declared here
class optionalId_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_optional_id.cpp:12:282 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_opaque_with_param.cpp.o] Error 1
[ 30%] Building CXX object CMakeFiles/ks_tests.dir/test_position_in_seq.cpp.o
: error: unknown type name 'optional_id_t'; did you mean 'optionalId_t'?
    optional_id_t* r = new optional_id_t(&ks);
                           ^~~~~~~~~~~~~
                           optionalId_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/optional_id.h:13:7: note: 'optionalId_t' declared here
class optionalId_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_optional_id.cpp.o] Error 1
[ 31%] Building CXX object CMakeFiles/ks_tests.dir/test_position_to_end.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_params_call_extra_parens.cpp:12:5: error: unknown type name 'params_call_extra_parens_t'; did you mean 'paramsCallExtraParens_t'?
    params_call_extra_parens_t* r = new params_call_extra_parens_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
    paramsCallExtraParens_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_call_extra_parens.h:13:7: note: 'paramsCallExtraParens_t' declared here
class paramsCallExtraParens_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_params_call_extra_parens.cpp:12:41: error: unknown type name 'params_call_extra_parens_t'; did you mean 'paramsCallExtraParens_t'?
    params_call_extra_parens_t* r = new params_call_extra_parens_t(&ks);
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
                                        paramsCallExtraParens_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_call_extra_parens.h:13:7: note: 'paramsCallExtraParens_t' declared here
class paramsCallExtraParens_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_params_call_short.cpp:12:5: error: unknown type name 'params_call_short_t'; did you mean 'paramsCallShort_t'?
    params_call_short_t* r = new params_call_short_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    paramsCallShort_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_call_short.h:13:7: note: 'paramsCallShort_t' declared here
class paramsCallShort_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_params_call_short.cpp:12:34: error: unknown type name 'params_call_short_t'; did you mean 'paramsCallShort_t'?
    params_call_short_t* r = new params_call_short_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 paramsCallShort_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_call_short.h:132 errors generated.
:7: note: 'paramsCallShort_t' declared here
class paramsCallShort_t : public kaitai::kstruct {
      ^
make[2]: *** [CMakeFiles/ks_tests.dir/test_params_call_extra_parens.cpp.o] Error 1
[ 31%] Building CXX object CMakeFiles/ks_tests.dir/test_process_coerce_bytes.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_params_call_short.cpp.o] Error 1
[ 31%] Building CXX object CMakeFiles/ks_tests.dir/test_process_coerce_usertype1.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_params_enum.cpp:12:5: error: unknown type name 'params_enum_t'; did you mean 'paramsEnum_t'?
    params_enum_t* r = new params_enum_t(&ks);
    ^~~~~~~~~~~~~
    paramsEnum_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_enum.h:13:7: note: 'paramsEnum_t' declared here
class paramsEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_params_def.cpp:12:5:/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_params_enum.cpp:12:28 error: unknown type name 'params_def_t'; did you mean 'paramsDef_t'?
    params_def_t* r = new params_def_t(5, true, &ks);
    ^~~~~~~~~~~~
: error: unknown type name 'params_enum_t'; did you mean 'paramsEnum_t'?
    params_enum_t* r = new params_enum_t(&ks);
                           ^~~~~~~~~~~~~
                           paramsEnum_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_enum.h:13:7: note: 'paramsEnum_t' declared here
class paramsEnum_t : public kaitai::kstruct {
      ^    paramsDef_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_def.h:13:7: note: 'paramsDef_t' declared here
class paramsDef_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_params_def.cpp:12:27: 
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_params_enum.cpp:14:33:error: unknown type name 'params_def_t'; did you mean 'paramsDef_t'?
    params_def_t* r = new params_def_t(5, true, &ks);
                          ^~~~~~~~~~~~
                          paramsDef_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_def.h:13:7: note: 'paramsDef_t' declared here
class paramsDef_t : public kaitai::kstruct {
      ^
 error: use of undeclared identifier 'params_enum_t'; did you mean 'paramsEnum_t'?
    BOOST_CHECK_EQUAL(r->one(), params_enum_t::ANIMAL_CAT);
                                ^~~~~~~~~~~~~
                                paramsEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_enum.h:13:7: note: 'paramsEnum_t' declared here
class paramsEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_params_pass_usertype.cpp:12:5:2 errors generated.
 error: unknown type name 'params_pass_usertype_t'; did you mean 'paramsPassUsertype_t'?
    params_pass_usertype_t* r = new params_pass_usertype_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~
    paramsPassUsertype_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_pass_usertype.h:13:7: note: 'paramsPassUsertype_t' declared here
class paramsPassUsertype_t : public kaitai::kstruct {
      ^
make[2]: *** [CMakeFiles/ks_tests.dir/test_params_def.cpp.o] Error 1
[ 31%] Building CXX object CMakeFiles/ks_tests.dir/test_process_coerce_usertype2.cpp.o
3/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_position_abs.cpp:12:5: error: unknown type name 'position_abs_t'; did you mean 'positionAbs_t'?
    position_abs_t* r = new position_abs_t(&ks);
    ^~~~~~~~~~~~~~
    positionAbs_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/position_abs.h:13:7: note: 'positionAbs_t' declared here
class positionAbs_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_position_abs.cpp/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_params_pass_usertype.cpp:12:37: error: unknown type name 'params_pass_usertype_t'; did you mean 'paramsPassUsertype_t'?
    params_pass_usertype_t* r = new params_pass_usertype_t(&ks);
                                    ^~~~~~~~~~~~~~~~~~~~~~
                                    paramsPassUsertype_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_pass_usertype.h:13:7: note: 'paramsPassUsertype_t' declared here
class paramsPassUsertype_t : public kaitai::kstruct {
      ^
:12:29: error: unknown type name 'position_abs_t'; did you mean 'positionAbs_t'?
    position_abs_t* r = new position_abs_t(&ks);
                            ^~~~~~~~~~~~~~
                            positionAbs_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/position_abs.h:13:7: note: 'positionAbs_t' declared here errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_params_enum.cpp.o] Error 1
[ 32%] Building CXX object CMakeFiles/ks_tests.dir/test_process_custom.cpp.o

class positionAbs_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_params_pass_usertype.cpp.o] Error 1
[ 32%] Building CXX object CMakeFiles/ks_tests.dir/test_process_custom_no_args.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_position_abs.cpp.o] Error 1
[ 32%] Building CXX object CMakeFiles/ks_tests.dir/test_process_repeat_bytes.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_position_in_seq.cpp:13:5: error: unknown type name 'position_in_seq_t'; did you mean 'positionInSeq_t'?
    position_in_seq_t* r = new position_in_seq_t(&ks);
    ^~~~~~~~~~~~~~~~~
    positionInSeq_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/position_in_seq.h:14:7: note: 'positionInSeq_t' declared here
class positionInSeq_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_position_in_seq.cpp:13:32: error: unknown type name 'position_in_seq_t'; did you mean 'positionInSeq_t'?
    position_in_seq_t* r = new position_in_seq_t(&ks);
                               ^~~~~~~~~~~~~~~~~
                               positionInSeq_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/position_in_seq.h:14:7: note: 'positionInSeq_t' declared here
class positionInSeq_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_position_to_end.cpp:12:5: error: unknown type name 'position_to_end_t'; did you mean 'positionToEnd_t'?
    position_to_end_t* r = new position_to_end_t(&ks);
    ^~~~~~~~~~~~~~~~~
    positionToEnd_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/position_to_end.h:13:7: note: 'positionToEnd_t' declared here
class positionToEnd_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_position_to_end.cpp:12:32: error: unknown type name 'position_to_end_t'; did you mean 'positionToEnd_t'?
    position_to_end_t* r = new position_to_end_t(&ks);
                               ^~~~~~~~~~~~~~~~~
                               positionToEnd_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/position_to_end.h:13:7: note: 'positionToEnd_t' declared here
class positionToEnd_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_position_in_seq.cpp.o] Error 1
[ 32%] Building CXX object CMakeFiles/ks_tests.dir/test_process_repeat_usertype.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_position_to_end.cpp.o] Error 1
[ 33%] Building CXX object CMakeFiles/ks_tests.dir/test_process_rotate.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_coerce_bytes.cpp:12:5: error: unknown type name 'process_coerce_bytes_t'; did you mean 'processCoerceBytes_t'?
    process_coerce_bytes_t* r = new process_coerce_bytes_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~
    processCoerceBytes_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_coerce_bytes.h:14:7: note: 'processCoerceBytes_t' declared here
class processCoerceBytes_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_coerce_bytes.cpp:12:37: error: unknown type name 'process_coerce_bytes_t'; did you mean 'processCoerceBytes_t'?
    process_coerce_bytes_t* r = new process_coerce_bytes_t(&ks);
                                    ^~~~~~~~~~~~~~~~~~~~~~
                                    processCoerceBytes_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_coerce_bytes.h:14:7: note: 'processCoerceBytes_t' declared here
class processCoerceBytes_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_coerce_usertype1.cpp:12:5: error: unknown type name 'process_coerce_usertype1_t'; did you mean 'processCoerceUsertype1_t'?
    process_coerce_usertype1_t* r = new process_coerce_usertype1_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
    processCoerceUsertype1_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_coerce_usertype1.h:14:7: note: 'processCoerceUsertype1_t' declared here
class processCoerceUsertype1_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_coerce_usertype1.cpp:12:41: error: unknown type name 'process_coerce_usertype1_t'; did you mean 'processCoerceUsertype1_t'?
    process_coerce_usertype1_t* r = new process_coerce_usertype1_t(&ks);
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
                                        processCoerceUsertype1_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_coerce_usertype1.h:14:7: note: 'processCoerceUsertype1_t' declared here
class processCoerceUsertype1_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_process_coerce_bytes.cpp.o] Error 1
[ 33%] Building CXX object CMakeFiles/ks_tests.dir/test_process_to_user.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_process_coerce_usertype1.cpp.o] Error 1
[ 33%] Building CXX object CMakeFiles/ks_tests.dir/test_process_xor4_const.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_custom.cpp:12:5: error: unknown type name 'process_custom_t'; did you mean 'processCustom_t'?
    process_custom_t* r = new process_custom_t(&ks);
    ^~~~~~~~~~~~~~~~
    processCustom_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom.h:13:7: note: 'processCustom_t' declared here
class processCustom_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_coerce_usertype2.cpp:12:5: error: unknown type name 'process_coerce_usertype2_t'; did you mean 'processCoerceUsertype2_t'?
    process_coerce_usertype2_t* r = new process_coerce_usertype2_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
    processCoerceUsertype2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_coerce_usertype2.h:14:7: note: 'processCoerceUsertype2_t' declared here
class processCoerceUsertype2_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_custom.cpp:12:31: error: unknown type name 'process_custom_t'; did you mean 'processCustom_t'?
    process_custom_t* r = new process_custom_t(&ks);
                              ^~~~~~~~~~~~~~~~
                              processCustom_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom.h:13/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_coerce_usertype2.cpp:12:41: error: unknown type name 'process_coerce_usertype2_t'; did you mean 'processCoerceUsertype2_t'?
    process_coerce_usertype2_t* r = new process_coerce_usertype2_t(&ks);
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~
                                        processCoerceUsertype2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_coerce_usertype2.h:14:7: note: 'processCoerceUsertype2_t' declared here
class processCoerceUsertype2_t : public kaitai::kstruct {
      ^
:7: note: 'processCustom_t' declared here
class processCustom_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_custom_no_args.cpp:13:5: error: unknown type name 'process_custom_no_args_t'; did you mean 'processCustomNoArgs_t'?
    process_custom_no_args_t* r = new process_custom_no_args_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~~
    processCustomNoArgs_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom_no_args.h:13:7: note: 'processCustomNoArgs_t' declared here
class processCustomNoArgs_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_custom_no_args.cpp:13:39: error: /Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_repeat_bytes.cpp:12:5:unknown type name 'process_custom_no_args_t'; did you mean 'processCustomNoArgs_t'?
    process_custom_no_args_t* r = new process_custom_no_args_t(&ks);
                                      ^~~~~~~~~~~~~~~~~~~~~~~~
                                      processCustomNoArgs_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom_no_args.h:13:7: note: 'processCustomNoArgs_t' declared here
class processCustomNoArgs_t : public kaitai::kstruct {
      ^
 error: 2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_process_coerce_usertype2.cpp.o] Error 1
unknown type name 'process_repeat_bytes_t'; did you mean 'processRepeatBytes_t'?
[ 34%] Building CXX object CMakeFiles/ks_tests.dir/test_process_xor4_value.cpp.o
    process_repeat_bytes_t* r = new process_repeat_bytes_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~
    processRepeatBytes_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_repeat_bytes.h:14:7: note: 'processRepeatBytes_t' declared here
class processRepeatBytes_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_repeat_bytes.cpp:12:37: error: unknown type name 'process_repeat_bytes_t'; did you mean 'processRepeatBytes_t'?
    process_repeat_bytes_t* r = new process_repeat_bytes_t(&ks);
                                    ^~~~~~~~~~~~~~~~~~~~~~
                                    processRepeatBytes_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_repeat_bytes.h:14:7: note: 'processRepeatBytes_t' declared here
class processRepeatBytes_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_process_custom.cpp.o] Error 1
[ 34%] Building CXX object CMakeFiles/ks_tests.dir/test_process_xor_const.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_process_custom_no_args.cpp.o] Error 1
[ 34%] Building CXX object CMakeFiles/ks_tests.dir/test_process_xor_value.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_process_repeat_bytes.cpp.o] Error 1
[ 34%] Building CXX object CMakeFiles/ks_tests.dir/test_recursive_one.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_repeat_usertype.cpp:12:5: error: unknown type name 'process_repeat_usertype_t'; did you mean 'processRepeatUsertype_t'?
    process_repeat_usertype_t* r = new process_repeat_usertype_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~~~
    processRepeatUsertype_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_repeat_usertype.h:14:7: note: 'processRepeatUsertype_t' declared here
class processRepeatUsertype_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_repeat_usertype.cpp:12:40: error: unknown type name 'process_repeat_usertype_t'; did you mean 'processRepeatUsertype_t'?
    process_repeat_usertype_t* r = new process_repeat_usertype_t(&ks);
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
                                       processRepeatUsertype_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_repeat_usertype.h:14:7: note: 'processRepeatUsertype_t' declared here
class processRepeatUsertype_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_rotate.cpp:12:5: error: unknown type name 'process_rotate_t'; did you mean 'processRotate_t'?
    process_rotate_t* r = new process_rotate_t(&ks);
    ^~~~~~~~~~~~~~~~
    processRotate_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_rotate.h:13:7: note: 'processRotate_t' declared here
class processRotate_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_rotate.cpp:12:31: error: unknown type name 'process_rotate_t'; did you mean 'processRotate_t'?
    process_rotate_t* r = new process_rotate_t(&ks);
                              ^~~~~~~~~~~~~~~~
                              processRotate_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_rotate.h:13:7: note: 'processRotate_t' declared here
class processRotate_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_process_repeat_usertype.cpp.o] Error 1
[ 35%] Building CXX object CMakeFiles/ks_tests.dir/test_repeat_eos_bit.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_process_rotate.cpp.o] Error 1
[ 35%] Building CXX object CMakeFiles/ks_tests.dir/test_repeat_eos_struct.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_to_user.cpp:12:5: error: unknown type name 'process_to_user_t'; did you mean 'processToUser_t'?
    process_to_user_t* r = new process_to_user_t(&ks);
    ^~~~~~~~~~~~~~~~~
    processToUser_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_to_user.h:13:7: note: 'processToUser_t' declared here
class processToUser_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_to_user.cpp:12:32: error: unknown type name 'process_to_user_t'; did you mean 'processToUser_t'?
    process_to_user_t* r = new process_to_user_t(&ks);
                               ^~~~~~~~~~~~~~~~~
                               processToUser_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_to_user.h:13:7: note: 'processToUser_t' declared here
class processToUser_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_xor4_const.cpp:12:5: error: unknown type name 'process_xor4_const_t'; did you mean 'processXor4Const_t'?
    process_xor4_const_t* r = new process_xor4_const_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    processXor4Const_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_xor4_const.h:13:7: note: 'processXor4Const_t' declared here
class processXor4Const_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_xor4_const.cpp:12:35: error: unknown type name 'process_xor4_const_t'; did you mean 'processXor4Const_t'?
    process_xor4_const_t* r = new process_xor4_const_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  processXor4Const_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_xor4_const.h:13:7: note: 'processXor4Const_t' declared here
class processXor4Const_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_process_to_user.cpp.o] Error 1
[ 35%] Building CXX object CMakeFiles/ks_tests.dir/test_repeat_eos_u4.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_process_xor4_const.cpp.o] Error 1
[ 35%] Building CXX object CMakeFiles/ks_tests.dir/test_repeat_n_struct.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_xor4_value.cpp:12:5: error: unknown type name 'process_xor4_value_t'; did you mean 'processXor4Value_t'?
    process_xor4_value_t* r = new process_xor4_value_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    processXor4Value_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_xor4_value.h:13:7: note: 'processXor4Value_t' declared here
class processXor4Value_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_xor_const.cpp:12:5:/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_xor4_value.cpp:12:35: error: unknown type name 'process_xor_const_t'; did you mean 'processXorConst_t'?
    process_xor_const_t* r = new process_xor_const_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    processXorConst_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_xor_const.h:13:7: note: 'processXorConst_t' declared here
class processXorConst_t : public kaitai::kstruct {
      ^
 error: unknown type name 'process_xor4_value_t'; did you mean 'processXor4Value_t'?
    process_xor4_value_t* r = new process_xor4_value_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  processXor4Value_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_xor4_value.h:13:7: note: 'processXor4Value_t' declared here
class processXor4Value_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_xor_const.cpp:12:34: error: unknown type name 'process_xor_const_t'; did you mean 'processXorConst_t'?
    process_xor_const_t* r = new process_xor_const_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 processXorConst_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_xor_const.h:13:7: note: 'processXorConst_t' declared here
class processXorConst_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_xor_value.cpp:12:5: error: unknown type name 'process_xor_value_t'; did you mean 'processXorValue_t'?
    process_xor_value_t* r = new process_xor_value_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    processXorValue_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_xor_value.h:13:7: note: 'processXorValue_t' declared here
class processXorValue_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_process_xor_value.cpp:12:34: error: unknown type name 'process_xor_value_t'; did you mean 'processXorValue_t'?
    process_xor_value_t* r = new process_xor_value_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 processXorValue_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_xor_value.h:13:7: note: 'processXorValue_t' declared here
class processXorValue_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_process_xor4_value.cpp.o] Error 1
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_recursive_one.cpp:12:5: error: unknown type name 'recursive_one_t'; did you mean 'recursiveOne_t'?
    recursive_one_t* r = new recursive_one_t(&ks);
    ^~~~~~~~~~~~~~~
    recursiveOne_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/recursive_one.h:13:7: note: 'recursiveOne_t' declared here
class recursiveOne_t : public kaitai::kstruct {
      ^
[ 36%] Building CXX object CMakeFiles/ks_tests.dir/test_repeat_n_strz.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_recursive_one.cpp:12:30: error: unknown type name 'recursive_one_t'; did you mean 'recursiveOne_t'?
    recursive_one_t* r = new recursive_one_t(&ks);
                             ^~~~~~~~~~~~~~~
                             recursiveOne_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/recursive_one.h:13:7: note: 'recursiveOne_t' declared here
class recursiveOne_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_process_xor_const.cpp.o] Error 1
[ 36%] Building CXX object CMakeFiles/ks_tests.dir/test_repeat_n_strz_double.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_recursive_one.cpp:15:35: error: unknown type name 'recursive_one_t'; did you mean 'recursiveOne_t'?
    BOOST_CHECK_EQUAL(static_cast<recursive_one_t*>(r->next())->one(), 65);
                                  ^~~~~~~~~~~~~~~
                                  recursiveOne_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/recursive_one.h:13:7: note: 'recursiveOne_t' declared here
class recursiveOne_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_recursive_one.cpp:16:35: error: unknown type name 'recursive_one_t'; did you mean 'recursiveOne_t'?
    BOOST_CHECK_EQUAL(static_cast<recursive_one_t*>(static_cast<recursive_one_t*>(r->next())->next())->one(), 67);
                                  ^~~~~~~~~~~~~~~
                                  recursiveOne_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/recursive_one.h:13:7: note: 'recursiveOne_t' declared here
class recursiveOne_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_recursive_one.cpp:16:65: error: unknown type name 'recursive_one_t'; did you mean 'recursiveOne_t'?
    BOOST_CHECK_EQUAL(static_cast<recursive_one_t*>(static_cast<recursive_one_t*>(r->next())->next())->one(), 67);
                                                                ^~~~~~~~~~~~~~~
                                                                recursiveOne_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/recursive_one.h:13:7: note: 'recursiveOne_t' declared here
class recursiveOne_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_recursive_one.cpp:17:35: error: use of undeclared identifier 'recursive_one_t'; did you mean 'recursiveOne_t'?
    BOOST_CHECK_EQUAL(static_cast<recursive_one_t::fini_t*>(static_cast<recursive_one_t*>(static_cast<recursive_one_t*>(r->next())->next())->next())->finisher(), 11595);
                                  ^~~~~~~~~~~~~~~
                                  recursiveOne_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/recursive_one.h:13:7: note: 'recursiveOne_t' declared here
class recursiveOne_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_recursive_one.cpp:17:73: error: unknown type name 'recursive_one_t'; did you mean 'recursiveOne_t'?
    BOOST_CHECK_EQUAL(static_cast<recursive_one_t::fini_t*>(static_cast<recursive_one_t*>(static_cast<recursive_one_t*>(r->next())->next())->next())->finisher(), 11595);
                                                                        ^~~~~~~~~~~~~~~
                                                                        recursiveOne_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/recursive_one.h:13:7: note: 'recursiveOne_t' declared here
class recursiveOne_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_process_xor_value.cpp.o] Error 1
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_recursive_one.cpp:17:103: error: unknown type name 'recursive_one_t'; did you mean 'recursiveOne_t'?
    BOOST_CHECK_EQUAL(static_cast<recursive_one_t::fini_t*>(static_cast<recursive_one_t*>(static_cast<recursive_one_t*>(r->next())->next())->next())->finisher(), 11595);
                                                                                                      ^~~~~~~~~~~~~~~
                                                                                                      recursiveOne_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/recursive_one.h:13:7: note: 'recursiveOne_t' declared here
class recursiveOne_t : public kaitai::kstruct {
      ^
[ 36%] Building CXX object CMakeFiles/ks_tests.dir/test_repeat_until_complex.cpp.o
8 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_recursive_one.cpp.o] Error 1
[ 36%] Building CXX object CMakeFiles/ks_tests.dir/test_repeat_until_s4.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_eos_bit.cpp:12:5: error: unknown type name 'repeat_eos_bit_t'; did you mean 'repeatEosBit_t'?
    repeat_eos_bit_t* r = new repeat_eos_bit_t(&ks);
    ^~~~~~~~~~~~~~~~
    repeatEosBit_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_eos_bit.h:14:7: note: 'repeatEosBit_t' declared here
class repeatEosBit_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_eos_bit.cpp:12:31: error: unknown type name 'repeat_eos_bit_t'; did you mean 'repeatEosBit_t'?
    repeat_eos_bit_t* r = new repeat_eos_bit_t(&ks);
                              ^~~~~~~~~~~~~~~~
                              repeatEosBit_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_eos_bit.h:14:7: note: 'repeatEosBit_t' declared here
class repeatEosBit_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_eos_struct.cpp:12:5: error: unknown type name 'repeat_eos_struct_t'; did you mean 'repeatEosStruct_t'?
    repeat_eos_struct_t* r = new repeat_eos_struct_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    repeatEosStruct_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_eos_struct.h:14:7: note: 'repeatEosStruct_t' declared here
class repeatEosStruct_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_eos_struct.cpp:12:34: error: unknown type name 'repeat_eos_struct_t'; did you mean 'repeatEosStruct_t'?
    repeat_eos_struct_t* r = new repeat_eos_struct_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 repeatEosStruct_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_eos_struct.h:14:7: note: 'repeatEosStruct_t' declared here
class repeatEosStruct_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_repeat_eos_bit.cpp.o] Error 1
[ 37%] Building CXX object CMakeFiles/ks_tests.dir/test_repeat_until_sized.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_repeat_eos_struct.cpp.o] Error 1
[ 37%] Building CXX object CMakeFiles/ks_tests.dir/test_str_combine.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_eos_u4.cpp:13:5: error: unknown type name 'repeat_eos_u4_t'; did you mean 'repeatEosU4_t'?
    repeat_eos_u4_t* r = new repeat_eos_u4_t(&ks);
    ^~~~~~~~~~~~~~~
    repeatEosU4_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_eos_u4.h:14:7: note: 'repeatEosU4_t' declared here
class repeatEosU4_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_eos_u4.cpp:13:30: error: unknown type name 'repeat_eos_u4_t'; did you mean 'repeatEosU4_t'?
    repeat_eos_u4_t* r = new repeat_eos_u4_t(&ks);
                             ^~~~~~~~~~~~~~~
                             repeatEosU4_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_eos_u4.h:14:7: note: 'repeatEosU4_t' declared here
class repeatEosU4_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_n_struct.cpp:12:5: error: unknown type name 'repeat_n_struct_t'; did you mean 'repeatNStruct_t'?
    repeat_n_struct_t* r = new repeat_n_struct_t(&ks);
    ^~~~~~~~~~~~~~~~~
    repeatNStruct_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_n_struct.h:14:7: note: 'repeatNStruct_t' declared here
class repeatNStruct_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_n_struct.cpp:12:32: error: unknown type name 'repeat_n_struct_t'; did you mean 'repeatNStruct_t'?
    repeat_n_struct_t* r = new repeat_n_struct_t(&ks);
                               ^~~~~~~~~~~~~~~~~
                               repeatNStruct_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_n_struct.h:14:7: note: 'repeatNStruct_t' declared here
class repeatNStruct_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_repeat_eos_u4.cpp.o] Error 1
[ 37%] Building CXX object CMakeFiles/ks_tests.dir/test_str_encodings.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_repeat_n_struct.cpp.o] Error 1
[ 37%] Building CXX object CMakeFiles/ks_tests.dir/test_str_encodings_default.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_n_strz.cpp:13:5: error: unknown type name 'repeat_n_strz_t'; did you mean 'repeatNStrz_t'?
    repeat_n_strz_t* r = new repeat_n_strz_t(&ks);
    ^~~~~~~~~~~~~~~
    repeatNStrz_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_n_strz.h:14:7: note: 'repeatNStrz_t' declared here
class repeatNStrz_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_n_strz.cpp:13:30: error: unknown type name 'repeat_n_strz_t'; did you mean 'repeatNStrz_t'?
    repeat_n_strz_t* r = new repeat_n_strz_t(&ks);
                             ^~~~~~~~~~~~~~~
                             repeatNStrz_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_n_strz.h:14:7: note: 'repeatNStrz_t' declared here
class repeatNStrz_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_n_strz_double.cpp:13:5: error: unknown type name 'repeat_n_strz_double_t'; did you mean 'repeatNStrzDouble_t'?
    repeat_n_strz_double_t* r = new repeat_n_strz_double_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~
    repeatNStrzDouble_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_n_strz_double.h:14:7: note: 'repeatNStrzDouble_t' declared here
class repeatNStrzDouble_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_n_strz_double.cpp:13:37: error: unknown type name 'repeat_n_strz_double_t'; did you mean 'repeatNStrzDouble_t'?
    repeat_n_strz_double_t* r = new repeat_n_strz_double_t(&ks);
                                    ^~~~~~~~~~~~~~~~~~~~~~
                                    repeatNStrzDouble_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_n_strz_double.h:14:7: note: 'repeatNStrzDouble_t' declared here
class repeatNStrzDouble_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_until_complex.cpp:13:5:2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_repeat_n_strz.cpp.o] Error 1
[ 38%] Building CXX object CMakeFiles/ks_tests.dir/test_str_eos.cpp.o
 error: unknown type name 'repeat_until_complex_t'; did you mean 'repeatUntilComplex_t'?
    repeat_until_complex_t* r = new repeat_until_complex_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~
    repeatUntilComplex_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_until_complex.h:14:7: note: 'repeatUntilComplex_t' declared here
class repeatUntilComplex_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_until_complex.cpp:13:37: error: unknown type name 'repeat_until_complex_t'; did you mean 'repeatUntilComplex_t'?
    repeat_until_complex_t* r = new repeat_until_complex_t(&ks);
                                    ^~~~~~~~~~~~~~~~~~~~~~
                                    repeatUntilComplex_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_until_complex.h:14:7: note: 'repeatUntilComplex_t' declared here
class repeatUntilComplex_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_until_s4.cpp:13:5: error: unknown type name 'repeat_until_s4_t'; did you mean 'repeatUntilS4_t'?
    repeat_until_s4_t* r = new repeat_until_s4_t(&ks);
    ^~~~~~~~~~~~~~~~~
    repeatUntilS4_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_until_s4.h:14:7: note: 'repeatUntilS4_t' declared here
class repeatUntilS4_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_repeat_n_strz_double.cpp.o] Error 1
[ 38%] Building CXX object CMakeFiles/ks_tests.dir/test_str_literals.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_until_s4.cpp:13:32: error: unknown type name 'repeat_until_s4_t'; did you mean 'repeatUntilS4_t'?
    repeat_until_s4_t* r = new repeat_until_s4_t(&ks);
                               ^~~~~~~~~~~~~~~~~
                               repeatUntilS4_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_until_s4.h:14:7: note: 'repeatUntilS4_t' declared here
class repeatUntilS4_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_repeat_until_complex.cpp.o] Error 1
[ 38%] Building CXX object CMakeFiles/ks_tests.dir/test_str_literals2.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_repeat_until_s4.cpp.o] Error 1
[ 38%] Building CXX object CMakeFiles/ks_tests.dir/test_str_pad_term.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_until_sized.cpp:12:5: error: unknown type name 'repeat_until_sized_t'; did you mean 'repeatUntilSized_t'?
    repeat_until_sized_t* r = new repeat_until_sized_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    repeatUntilSized_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_until_sized.h:14:7: note: 'repeatUntilSized_t' declared here
class repeatUntilSized_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_repeat_until_sized.cpp:12:35: error: unknown type name 'repeat_until_sized_t'; did you mean 'repeatUntilSized_t'?
    repeat_until_sized_t* r = new repeat_until_sized_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  repeatUntilSized_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_until_sized.h:14:7: note: 'repeatUntilSized_t' declared here
class repeatUntilSized_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_combine.cpp:13:5: error: unknown type name 'str_combine_t'; did you mean 'strCombine_t'?
    str_combine_t* r = new str_combine_t(&ks);
    ^~~~~~~~~~~~~
    strCombine_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_combine.h:13:7: note: 'strCombine_t' declared here
class strCombine_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_combine.cpp:13:28: error: unknown type name 'str_combine_t'; did you mean 'strCombine_t'?
    str_combine_t* r = new str_combine_t(&ks);
                           ^~~~~~~~~~~~~
                           strCombine_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_combine.h:13:7: note: 'strCombine_t' declared here
class strCombine_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_repeat_until_sized.cpp.o] Error 1
[ 39%] Building CXX object CMakeFiles/ks_tests.dir/test_str_pad_term_empty.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_str_combine.cpp.o] Error 1
[ 39%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_bytearray.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_encodings.cpp:12:5: error: unknown type name 'str_encodings_t'; did you mean 'strEncodings_t'?
    str_encodings_t* r = new str_encodings_t(&ks);
    ^~~~~~~~~~~~~~~
    strEncodings_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_encodings.h:13:7: note: 'strEncodings_t' declared here
class strEncodings_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_encodings.cpp:12:30: error: unknown type name 'str_encodings_t'; did you mean 'strEncodings_t'?
    str_encodings_t* r = new str_encodings_t(&ks);
                             ^~~~~~~~~~~~~~~
                             strEncodings_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_encodings.h:13:7: note: 'strEncodings_t' declared here
class strEncodings_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_encodings_default.cpp:12:5: error: unknown type name 'str_encodings_default_t'; did you mean 'strEncodingsDefault_t'?
    str_encodings_default_t* r = new str_encodings_default_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~
    strEncodingsDefault_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_encodings_default.h:13:7: note: 'strEncodingsDefault_t' declared here
class strEncodingsDefault_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_str_encodings.cpp.o] Error 1
[ 39%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_cast.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_encodings_default.cpp:12:38: error: unknown type name 'str_encodings_default_t'; did you mean 'strEncodingsDefault_t'?
    str_encodings_default_t* r = new str_encodings_default_t(&ks);
                                     ^~~~~~~~~~~~~~~~~~~~~~~
                                     strEncodingsDefault_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_encodings_default.h:13:7: note: 'strEncodingsDefault_t' declared here
class strEncodingsDefault_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_str_encodings_default.cpp.o] Error 1
[ 39%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_else_only.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_eos.cpp:12:5: error: unknown type name 'str_eos_t'; did you mean 'strEos_t'?
    str_eos_t* r = new str_eos_t(&ks);
    ^~~~~~~~~
    strEos_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_eos.h:13:7: note: 'strEos_t' declared here
class strEos_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_eos.cpp:12:24: error: unknown type name 'str_eos_t'; did you mean 'strEos_t'?
    str_eos_t* r = new str_eos_t(&ks);
                       ^~~~~~~~~
                       strEos_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_eos.h:13:7: note: 'strEos_t' declared here
class strEos_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_str_eos.cpp.o] Error 1
[ 40%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_integers.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_literals.cpp:12:5: error: unknown type name 'str_literals_t'; did you mean 'strLiterals_t'?
    str_literals_t* r = new str_literals_t(&ks);
    ^~~~~~~~~~~~~~
    strLiterals_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_literals.h:13:7: note: 'strLiterals_t' declared here
class strLiterals_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_literals.cpp:12:29: error: unknown type name 'str_literals_t'; did you mean 'strLiterals_t'?
    str_literals_t* r = new str_literals_t(&ks);
                            ^~~~~~~~~~~~~~
                            strLiterals_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_literals.h:13:7: note: 'strLiterals_t' declared here
class strLiterals_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_literals2.cpp:12:5: 2 errors generated.
error: unknown type name 'str_literals2_t'; did you mean 'strLiterals2_t'?
    str_literals2_t* r = new str_literals2_t(&ks);
    ^~~~~~~~~~~~~~~
    strLiterals2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_literals2.h:13:7: note: 'strLiterals2_t' declared here
class strLiterals2_t : public kaitai::kstruct {
      ^
make[2]: *** [CMakeFiles/ks_tests.dir/test_str_literals.cpp.o] Error 1
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_literals2.cpp[ 40%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_integers2.cpp.o
:12:30: error: unknown type name 'str_literals2_t'; did you mean 'strLiterals2_t'?
    str_literals2_t* r = new str_literals2_t(&ks);
                             ^~~~~~~~~~~~~~~
                             strLiterals2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_literals2.h:13:7: note: 'strLiterals2_t' declared here
class strLiterals2_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_pad_term.cpp:12:5: error: unknown type name 'str_pad_term_t'; did you mean 'strPadTerm_t'?
    str_pad_term_t* r = new str_pad_term_t(&ks);
    ^~~~~~~~~~~~~~
    strPadTerm_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_pad_term.h:13:7: note: 'strPadTerm_t' declared here
class strPadTerm_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_pad_term.cpp:12:29: error: unknown type name 'str_pad_term_t'; did you mean 'strPadTerm_t'?
    str_pad_term_t* r = new str_pad_term_t(&ks);
                            ^~~~~~~~~~~~~~
                            strPadTerm_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_pad_term.h:13:7: note: 'strPadTerm_t' declared here
class strPadTerm_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_str_literals2.cpp.o] Error 1
[ 40%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_manual_enum.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_str_pad_term.cpp.o] Error 1
[ 40%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_manual_enum_invalid.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_pad_term_empty.cpp:12:5: error: unknown type name 'str_pad_term_empty_t'; did you mean 'strPadTermEmpty_t'?
    str_pad_term_empty_t* r = new str_pad_term_empty_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    strPadTermEmpty_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_pad_term_empty.h:13:7: note: 'strPadTermEmpty_t' declared here
class strPadTermEmpty_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_str_pad_term_empty.cpp:12:35: error: unknown type name 'str_pad_term_empty_t'; did you mean 'strPadTermEmpty_t'?
    str_pad_term_empty_t* r = new str_pad_term_empty_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  strPadTermEmpty_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_pad_term_empty.h:13:7: note: 'strPadTermEmpty_t' declared here
class strPadTermEmpty_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_bytearray.cpp:12:5: error: unknown type name 'switch_bytearray_t'; did you mean 'switchBytearray_t'?
    switch_bytearray_t* r = new switch_bytearray_t(&ks);
    ^~~~~~~~~~~~~~~~~~
    switchBytearray_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_bytearray.h:14:7: note: 'switchBytearray_t' declared here
class switchBytearray_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_bytearray.cpp:12:33: error: unknown type name 'switch_bytearray_t'; did you mean 'switchBytearray_t'?
    switch_bytearray_t* r = new switch_bytearray_t(&ks);
                                ^~~~~~~~~~~~~~~~~~
                                switchBytearray_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_bytearray.h:14:7: note: 'switchBytearray_t' declared here
class switchBytearray_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_bytearray.cpp:16:35: error: use of undeclared identifier 'switch_bytearray_t'; did you mean 'switchBytearray_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_bytearray_t::opcode_t::strval_t*>(r->opcodes()->at(0)->body())->value(), std::string("foobar"));
                                  ^~~~~~~~~~~~~~~~~~
                                  switchBytearray_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_bytearray.h:14:7: note: 'switchBytearray_t' declared here
class switchBytearray_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_bytearray.cpp:18:35: error: use of undeclared identifier 'switch_bytearray_t'; did you mean 'switchBytearray_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_bytearray_t::opcode_t::intval_t*>(r->opcodes()->at(1)->body())->value(), 66);
                                  ^~~~~~~~~~~~~~~~~~
                                  switchBytearray_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_bytearray.h:14:7: note: 'switchBytearray_t' declared here
class switchBytearray_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_str_pad_term_empty.cpp.o] Error 1
[ 41%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_manual_enum_invalid_else.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_bytearray.cpp:20:35: error: use of undeclared identifier 'switch_bytearray_t'; did you mean 'switchBytearray_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_bytearray_t::opcode_t::intval_t*>(r->opcodes()->at(2)->body())->value(), 55);
                                  ^~~~~~~~~~~~~~~~~~
                                  switchBytearray_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_bytearray.h:14:7: note: 'switchBytearray_t' declared here
class switchBytearray_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_bytearray.cpp:22:35: error: use of undeclared identifier 'switch_bytearray_t'; did you mean 'switchBytearray_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_bytearray_t::opcode_t::strval_t*>(r->opcodes()->at(3)->body())->value(), std::string(""));
                                  ^~~~~~~~~~~~~~~~~~
                                  switchBytearray_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_bytearray.h:14:7: note: 'switchBytearray_t' declared here
class switchBytearray_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_cast.cpp:12:5: error: unknown type name 'switch_cast_t'; did you mean 'switchCast_t'?
    switch_cast_t* r = new switch_cast_t(&ks);
    ^~~~~~~~~~~~~
    switchCast_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_cast.h:14:7: note: 'switchCast_t' declared here
class switchCast_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_cast.cpp:12:28: error: unknown type name 'switch_cast_t'; did you mean 'switchCast_t'?
    switch_cast_t* r = new switch_cast_t(&ks);
                           ^~~~~~~~~~~~~
                           switchCast_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_cast.h:14:7: note: 'switchCast_t' declared here
class switchCast_t : public kaitai::kstruct {
      ^
6 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_bytearray.cpp.o] Error 1
[ 41%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_manual_int.cpp.o
In file included from /Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_else_only.cpp:4:
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_else_only.h:62:13: error: expected member name or ';' after declaration specifiers
    data_t* struct() const { return m_struct; }
    ~~~~~~  ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_cast.cpp.o] Error 1
[ 41%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_manual_int_else.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_else_only.cpp:13:5: error: unknown type name 'switch_else_only_t'; did you mean 'switchElseOnly_t'?
    switch_else_only_t* r = new switch_else_only_t(&ks);
    ^~~~~~~~~~~~~~~~~~
    switchElseOnly_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_else_only.h:13:7: note: 'switchElseOnly_t' declared here
class switchElseOnly_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_else_only.cpp:13:33: error: unknown type name 'switch_else_only_t'; did you mean 'switchElseOnly_t'?
    switch_else_only_t* r = new switch_else_only_t(&ks);
                                ^~~~~~~~~~~~~~~~~~
                                switchElseOnly_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_else_only.h:13:7: note: 'switchElseOnly_t' declared here
class switchElseOnly_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_else_only.cpp:18:26: error: expected unqualified-id
    BOOST_CHECK_EQUAL(r->struct()->value(), std::string("\x6F\x6F\x62\x61", 4));
                         ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_else_only.cpp:19:26: error: no member named 'struct_sized' in 'switchElseOnly_t'
    BOOST_CHECK_EQUAL(r->struct_sized()->value(), std::string("\x72\x00\x49\x42", 4));
                      ~  ^
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^~~~
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^~~~
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^~
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^~~
5 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_else_only.cpp.o] Error 1
[ 41%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_manual_int_size.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_integers.cpp:12:5: error: unknown type name 'switch_integers_t'; did you mean 'switchIntegers_t'?
    switch_integers_t* r = new switch_integers_t(&ks);
    ^~~~~~~~~~~~~~~~~
    switchIntegers_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_integers.h:14:7: note: 'switchIntegers_t' declared here
class switchIntegers_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_integers.cpp:12:32: error: unknown type name 'switch_integers_t'; did you mean 'switchIntegers_t'?
    switch_integers_t* r = new switch_integers_t(&ks);
                               ^~~~~~~~~~~~~~~~~
                               switchIntegers_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_integers.h:14:7: note: 'switchIntegers_t' declared here
class switchIntegers_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_integers.cpp.o] Error 1
[ 42%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_manual_int_size_else.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_integers2.cpp:12:5: error: unknown type name 'switch_integers2_t'; did you mean 'switchIntegers2_t'?
    switch_integers2_t* r = new switch_integers2_t(&ks);
    ^~~~~~~~~~~~~~~~~~
    switchIntegers2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_integers2.h:13:7: note: 'switchIntegers2_t' declared here
class switchIntegers2_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_integers2.cpp:12:33: error: unknown type name 'switch_integers2_t'; did you mean 'switchIntegers2_t'?
    switch_integers2_t* r = new switch_integers2_t(&ks);
                                ^~~~~~~~~~~~~~~~~~
                                switchIntegers2_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_integers2.h:13:7: note: 'switchIntegers2_t' declared here
class switchIntegers2_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum.cpp:12:5: error: unknown type name 'switch_manual_enum_t'; did you mean 'switchManualEnum_t'?
    switch_manual_enum_t* r = new switch_manual_enum_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    switchManualEnum_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum.h:14:7: note: 'switchManualEnum_t' declared here
class switchManualEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum.cpp:12:35: error: unknown type name 'switch_manual_enum_t'; did you mean 'switchManualEnum_t'?
    switch_manual_enum_t* r = new switch_manual_enum_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  switchManualEnum_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum.h:14:7: note: 'switchManualEnum_t' declared here
class switchManualEnum_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_integers2.cpp.o] Error 1
[ 42%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_manual_int_size_eos.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum_invalid.cpp:11:5: error: unknown type name 'switch_manual_enum_invalid_t'; did you mean 'switchManualEnumInvalid_t'?
    switch_manual_enum_invalid_t* r = new switch_manual_enum_invalid_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    switchManualEnumInvalid_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum_invalid.h:14:7: note: 'switchManualEnumInvalid_t' declared here
class switchManualEnumInvalid_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum.cpp:15:52: error: use of undeclared identifier 'switch_manual_enum_t'; did you mean 'switchManualEnum_t'?
    BOOST_CHECK_EQUAL(r->opcodes()->at(0)->code(), switch_manual_enum_t::opcode_t::CODE_ENUM_STRVAL);
                                                   ^~~~~~~~~~~~~~~~~~~~
                                                   switchManualEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum.h:14:7: note: 'switchManualEnum_t' declared here
class switchManualEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum.cpp:16:35: /Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum_invalid.cpp:11:43:error: use of undeclared identifier 'switch_manual_enum_t'; did you mean 'switchManualEnum_t'? error: unknown type name 'switch_manual_enum_invalid_t'; did you mean 'switchManualEnumInvalid_t'?
    switch_manual_enum_invalid_t* r = new switch_manual_enum_invalid_t(&ks);
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                          switchManualEnumInvalid_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum_invalid.h:14:7: note: 'switchManualEnumInvalid_t' declared here
class switchManualEnumInvalid_t : public kaitai::kstruct {
      ^

    BOOST_CHECK_EQUAL(static_cast<switch_manual_enum_t::opcode_t::strval_t*>(r->opcodes()->at(0)->body())->value(), std::string("foobar"));
                                  ^~~~~~~~~~~~~~~~~~~~
                                  switchManualEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum_invalid.cpp: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum.h:14:7: note: 'switchManualEnum_t' declared here
class switchManualEnum_t : public kaitai::kstruct {
      ^
:15:64: error: use of undeclared identifier 'switch_manual_enum_invalid_t'; did you mean 'switchManualEnumInvalid_t'?
    BOOST_CHECK_EQUAL(r->opcodes()->at(0)->code(), static_cast<switch_manual_enum_invalid_t::opcode_t::code_enum_t>(255));
                                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                               switchManualEnumInvalid_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum_invalid.h:14:7: note: 'switchManualEnumInvalid_t' declared here
class switchManualEnumInvalid_t : public kaitai::kstruct {
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum.cpp:17:52: error: use of undeclared identifier 'switch_manual_enum_t'; did you mean 'switchManualEnum_t'?
      ^
    BOOST_CHECK_EQUAL(r->opcodes()->at(1)->code(), switch_manual_enum_t::opcode_t::CODE_ENUM_INTVAL);
                                                   ^~~~~~~~~~~~~~~~~~~~
                                                   switchManualEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum.h:14:7: note: 'switchManualEnum_t' declared here
class switchManualEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum_invalid.cpp:15:104: error: no type named 'code_enum_t' in 'switchManualEnumInvalid_t::opcode_t'; did you mean 'codeEnum_t'?
    BOOST_CHECK_EQUAL(r->opcodes()->at(0)->code(), static_cast<switch_manual_enum_invalid_t::opcode_t::code_enum_t>(255));
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
                                                                                                       codeEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^~~~
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^~~~
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^~
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^~~
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum_invalid.h:33:14: note: 'codeEnum_t' declared here
        enum codeEnum_t {
             ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum.cpp:18:35: error: use of undeclared identifier 'switch_manual_enum_t'; did you mean 'switchManualEnum_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_enum_t::opcode_t::intval_t*>(r->opcodes()->at(1)->body())->value(), 66);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  switchManualEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum.h:14:7: note: 'switchManualEnum_t' declared here
class switchManualEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum.cpp:19:52: error: use of undeclared identifier 'switch_manual_enum_t'; did you mean 'switchManualEnum_t'?
    BOOST_CHECK_EQUAL(r->opcodes()->at(2)->code(), switch_manual_enum_t::opcode_t::CODE_ENUM_INTVAL);
                                                   ^~~~~~~~~~~~~~~~~~~~
                                                   switchManualEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum.h:14:7: note: 'switchManualEnum_t' declared here
class switchManualEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum_invalid.cpp:17:64: error: use of undeclared identifier 'switch_manual_enum_invalid_t'; did you mean 'switchManualEnumInvalid_t'?
    BOOST_CHECK_EQUAL(r->opcodes()->at(1)->code(), static_cast<switch_manual_enum_invalid_t::opcode_t::code_enum_t>(1));
                                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                               switchManualEnumInvalid_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum_invalid.h:14:7: note: 'switchManualEnumInvalid_t' declared here
class switchManualEnumInvalid_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum_invalid.cpp:17:104: error: no type named 'code_enum_t' in 'switchManualEnumInvalid_t::opcode_t'; did you mean 'codeEnum_t'?
    BOOST_CHECK_EQUAL(r->opcodes()->at(1)->code(), static_cast<switch_manual_enum_invalid_t::opcode_t::code_enum_t>(1));
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
                                                                                                       codeEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^~~~
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum.cpp:20:35: error: use of undeclared identifier 'switch_manual_enum_t'; did you mean 'switchManualEnum_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_enum_t::opcode_t::intval_t*>(r->opcodes()->at(2)->body())->value(), 55);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  switchManualEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^~~~
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum.h:14:7: note: 'switchManualEnum_t' declared here
class switchManualEnum_t : public kaitai::kstruct {
      ^
: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^~
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^~~
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum_invalid.h:33:14: note: 'codeEnum_t' declared here
        enum codeEnum_t {
             ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum.cpp:21:52: error: use of undeclared identifier 'switch_manual_enum_t'; did you mean 'switchManualEnum_t'?
    BOOST_CHECK_EQUAL(r->opcodes()->at(3)->code(), switch_manual_enum_t::opcode_t::CODE_ENUM_STRVAL);
                                                   ^~~~~~~~~~~~~~~~~~~~
                                                   switchManualEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum.h:14:7: note: 'switchManualEnum_t' declared here
class switchManualEnum_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum.cpp:22:35: error: use of undeclared identifier 'switch_manual_enum_t'; did you mean 'switchManualEnum_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_enum_t::opcode_t::strval_t*>(r->opcodes()->at(3)->body())->value(), std::string(""));
                                  ^~~~~~~~~~~~~~~~~~~~
                                  switchManualEnum_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum.h:14:7: note: 'switchManualEnum_t' declared here
class switchManualEnum_t : public kaitai::kstruct {
      ^
6 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_manual_enum_invalid.cpp.o] Error 1
[ 42%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_manual_str.cpp.o
10 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_manual_enum.cpp.o] Error 1
[ 42%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_manual_str_else.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum_invalid_else.cpp:11:5: error: unknown type name 'switch_manual_enum_invalid_else_t'
    switch_manual_enum_invalid_else_t* r = new switch_manual_enum_invalid_else_t(&ks);
    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum_invalid_else.cpp:11:48: error: unknown type name 'switch_manual_enum_invalid_else_t'
    switch_manual_enum_invalid_else_t* r = new switch_manual_enum_invalid_else_t(&ks);
                                               ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum_invalid_else.cpp:15:64: error: use of undeclared identifier 'switch_manual_enum_invalid_else_t'
    BOOST_CHECK_EQUAL(r->opcodes()->at(0)->code(), static_cast<switch_manual_enum_invalid_else_t::opcode_t::code_enum_t>(255));
                                                               ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum_invalid_else.cpp:16:35: error: use of undeclared identifier 'switch_manual_enum_invalid_else_t'
    BOOST_CHECK_EQUAL(static_cast<switch_manual_enum_invalid_else_t::opcode_t::defval_t*>(r->opcodes()->at(0)->body())->value(), 123);
                                  ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int.cpp:12:5: error: unknown type name 'switch_manual_int_t'; did you mean 'switchManualInt_t'?
    switch_manual_int_t* r = new switch_manual_int_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    switchManualInt_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int.h:14:7: note: 'switchManualInt_t' declared here
class switchManualInt_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum_invalid_else.cpp:17:64: /Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int.cpp:12:34: error: unknown type name 'switch_manual_int_t'; did you mean 'switchManualInt_t'?
error: use of undeclared identifier 'switch_manual_enum_invalid_else_t'
    BOOST_CHECK_EQUAL(r->opcodes()->at(1)->code(), static_cast<switch_manual_enum_invalid_else_t::opcode_t::code_enum_t>(1));
                                                               ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_enum_invalid_else.cpp:18:35: error: use of undeclared identifier 'switch_manual_enum_invalid_else_t'
    BOOST_CHECK_EQUAL(static_cast<switch_manual_enum_invalid_else_t::opcode_t::defval_t*>(r->opcodes()->at(1)->body())->value(), 123);
                                  ^
    switch_manual_int_t* r = new switch_manual_int_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 switchManualInt_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int.h:14:7: note: 'switchManualInt_t' declared here
class switchManualInt_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int.cpp:16:35: error: use of undeclared identifier 'switch_manual_int_t'; did you mean 'switchManualInt_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_int_t::opcode_t::strval_t*>(r->opcodes()->at(0)->body())->value(), std::string("foobar"));
                                  ^~~~~~~~~~~~~~~~~~~
                                  switchManualInt_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int.h:14:7: note: 'switchManualInt_t' declared here
class switchManualInt_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int.cpp:18:35: error: use of undeclared identifier 'switch_manual_int_t'; did you mean 'switchManualInt_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_int_t::opcode_t::intval_t*>(r->opcodes()->at(1)->body())->value(), 66);
                                  ^~~~~~~~~~~~~~~~~~~
                                  switchManualInt_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int.h:14:7: note: 'switchManualInt_t' declared here
class switchManualInt_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_else.cpp:12:5: error: unknown type name 'switch_manual_int_else_t'; did you mean 'switchManualIntElse_t'?
    switch_manual_int_else_t* r = new switch_manual_int_else_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~~
    switchManualIntElse_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_else.h:14:7: note: 'switchManualIntElse_t' declared here
class switchManualIntElse_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int.cpp:20:35: error: use of undeclared identifier 'switch_manual_int_t'; did you mean 'switchManualInt_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_int_t::opcode_t::intval_t*>(r->opcodes()->at(2)->body())->value(), 55);
                                  ^~~~~~~~~~~~~~~~~~~
                                  switchManualInt_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int.h:14:7: note: 'switchManualInt_t' declared here
class switchManualInt_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_else.cpp:12:39:/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int.cpp:22:35: error: use of undeclared identifier 'switch_manual_int_t'; did you mean 'switchManualInt_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_int_t::opcode_t::strval_t*>(r->opcodes()->at(3)->body())->value(), std::string(""));
                                  ^~~~~~~~~~~~~~~~~~~
                                  switchManualInt_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int.h:14:7: note: 'switchManualInt_t' declared here
class switchManualInt_t : public kaitai::kstruct {
      ^
 error: unknown type name 'switch_manual_int_else_t'; did you mean 'switchManualIntElse_t'?
    switch_manual_int_else_t* r = new switch_manual_int_else_t(&ks);
                                      ^~~~~~~~~~~~~~~~~~~~~~~~
                                      switchManualIntElse_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_else.h:14:7: note: 'switchManualIntElse_t' declared here
class switchManualIntElse_t : public kaitai::kstruct {
      ^
6 errors generated.
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_else.cpp:16:35: error: use of undeclared identifier 'switch_manual_int_else_t'; did you mean 'switchManualIntElse_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_int_else_t::opcode_t::strval_t*>(r->opcodes()->at(0)->body())->value(), std::string("foo"));
                                  ^~~~~~~~~~~~~~~~~~~~~~~~
                                  switchManualIntElse_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_else.h:14:7: note: 'switchManualIntElse_t' declared here
class switchManualIntElse_t : public kaitai::kstruct {
      ^
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_manual_enum_invalid_else.cpp.o] Error 1
[ 43%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_multi_bool_ops.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_else.cpp:18:35: error: use of undeclared identifier 'switch_manual_int_else_t'; did you mean 'switchManualIntElse_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_int_else_t::opcode_t::noneval_t*>(r->opcodes()->at(1)->body())->filler(), 66);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~
                                  switchManualIntElse_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_else.h:14:7: note: 'switchManualIntElse_t' declared here
class switchManualIntElse_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_else.cpp:20:35: error: use of undeclared identifier 'switch_manual_int_else_t'; did you mean 'switchManualIntElse_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_int_else_t::opcode_t::noneval_t*>(r->opcodes()->at(2)->body())->filler(), 51966);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~
                                  switchManualIntElse_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_else.h:14:7: note: 'switchManualIntElse_t' declared here
class switchManualIntElse_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_else.cpp:22:35: error: use of undeclared identifier 'switch_manual_int_else_t'; did you mean 'switchManualIntElse_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_int_else_t::opcode_t::intval_t*>(r->opcodes()->at(3)->body())->value(), 7);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~
                                  switchManualIntElse_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_else.h:14:7: note: 'switchManualIntElse_t' declared here
class switchManualIntElse_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size.cpp:14:5: error: unknown type name 'switch_manual_int_size_t'; did you mean 'switchManualIntSize_t'?
    switch_manual_int_size_t* r = new switch_manual_int_size_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~~
    switchManualIntSize_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_size.h:14:7: note: 'switchManualIntSize_t' declared here
class switchManualIntSize_t : public kaitai::kstruct {
      ^
6 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_manual_int.cpp.o] Error 1
[ 43%] Building CXX object CMakeFiles/ks_tests.dir/test_switch_repeat_expr.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size.cpp:14:39: error: unknown type name 'switch_manual_int_size_t'; did you mean 'switchManualIntSize_t'?
    switch_manual_int_size_t* r = new switch_manual_int_size_t(&ks);
                                      ^~~~~~~~~~~~~~~~~~~~~~~~
                                      switchManualIntSize_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_size.h:14:7: note: 'switchManualIntSize_t' declared here
class switchManualIntSize_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size.cpp:19:5: error: use of undeclared identifier 'switch_manual_int_size_t'; did you mean 'switchManualIntSize_t'?
    switch_manual_int_size_t::chunk_t::chunk_meta_t* meta =
    ^~~~~~~~~~~~~~~~~~~~~~~~
    switchManualIntSize_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_size.h:14:7: note: 'switchManualIntSize_t' declared here
class switchManualIntSize_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size.cpp:19:40: error: no type named 'chunk_meta_t' in 'switchManualIntSize_t::chunk_t'; did you mean 'chunkMeta_t'?
    switch_manual_int_size_t::chunk_t::chunk_meta_t* meta =
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
                                       chunkMeta_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_size.h:41:15: note: 'chunkMeta_t' declared here
        class chunkMeta_t : public kaitai::kstruct {
              ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size.cpp:20:21: error: use of undeclared identifier 'switch_manual_int_size_t'; did you mean 'switchManualIntSize_t'?
        static_cast<switch_manual_int_size_t::chunk_t::chunk_meta_t*>(r->chunks()->at(0)->body());
                    ^~~~~~~~~~~~~~~~~~~~~~~~
                    switchManualIntSize_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_size.h:14:7: note: 'switchManualIntSize_t' declared here
class switchManualIntSize_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size.cpp:20:56: error: no type named 'chunk_meta_t' in 'switchManualIntSize_t::chunk_t'; did you mean 'chunkMeta_t'?
        static_cast<switch_manual_int_size_t::chunk_t::chunk_meta_t*>(r->chunks()->at(0)->body());
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
                                                       chunkMeta_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_size.h:41:15: note: 'chunkMeta_t' declared here
        class chunkMeta_t : public kaitai::kstruct {
              ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size.cpp:25:5: error: use of undeclared identifier 'switch_manual_int_size_t'; did you mean 'switchManualIntSize_t'?
    switch_manual_int_size_t::chunk_t::chunk_dir_t* dir =
    ^~~~~~~~~~~~~~~~~~~~~~~~
    switchManualIntSize_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_size.h:14:7: note: 'switchManualIntSize_t' declared here
class switchManualIntSize_t : public kaitai::kstruct {
      ^
6 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_manual_int_else.cpp.o] Error 1
[ 43%] Building CXX object CMakeFiles/ks_tests.dir/test_term_bytes.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size.cpp:25:40: error: no type named 'chunk_dir_t' in 'switchManualIntSize_t::chunk_t'; did you mean 'chunkDir_t'?
    switch_manual_int_size_t::chunk_t::chunk_dir_t* dir =
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
                                       chunkDir_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_size.h:66:15: note: 'chunkDir_t' declared here
        class chunkDir_t : public kaitai::kstruct {
              ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size.cpp:26:21: error: use of undeclared identifier 'switch_manual_int_size_t'; did you mean 'switchManualIntSize_t'?
        static_cast<switch_manual_int_size_t::chunk_t::chunk_dir_t*>(r->chunks()->at(1)->body());
                    ^~~~~~~~~~~~~~~~~~~~~~~~
                    switchManualIntSize_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_size.h:14:7: note: 'switchManualIntSize_t' declared here
class switchManualIntSize_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size.cpp:26:56: error: no type named 'chunk_dir_t' in 'switchManualIntSize_t::chunk_t'; did you mean 'chunkDir_t'?
        static_cast<switch_manual_int_size_t::chunk_t::chunk_dir_t*>(r->chunks()->at(1)->body());
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
                                                       chunkDir_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_size.h:66:15: note: 'chunkDir_t' declared here
        class chunkDir_t : public kaitai::kstruct {
              ^
10 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_manual_int_size.cpp.o] Error 1
[ 43%] Building CXX object CMakeFiles/ks_tests.dir/test_term_strz.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_else.cpp:13:5: error: unknown type name 'switch_manual_int_size_else_t'
    switch_manual_int_size_else_t* r = new switch_manual_int_size_else_t(&ks);
    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_else.cpp:13:44: error: unknown type name 'switch_manual_int_size_else_t'
    switch_manual_int_size_else_t* r = new switch_manual_int_size_else_t(&ks);
                                           ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_else.cpp:17:35: error: use of undeclared identifier 'switch_manual_int_size_else_t'
    BOOST_CHECK_EQUAL(static_cast<switch_manual_int_size_else_t::chunk_t::chunk_meta_t*>(r->chunks()->at(0)->body())->title(), std::string("Stuff"));
                                  ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_else.cpp:18:35: error: use of undeclared identifier 'switch_manual_int_size_else_t'
    BOOST_CHECK_EQUAL(static_cast<switch_manual_int_size_else_t::chunk_t::chunk_meta_t*>(r->chunks()->at(0)->body())->author(), std::string("Me"));
                                  ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_else.cpp:20:44: error: use of undeclared identifier 'switch_manual_int_size_else_t'
    COMPARE_ARRAY(std::string, static_cast<switch_manual_int_size_else_t::chunk_t::chunk_dir_t*>(r->chunks()->at(1)->body())->entries(), std::string("AAAA"), std::string("BBBB"), std::string("CCCC"));
                                           ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_else.cpp:20:44: error: use of undeclared identifier 'switch_manual_int_size_else_t'
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_else.cpp:22:35:/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_eos.cpp:14:5: error: unknown type name 'switch_manual_int_size_eos_t'
    switch_manual_int_size_eos_t* r = new switch_manual_int_size_eos_t(&ks);
    ^
 error: use of undeclared identifier 'switch_manual_int_size_else_t'
    BOOST_CHECK_EQUAL(static_cast<switch_manual_int_size_else_t::chunk_t::dummy_t*>(r->chunks()->at(2)->body())->rest(), std::string("\x10\x20\x30\x40\x50\x60\x70\x80", 8));
                                  ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_else.cpp:24:35: error: use of undeclared identifier 'switch_manual_int_size_else_t'
    BOOST_CHECK_EQUAL(static_cast<switch_manual_int_size_else_t::chunk_t::dummy_t*>(r->chunks()->at(3)->body())->rest(), std::string("", 0));
                                  ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_eos.cpp:14:43: error: unknown type name 'switch_manual_int_size_eos_t'
    switch_manual_int_size_eos_t* r = new switch_manual_int_size_eos_t(&ks);
                                          ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_eos.cpp:19:5: error: use of undeclared identifier 'switch_manual_int_size_eos_t'
    switch_manual_int_size_eos_t::chunk_body_t::chunk_meta_t* meta =
    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_eos.cpp:20:21: error: use of undeclared identifier 'switch_manual_int_size_eos_t'
        static_cast<switch_manual_int_size_eos_t::chunk_body_t::chunk_meta_t*>(r->chunks()->at(0)->body()->body());
                    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_eos.cpp:25:5: error: use of undeclared identifier 'switch_manual_int_size_eos_t'
    switch_manual_int_size_eos_t::chunk_body_t::chunk_dir_t* dir =
    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_int_size_eos.cpp:26:21:8 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_manual_int_size_else.cpp.o] Error 1
[ 44%] Building CXX object CMakeFiles/ks_tests.dir/test_ts_packet_header.cpp.o
 error: use of undeclared identifier 'switch_manual_int_size_eos_t'
        static_cast<switch_manual_int_size_eos_t::chunk_body_t::chunk_dir_t*>(r->chunks()->at(1)->body()->body());
                    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_str.cpp:12:5: error: unknown type name 'switch_manual_str_t'; did you mean 'switchManualStr_t'?
    switch_manual_str_t* r = new switch_manual_str_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    switchManualStr_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str.h:14:7: note: 'switchManualStr_t' declared here
class switchManualStr_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_str.cpp:12:34: error: unknown type name 'switch_manual_str_t'; did you mean 'switchManualStr_t'?
    switch_manual_str_t* r = new switch_manual_str_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 switchManualStr_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str.h:14:7: note: 'switchManualStr_t' declared here
class switchManualStr_t : public kaitai::kstruct {
      ^
6 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_manual_int_size_eos.cpp.o] Error 1
[ 44%] Building CXX object CMakeFiles/ks_tests.dir/test_type_int_unary_op.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_str.cpp:16:35:/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_str_else.cpp:12:5: error: use of undeclared identifier 'switch_manual_str_t'; did you mean 'switchManualStr_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_str_t::opcode_t::strval_t*>(r->opcodes()->at(0)->body())->value(), std::string("foobar"));
                                  ^~~~~~~~~~~~~~~~~~~
                                  switchManualStr_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str.h:14:7: note: 'switchManualStr_t' declared here
class switchManualStr_t : public kaitai::kstruct {
      ^
 error: unknown type name 'switch_manual_str_else_t'; did you mean 'switchManualStrElse_t'?
    switch_manual_str_else_t* r = new switch_manual_str_else_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~~
    switchManualStrElse_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str_else.h:14:7: note: 'switchManualStrElse_t' declared here
class switchManualStrElse_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_str_else.cpp:12:39: error: unknown type name 'switch_manual_str_else_t'; did you mean 'switchManualStrElse_t'?
    switch_manual_str_else_t* r = new switch_manual_str_else_t(&ks);
                                      ^~~~~~~~~~~~~~~~~~~~~~~~
                                      switchManualStrElse_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str_else.h:14:7: note: 'switchManualStrElse_t' declared here
class switchManualStrElse_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_str.cpp:18:35: error: use of undeclared identifier 'switch_manual_str_t'; did you mean 'switchManualStr_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_str_t::opcode_t::intval_t*>(r->opcodes()->at(1)->body())->value(), 66);
                                  ^~~~~~~~~~~~~~~~~~~
                                  switchManualStr_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str.h:14:7: note: 'switchManualStr_t' declared here
class switchManualStr_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_str.cpp:20:35: error: use of undeclared identifier 'switch_manual_str_t'; did you mean 'switchManualStr_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_str_t::opcode_t::intval_t*>(r->opcodes()->at(2)->body())->value(), 55);
                                  ^~~~~~~~~~~~~~~~~~~
                                  switchManualStr_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str.h:14:7: note: 'switchManualStr_t' declared here
class switchManualStr_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_str_else.cpp:16:35: error: use of undeclared identifier 'switch_manual_str_else_t'; did you mean 'switchManualStrElse_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_str_else_t::opcode_t::strval_t*>(r->opcodes()->at(0)->body())->value(), std::string("foo"));
                                  ^~~~~~~~~~~~~~~~~~~~~~~~
                                  switchManualStrElse_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str_else.h:14:7: note: 'switchManualStrElse_t' declared here
class switchManualStrElse_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_str.cpp:22:35: error: use of undeclared identifier 'switch_manual_str_t'; did you mean 'switchManualStr_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_str_t::opcode_t::strval_t*>(r->opcodes()->at(3)->body())->value(), std::string(""));
                                  ^~~~~~~~~~~~~~~~~~~
                                  switchManualStr_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str.h:14:7: note: 'switchManualStr_t' declared here
class switchManualStr_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_str_else.cpp:18:35: error: use of undeclared identifier 'switch_manual_str_else_t'; did you mean 'switchManualStrElse_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_str_else_t::opcode_t::noneval_t*>(r->opcodes()->at(1)->body())->filler(), 66);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~
                                  switchManualStrElse_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str_else.h:14:7: note: 'switchManualStrElse_t' declared here
class switchManualStrElse_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_str_else.cpp:20:35: error: use of undeclared identifier 'switch_manual_str_else_t'; did you mean 'switchManualStrElse_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_str_else_t::opcode_t::noneval_t*>(r->opcodes()->at(2)->body())->filler(), 51966);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~
                                  switchManualStrElse_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str_else.h:14:7: note: 'switchManualStrElse_t' declared here
class switchManualStrElse_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_manual_str_else.cpp:22:35: error: use of undeclared identifier 'switch_manual_str_else_t'; did you mean 'switchManualStrElse_t'?
    BOOST_CHECK_EQUAL(static_cast<switch_manual_str_else_t::opcode_t::intval_t*>(r->opcodes()->at(3)->body())->value(), 7);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~
                                  switchManualStrElse_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str_else.h:14:7: note: 'switchManualStrElse_t' declared here
class switchManualStrElse_t : public kaitai::kstruct {
      ^
6 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_manual_str.cpp.o] Error 1
[ 44%] Building CXX object CMakeFiles/ks_tests.dir/test_type_ternary.cpp.o
6 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_manual_str_else.cpp.o] Error 1
[ 45%] Building CXX object CMakeFiles/ks_tests.dir/test_type_ternary_opaque.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_multi_bool_ops.cpp:12:5: error: unknown type name 'switch_multi_bool_ops_t'; did you mean 'switchMultiBoolOps_t'?
    switch_multi_bool_ops_t* r = new switch_multi_bool_ops_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~~~
    switchMultiBoolOps_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_multi_bool_ops.h:14:7: note: 'switchMultiBoolOps_t' declared here
class switchMultiBoolOps_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_multi_bool_ops.cpp:12:38: error: unknown type name 'switch_multi_bool_ops_t'; did you mean 'switchMultiBoolOps_t'?
    switch_multi_bool_ops_t* r = new switch_multi_bool_ops_t(&ks);
                                     ^~~~~~~~~~~~~~~~~~~~~~~
                                     switchMultiBoolOps_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_multi_bool_ops.h:14:7: note: 'switchMultiBoolOps_t' declared here
class switchMultiBoolOps_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_repeat_expr.cpp:12:5: error: unknown type name 'switch_repeat_expr_t'; did you mean 'switchRepeatExpr_t'?
    switch_repeat_expr_t* r = new switch_repeat_expr_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~
    switchRepeatExpr_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_repeat_expr.h:14:7: note: 'switchRepeatExpr_t' declared here
class switchRepeatExpr_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_repeat_expr.cpp:12:35: error: unknown type name 'switch_repeat_expr_t'; did you mean 'switchRepeatExpr_t'?
    switch_repeat_expr_t* r = new switch_repeat_expr_t(&ks);
                                  ^~~~~~~~~~~~~~~~~~~~
                                  switchRepeatExpr_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_repeat_expr.h:14:7: note: 'switchRepeatExpr_t' declared here
class switchRepeatExpr_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_switch_repeat_expr.cpp:16:36: error: use of undeclared identifier 'switch_repeat_expr_t'; did you mean 'switchRepeatExpr_t'?
    BOOST_CHECK_EQUAL((static_cast<switch_repeat_expr_t::one_t*>(r->body()->at(0)))->first(), std::string("Stuff\0Me\0", 9));
                                   ^~~~~~~~~~~~~~~~~~~~
                                   switchRepeatExpr_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:81: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 13 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_repeat_expr.h:14:7: note: 'switchRepeatExpr_t' declared here
class switchRepeatExpr_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_multi_bool_ops.cpp.o] Error 1
[ 45%] Building CXX object CMakeFiles/ks_tests.dir/test_user_type.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_term_bytes.cpp:12:5: error: unknown type name 'term_bytes_t'; did you mean 'termBytes_t'?
    term_bytes_t* r = new term_bytes_t(&ks);
    ^~~~~~~~~~~~
    termBytes_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/term_bytes.h:13:7: note: 'termBytes_t' declared here
class termBytes_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_term_bytes.cpp:12:27: error: unknown type name 'term_bytes_t'; did you mean 'termBytes_t'?
    term_bytes_t* r = new term_bytes_t(&ks);
                          ^~~~~~~~~~~~
                          termBytes_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/term_bytes.h:13:7: note: 'termBytes_t' declared here
class termBytes_t : public kaitai::kstruct {
      ^
3 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_switch_repeat_expr.cpp.o] Error 1
[ 45%] Building CXX object CMakeFiles/ks_tests.dir/test_valid_fail_anyof_int.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_term_bytes.cpp.o] Error 1
[ 45%] Building CXX object CMakeFiles/ks_tests.dir/test_valid_fail_contents.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_term_strz.cpp:12:5: error: unknown type name 'term_strz_t'; did you mean 'termStrz_t'?
    term_strz_t* r = new term_strz_t(&ks);
    ^~~~~~~~~~~
    termStrz_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/term_strz.h:13:7: note: 'termStrz_t' declared here
class termStrz_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_term_strz.cpp:12:26: error: unknown type name 'term_strz_t'; did you mean 'termStrz_t'?
    term_strz_t* r = new term_strz_t(&ks);
                         ^~~~~~~~~~~
                         termStrz_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/term_strz.h:13:7: note: 'termStrz_t' declared here
class termStrz_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_term_strz.cpp.o] Error 1
[ 46%] Building CXX object CMakeFiles/ks_tests.dir/test_valid_fail_eq_bytes.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_ts_packet_header.cpp:12:5: error: unknown type name 'ts_packet_header_t'; did you mean 'tsPacketHeader_t'?
    ts_packet_header_t* r = new ts_packet_header_t(&ks);
    ^~~~~~~~~~~~~~~~~~
    tsPacketHeader_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/ts_packet_header.h:17:7: note: 'tsPacketHeader_t' declared here
class tsPacketHeader_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_ts_packet_header.cpp:12:33: error: unknown type name 'ts_packet_header_t'; did you mean 'tsPacketHeader_t'?
    ts_packet_header_t* r = new ts_packet_header_t(&ks);
                                ^~~~~~~~~~~~~~~~~~
                                tsPacketHeader_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/ts_packet_header.h:17:7: note: 'tsPacketHeader_t' declared here
class tsPacketHeader_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_ts_packet_header.cpp:20:54: error: use of undeclared identifier 'ts_packet_header_t'; did you mean 'tsPacketHeader_t'?
    BOOST_CHECK_EQUAL(r->adaptation_field_control(), ts_packet_header_t::ADAPTATION_FIELD_CONTROL_ENUM_PAYLOAD_ONLY);
                                                     ^~~~~~~~~~~~~~~~~~
                                                     tsPacketHeader_t
/usr/local/include/boost/test/tools/old/interface.hpp:155:84: note: expanded from macro 'BOOST_CHECK_EQUAL'
    ::boost::test_tools::tt_detail::equal_impl_frwd(), "", CHECK, CHECK_EQUAL, (L)(R) )
                                                                                   ^
/usr/local/include/boost/test/tools/old/interface.hpp:74:61: note: expanded from macro 'BOOST_TEST_TOOL_IMPL'
        BOOST_JOIN( BOOST_TEST_TOOL_PASS_ARGS, frwd_type )( ARGS ) );           \
                                                            ^
/usr/local/include/boost/test/tools/old/interface.hpp:57:57: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARGS0'
    BOOST_PP_SEQ_FOR_EACH( BOOST_TEST_TOOL_PASS_ARG, _, ARGS )
                                                        ^
note: (skipping 20 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/usr/local/include/boost/preprocessor/seq/elem.hpp:43:60: note: expanded from macro 'BOOST_PP_SEQ_ELEM_II'
#    define BOOST_PP_SEQ_ELEM_II(im) BOOST_PP_SEQ_ELEM_III(im)
                                                           ^
/usr/local/include/boost/preprocessor/seq/elem.hpp:44:41: note: expanded from macro 'BOOST_PP_SEQ_ELEM_III'
#    define BOOST_PP_SEQ_ELEM_III(x, _) x
                                        ^
/usr/local/include/boost/test/tools/old/interface.hpp:53:49: note: expanded from macro 'BOOST_TEST_TOOL_PASS_ARG'
#define BOOST_TEST_TOOL_PASS_ARG( r, _, arg ) , arg, BOOST_STRINGIZE( arg )
                                                ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/ts_packet_header.h:17:7: note: 'tsPacketHeader_t' declared here
class tsPacketHeader_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_type_int_unary_op.cpp:12:5: error: unknown type name 'type_int_unary_op_t'; did you mean 'typeIntUnaryOp_t'?
    type_int_unary_op_t* r = new type_int_unary_op_t(&ks);
    ^~~~~~~~~~~~~~~~~~~
    typeIntUnaryOp_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/type_int_unary_op.h:13:7: note: 'typeIntUnaryOp_t' declared here
class typeIntUnaryOp_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_type_int_unary_op.cpp:12:34: error: unknown type name 'type_int_unary_op_t'; did you mean 'typeIntUnaryOp_t'?
    type_int_unary_op_t* r = new type_int_unary_op_t(&ks);
                                 ^~~~~~~~~~~~~~~~~~~
                                 typeIntUnaryOp_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/type_int_unary_op.h:13:7: note: 'typeIntUnaryOp_t' declared here
class typeIntUnaryOp_t : public kaitai::kstruct {
      ^
3 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_ts_packet_header.cpp.o] Error 1
[ 46%] Building CXX object CMakeFiles/ks_tests.dir/test_valid_fail_eq_int.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_type_int_unary_op.cpp.o] Error 1
[ 46%] Building CXX object CMakeFiles/ks_tests.dir/test_valid_fail_inst.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_type_ternary.cpp:12:5: error: unknown type name 'type_ternary_t'; did you mean 'typeTernary_t'?
    type_ternary_t* r = new type_ternary_t(&ks);
    ^~~~~~~~~~~~~~
    typeTernary_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/type_ternary.h:13:7: note: 'typeTernary_t' declared here
class typeTernary_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_type_ternary.cpp:12:29: error: unknown type name 'type_ternary_t'; did you mean 'typeTernary_t'?
    type_ternary_t* r = new type_ternary_t(&ks);
                            ^~~~~~~~~~~~~~
                            typeTernary_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/type_ternary.h:13:7: note: 'typeTernary_t' declared here
class typeTernary_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_type_ternary_opaque.cpp:13:5: error: unknown type name 'type_ternary_opaque_t'; did you mean 'typeTernaryOpaque_t'?
    type_ternary_opaque_t* r = new type_ternary_opaque_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~
    typeTernaryOpaque_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/type_ternary_opaque.h:14:7: note: 'typeTernaryOpaque_t' declared here
class typeTernaryOpaque_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_type_ternary_opaque.cpp:13:36: error: unknown type name 'type_ternary_opaque_t'; did you mean 'typeTernaryOpaque_t'?
    type_ternary_opaque_t* r = new type_ternary_opaque_t(&ks);
                                   ^~~~~~~~~~~~~~~~~~~~~
                                   typeTernaryOpaque_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/type_ternary_opaque.h:14:7: note: 'typeTernaryOpaque_t' declared here
class typeTernaryOpaque_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_type_ternary.cpp.o] Error 1
[ 46%] Building CXX object CMakeFiles/ks_tests.dir/test_valid_fail_max_int.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_type_ternary_opaque.cpp.o] Error 1
[ 47%] Building CXX object CMakeFiles/ks_tests.dir/test_valid_fail_min_int.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_user_type.cpp:12:5: error: unknown type name 'user_type_t'
    user_type_t* r = new user_type_t(&ks);
    ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_user_type.cpp:12:26: error: unknown type name 'user_type_t'
    user_type_t* r = new user_type_t(&ks);
                         ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_anyof_int.cpp:13:5: error: unknown type name 'valid_fail_anyof_int_t'; did you mean 'validFailAnyofInt_t'?
    valid_fail_anyof_int_t* r = 0;
    ^~~~~~~~~~~~~~~~~~~~~~
    validFailAnyofInt_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_anyof_int.h:13:7: note: 'validFailAnyofInt_t' declared here
class validFailAnyofInt_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_anyof_int.cpp:15:17: error: unknown type name 'valid_fail_anyof_int_t'; did you mean 'validFailAnyofInt_t'?
        r = new valid_fail_anyof_int_t(&ks),
                ^~~~~~~~~~~~~~~~~~~~~~
                validFailAnyofInt_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_anyof_int.h:13:7: note: 'validFailAnyofInt_t' declared here
class validFailAnyofInt_t : public kaitai::kstruct {
      ^
2 errors generated.
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_contents.cpp:13:5: error: unknown type name 'valid_fail_contents_t'; did you mean 'validFailContents_t'?
    valid_fail_contents_t* r = 0;
    ^~~~~~~~~~~~~~~~~~~~~
    validFailContents_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_contents.h:13:7: note: 'validFailContents_t' declared here
class validFailContents_t : public kaitai::kstruct {
      ^
make[2]: *** [CMakeFiles/ks_tests.dir/test_user_type.cpp.o] Error 1
[ 47%] Building CXX object CMakeFiles/ks_tests.dir/test_valid_fail_range_float.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_contents.cpp:15:17: error: unknown type name 'valid_fail_contents_t'; did you mean 'validFailContents_t'?
        r = new valid_fail_contents_t(&ks),
                ^~~~~~~~~~~~~~~~~~~~~
                validFailContents_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_contents.h:13:7: note: 'validFailContents_t' declared here
class validFailContents_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_valid_fail_anyof_int.cpp.o] Error 1
[ 47%] Building CXX object CMakeFiles/ks_tests.dir/test_valid_fail_range_int.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_valid_fail_contents.cpp.o] Error 1
[ 47%] Building CXX object CMakeFiles/ks_tests.dir/test_valid_long.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_eq_bytes.cpp:13:5: error: unknown type name 'valid_fail_eq_bytes_t'; did you mean 'validFailEqBytes_t'?
    valid_fail_eq_bytes_t* r = 0;
    ^~~~~~~~~~~~~~~~~~~~~
    validFailEqBytes_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_eq_bytes.h:13:7: note: 'validFailEqBytes_t' declared here
class validFailEqBytes_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_eq_bytes.cpp:15:17: error: unknown type name 'valid_fail_eq_bytes_t'; did you mean 'validFailEqBytes_t'?
        r = new valid_fail_eq_bytes_t(&ks),
                ^~~~~~~~~~~~~~~~~~~~~
                validFailEqBytes_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_eq_bytes.h:13:7: note: 'validFailEqBytes_t' declared here
class validFailEqBytes_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_valid_fail_eq_bytes.cpp.o] Error 1
[ 48%] Building CXX object CMakeFiles/ks_tests.dir/test_valid_not_parsed_if.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_eq_int.cpp:13:5: error: unknown type name 'valid_fail_eq_int_t'; did you mean 'validFailEqInt_t'?
    valid_fail_eq_int_t* r = 0;
    ^~~~~~~~~~~~~~~~~~~
    validFailEqInt_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_eq_int.h:13:7: note: 'validFailEqInt_t' declared here
class validFailEqInt_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_eq_int.cpp:15:17: error: unknown type name 'valid_fail_eq_int_t'; did you mean 'validFailEqInt_t'?
        r = new valid_fail_eq_int_t(&ks),
                ^~~~~~~~~~~~~~~~~~~
                validFailEqInt_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_eq_int.h:13:7: note: 'validFailEqInt_t' declared here
class validFailEqInt_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_inst.cpp:13:5: error: unknown type name 'valid_fail_inst_t'; did you mean 'validFailInst_t'?
    valid_fail_inst_t* r = 0;
    ^~~~~~~~~~~~~~~~~
    validFailInst_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_inst.h:13:7: note: 'validFailInst_t' declared here
class validFailInst_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_inst.cpp:15:17: error: unknown type name 'valid_fail_inst_t'; did you mean 'validFailInst_t'?
        r = new valid_fail_inst_t(&ks),
                ^~~~~~~~~~~~~~~~~
                validFailInst_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_inst.h:13:7: note: 'validFailInst_t' declared here
class validFailInst_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_valid_fail_eq_int.cpp.o] Error 1
[ 48%] Building CXX object CMakeFiles/ks_tests.dir/test_valid_short.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_valid_fail_inst.cpp.o] Error 1
[ 48%] Building CXX object CMakeFiles/ks_tests.dir/test_valid_switch.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_max_int.cpp:13:5: error: unknown type name 'valid_fail_max_int_t'; did you mean 'validFailMaxInt_t'?
    valid_fail_max_int_t* r = 0;
    ^~~~~~~~~~~~~~~~~~~~
    validFailMaxInt_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_max_int.h:13:7: note: 'validFailMaxInt_t' declared here
class validFailMaxInt_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_max_int.cpp:15:17: error: unknown type name 'valid_fail_max_int_t'; did you mean 'validFailMaxInt_t'?
        r = new valid_fail_max_int_t(&ks),
                ^~~~~~~~~~~~~~~~~~~~
                validFailMaxInt_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_max_int.h:13:7: note: 'validFailMaxInt_t' declared here
class validFailMaxInt_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_min_int.cpp:13:5: error: unknown type name 'valid_fail_min_int_t'; did you mean 'validFailMinInt_t'?
    valid_fail_min_int_t* r = 0;
    ^~~~~~~~~~~~~~~~~~~~
    validFailMinInt_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_min_int.h:13:7: note: 'validFailMinInt_t' declared here
class validFailMinInt_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_min_int.cpp:15:17: error: unknown type name 'valid_fail_min_int_t'; did you mean 'validFailMinInt_t'?
        r = new valid_fail_min_int_t(&ks),
                ^~~~~~~~~~~~~~~~~~~~
                validFailMinInt_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_min_int.h:13:7: note: 'validFailMinInt_t' declared here
class validFailMinInt_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_valid_fail_max_int.cpp.o] Error 1
[ 48%] Building CXX object CMakeFiles/ks_tests.dir/test_yaml_ints.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_valid_fail_min_int.cpp.o] Error 1
[ 49%] Building CXX object CMakeFiles/ks_tests.dir/test_zlib_with_header_78.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_range_float.cpp:14:5: error: unknown type name 'valid_fail_range_float_t'; did you mean 'validFailRangeFloat_t'?
    valid_fail_range_float_t* r = 0;
    ^~~~~~~~~~~~~~~~~~~~~~~~
    validFailRangeFloat_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_range_float.h:13:7: note: 'validFailRangeFloat_t' declared here
class validFailRangeFloat_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_range_float.cpp:16:17: error: unknown type name 'valid_fail_range_float_t'; did you mean 'validFailRangeFloat_t'?
        r = new valid_fail_range_float_t(&ks),
                ^~~~~~~~~~~~~~~~~~~~~~~~
                validFailRangeFloat_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_range_float.h:13:7: note: 'validFailRangeFloat_t' declared here
class validFailRangeFloat_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_range_int.cpp:13:5: error: unknown type name 'valid_fail_range_int_t'; did you mean 'validFailRangeInt_t'?
    valid_fail_range_int_t* r = 0;
    ^~~~~~~~~~~~~~~~~~~~~~
    validFailRangeInt_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_range_int.h:13:7: note: 'validFailRangeInt_t' declared here
class validFailRangeInt_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_fail_range_int.cpp/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_long.cpp:12:5::15:17: error: unknown type name 'valid_fail_range_int_t'; did you mean 'validFailRangeInt_t'?
        r = new valid_fail_range_int_t(&ks),
                ^~~~~~~~~~~~~~~~~~~~~~2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_valid_fail_range_float.cpp.o] Error 1
 error: unknown type name 'valid_long_t'; did you mean 'validLong_t'?
    valid_long_t* r = new valid_long_t(&ks);
    ^~~~~~~~~~~~
    validLong_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_long.h:13:7: note: 'validLong_t' declared here
class validLong_t : public kaitai::kstruct {
      ^
[ 49%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bcd_user_type_be.cpp.o

                validFailRangeInt_t
/usr/local/include/boost/test/tools/old/interface.hpp:119:69: note: expanded from macro 'BOOST_CHECK_THROW'
#define BOOST_CHECK_THROW( S, E )           BOOST_CHECK_THROW_IMPL( S, E, true, "", CHECK )
                                                                    ^
/usr/local/include/boost/test/tools/old/interface.hpp:104:9: note: expanded from macro 'BOOST_CHECK_THROW_IMPL'
        S;                                                                              \
        ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_range_int.h:13:7: note: 'validFailRangeInt_t' declared here
class validFailRangeInt_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_long.cpp:12:27: error: unknown type name 'valid_long_t'; did you mean 'validLong_t'?
    valid_long_t* r = new valid_long_t(&ks);
                          ^~~~~~~~~~~~
                          validLong_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_long.h:13:7: note: 'validLong_t' declared here
class validLong_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_valid_fail_range_int.cpp.o] Error 1
[ 49%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bcd_user_type_le.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_valid_long.cpp.o] Error 1
[ 49%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bits_byte_aligned.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_not_parsed_if.cpp:12:5: error: unknown type name 'valid_not_parsed_if_t'; did you mean 'validNotParsedIf_t'?
    valid_not_parsed_if_t* r = new valid_not_parsed_if_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~
    validNotParsedIf_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_not_parsed_if.h:13:7: note: 'validNotParsedIf_t' declared here
class validNotParsedIf_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_not_parsed_if.cpp:12:36: error: unknown type name 'valid_not_parsed_if_t'; did you mean 'validNotParsedIf_t'?
    valid_not_parsed_if_t* r = new valid_not_parsed_if_t(&ks);
                                   ^~~~~~~~~~~~~~~~~~~~~
                                   validNotParsedIf_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_not_parsed_if.h:13:7: note: 'validNotParsedIf_t' declared here
class validNotParsedIf_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_valid_not_parsed_if.cpp.o] Error 1
[ 50%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bits_enum.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_short.cpp:12:5: error: unknown type name 'valid_short_t'; did you mean 'validShort_t'?
    valid_short_t* r = new valid_short_t(&ks);
    ^~~~~~~~~~~~~
    validShort_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_short.h:13:7: note: 'validShort_t' declared here
class validShort_t : public kaitai::kstruct {
      ^
[ 50%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bits_simple.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_short.cpp:12:28: error: unknown type name 'valid_short_t'; did you mean 'validShort_t'?
    valid_short_t* r = new valid_short_t(&ks);
                           ^~~~~~~~~~~~~
                           validShort_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_short.h:13:7: note: 'validShort_t' declared here
class validShort_t : public kaitai::kstruct {
      ^
[ 50%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/buffered_struct.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_switch.cpp:12:5: error: unknown type name 'valid_switch_t'; did you mean 'validSwitch_t'?
    valid_switch_t* r = new valid_switch_t(&ks);
    ^~~~~~~~~~~~~~
    validSwitch_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_switch.h:13:7: note: 'validSwitch_t' declared here
class validSwitch_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_valid_switch.cpp:12:29: error: unknown type name 'valid_switch_t'; did you mean 'validSwitch_t'?
    valid_switch_t* r = new valid_switch_t(&ks);
                            ^~~~~~~~~~~~~~
                            validSwitch_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_switch.h:13:7: note: 'validSwitch_t' declared here
class validSwitch_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_valid_short.cpp.o] Error 1
[ 50%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/bytes_pad_term.cpp.o
[ 51%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/cast_nested.cpp.o
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_valid_switch.cpp.o] Error 1
[ 51%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/cast_to_imported.cpp.o
[ 51%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/cast_to_top.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_yaml_ints.cpp:12:5: error: unknown type name 'yaml_ints_t'; did you mean 'yamlInts_t'?
    yaml_ints_t* r = new yaml_ints_t(&ks);
    ^~~~~~~~~~~
    yamlInts_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/yaml_ints.h:13:7: note: 'yamlInts_t' declared here
class yamlInts_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_yaml_ints.cpp:12:26: error: unknown type name 'yaml_ints_t'; did you mean 'yamlInts_t'?
    yaml_ints_t* r = new yaml_ints_t(&ks);
                         ^~~~~~~~~~~
                         yamlInts_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/yaml_ints.h:13:7: note: 'yamlInts_t' declared here
class yamlInts_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_zlib_with_header_78.cpp:12:5: error: unknown type name 'zlib_with_header_78_t'; did you mean 'zlibWithHeader78_t'?
    zlib_with_header_78_t* r = new zlib_with_header_78_t(&ks);
    ^~~~~~~~~~~~~~~~~~~~~
    zlibWithHeader78_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/zlib_with_header_78.h:13:7: note: 'zlibWithHeader78_t' declared here
class zlibWithHeader78_t : public kaitai::kstruct {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/test_zlib_with_header_78.cpp:12:36:2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_yaml_ints.cpp.o] Error 1
[ 51%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/debug_0.cpp.o
 error: unknown type name 'zlib_with_header_78_t'; did you mean 'zlibWithHeader78_t'?
    zlib_with_header_78_t* r = new zlib_with_header_78_t(&ks);
                                   ^~~~~~~~~~~~~~~~~~~~~
                                   zlibWithHeader78_t
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/zlib_with_header_78.h:13:7: note: 'zlibWithHeader78_t' declared here
class zlibWithHeader78_t : public kaitai::kstruct {
      ^
2 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/test_zlib_with_header_78.cpp.o] Error 1
[ 52%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/debug_array_user.cpp.o
[ 52%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/debug_enum_name.cpp.o
[ 52%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/debug_switch_user.cpp.o
[ 52%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_big_endian.cpp.o
[ 53%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_endian_expr_exception.cpp.o
[ 53%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_endian_expr_inherited.cpp.o
[ 53%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_endian_expr_is_be.cpp.o
[ 53%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_endian_expr_is_le.cpp.o
[ 54%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/default_endian_mod.cpp.o
[ 54%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/docstrings.cpp.o
[ 54%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/docstrings_docref.cpp.o
[ 54%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/docstrings_docref_multi.cpp.o
[ 55%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_0.cpp.o
[ 55%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_1.cpp.o
[ 55%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_deep.cpp.o
[ 56%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_deep_literals.cpp.o
[ 56%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_fancy.cpp.o
[ 56%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_for_unknown_id.cpp.o
[ 56%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_if.cpp.o
[ 57%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_import.cpp.o
[ 57%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_int_range_s.cpp.o
[ 57%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_int_range_u.cpp.o
[ 57%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_invalid.cpp.o
[ 58%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.cpp.o
[ 58%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_u.cpp.o
[ 58%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_negative.cpp.o
[ 58%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_of_value_inst.cpp.o
[ 59%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_to_i.cpp.o
[ 59%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_to_i_class_border_1.cpp.o
[ 59%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_to_i_class_border_2.cpp.o
[ 59%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/eof_exception_bytes.cpp.o
In file included from /Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.cpp:4:
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.h:18:31: warning: integer literal is too large to be represented in type 'long' and is subject to undefined behavior under C++98, interpreting as 'unsigned long'; this literal will be ill-formed in C++11 onwards [-Wc++11-compat]
        CONSTANTS_LONG_MIN = -9223372036854775808,
                              ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_long_range_s.h:17:10: warning: enumeration values exceed range of largest integer [-Wenum-too-large]
    enum constants_t {
         ^
2 warnings generated.
[ 60%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/eof_exception_u4.cpp.o
[ 60%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/eos_exception_bytes.cpp.o
[ 60%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/eos_exception_u4.cpp.o
[ 60%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_0.cpp.o
[ 61%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_1.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_to_i_class_border_1.cpp:40:21: error: no matching constructor for initialization of 'enumToIClassBorder2_t'
    m_checker = new enumToIClassBorder2_t(_root(), m__io);
                    ^                     ~~~~~~~~~~~~~~
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_to_i_class_border_2.h:19:5: note: candidate constructor not viable: no known conversion from 'enumToIClassBorder1_t *' to 'enumToIClassBorder2_t::enumToIClassBorder1_t *' for 1st argument
    enumToIClassBorder2_t(enumToIClassBorder1_t* p_parent, kaitai::kstream* p__io, kaitai::kstruct* p__parent = 0, enumToIClassBorder2_t* p__root = 0);
    ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_to_i_class_border_2.h:14:7: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 2 were provided
class enumToIClassBorder2_t : public kaitai::kstruct {
      ^
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_to_i_class_border_1.cpp.o] Error 1
[ 61%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_2.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_to_i_class_border_2.cpp:24:24: error: member access into incomplete type 'enumToIClassBorder2_t::enumToIClassBorder1_t'
    m_is_dog = parent()->some_dog() == 4;
                       ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_to_i_class_border_2.h:17:11: note: forward declaration of 'enumToIClassBorder2_t::enumToIClassBorder1_t'
    class enumToIClassBorder1_t;
          ^
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/enum_to_i_class_border_2.cpp.o] Error 1
[ 61%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_3.cpp.o
[ 61%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_array.cpp.o
[ 62%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_bits.cpp.o
[ 62%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_bytes_cmp.cpp.o
[ 62%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_bytes_ops.cpp.o
[ 62%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_enum.cpp.o
[ 63%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_io_eof.cpp.o
[ 63%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_io_pos.cpp.o
[ 63%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_mod.cpp.o
[ 63%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_sizeof_type_0.cpp.o
[ 64%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_sizeof_type_1.cpp.o
[ 64%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_sizeof_value_0.cpp.o
[ 64%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_sizeof_value_sized.cpp.o
[ 64%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/expr_str_ops.cpp.o
[ 65%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/fixed_contents.cpp.o
[ 65%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/fixed_struct.cpp.o
[ 65%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/float_to_i.cpp.o
[ 65%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/floating_points.cpp.o
[ 66%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/hello_world.cpp.o
[ 66%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/if_instances.cpp.o
[ 66%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/if_struct.cpp.o
[ 67%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/if_values.cpp.o
[ 67%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imported_1.cpp.o
[ 67%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imported_2.cpp.o
[ 67%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imported_and_abs.cpp.o
[ 68%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imported_and_rel.cpp.o
[ 68%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imported_root.cpp.o
[ 68%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports0.cpp.o
[ 68%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs.cpp.o
[ 69%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs_abs.cpp.o
[ 69%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs_rel.cpp.o
[ 69%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_circular_a.cpp.o
In file included from /Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imported_and_abs.cpp:4:
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imported_and_abs.h:8:10: fatal error: '/imported_root.h' file not found
#include "/imported_root.h"
         ^~~~~~~~~~~~~~~~~~
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imported_and_abs.cpp.o] Error 1
[ 69%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_circular_b.cpp.o
[ 70%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_rel_1.cpp.o
[ 70%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/index_sizes.cpp.o
[ 70%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/index_to_param_eos.cpp.o
In file included from /Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs.cpp:4:
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs.h:8:10: fatal error: '/common/vlq_base128_le.h' file not found
#include "/common/vlq_base128_le.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs.cpp.o] Error 1
[ 70%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/index_to_param_expr.cpp.o
In file included from /Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs_abs.cpp:4:
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs_abs.h:8:10: fatal error: '/for_abs_imports/imported_and_abs.h' file not found
#include "/for_abs_imports/imported_and_abs.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs_abs.cpp.o] Error 1
[ 71%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/index_to_param_until.cpp.o
In file included from /Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs_rel.cpp:4:
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs_rel.h:8:10: fatal error: '/for_abs_imports/imported_and_rel.h' file not found
#include "/for_abs_imports/imported_and_rel.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_abs_rel.cpp.o] Error 1
[ 71%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/instance_io_user.cpp.o
[ 71%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/instance_std.cpp.o
[ 71%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/instance_std_array.cpp.o
In file included from /Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_rel_1.cpp:4:
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_rel_1.h:8:10: fatal error: 'for_rel_imports/imported_1.h' file not found
#include "for_rel_imports/imported_1.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/imports_rel_1.cpp.o] Error 1
[ 72%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/instance_user_array.cpp.o
[ 72%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/integers.cpp.o
[ 72%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/io_local_var.cpp.o
[ 72%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/js_signed_right_shift.cpp.o
[ 73%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/meta_tags.cpp.o
[ 73%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/meta_xref.cpp.o
[ 73%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/multiple_use.cpp.o
[ 73%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/io_local_var.cpp:17:70: warning: comparison of unsigned expression < 0 is always false [-Wtautological-compare]
    if (static_cast<ioLocalVar_t::dummy_t*>(mess_up())->_io()->pos() < 0) {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~
[ 74%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent2.cpp.o
1 warning generated.
[ 74%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent3.cpp.o
[ 74%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_false.cpp.o
[ 74%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_false2.cpp.o
[ 75%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_override.cpp.o
[ 75%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_switch.cpp.o
[ 75%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_switch_cast.cpp.o
[ 75%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_vs_value_inst.cpp.o
[ 76%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_root.cpp.o
[ 76%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_same_name.cpp.o
[ 76%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_same_name2.cpp.o
[ 76%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_types.cpp.o
[ 77%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_types2.cpp.o
[ 77%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nested_types3.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_switch_cast.cpp:107:68: error: no member named '_parent' in 'kaitai::kstruct'
    m_flag = static_cast<navParentSwitchCast_t::foo_t*>(_parent()->_parent())->flag();
                                                        ~~~~~~~~~  ^
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/nav_parent_switch_cast.cpp.o] Error 1
[ 77%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/non_standard.cpp.o
[ 78%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/opaque_external_type.cpp.o
[ 78%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/opaque_external_type_02_child.cpp.o
[ 78%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/opaque_external_type_02_parent.cpp.o
[ 78%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/opaque_with_param.cpp.o
[ 79%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/optional_id.cpp.o
[ 79%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_call_extra_parens.cpp.o
[ 79%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_call_short.cpp.o
[ 79%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_def.cpp.o
[ 80%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_enum.cpp.o
[ 80%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_pass_struct.cpp.o
[ 80%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/params_pass_usertype.cpp.o
[ 80%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/position_abs.cpp.o
[ 81%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/position_in_seq.cpp.o
[ 81%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/position_to_end.cpp.o
[ 81%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_coerce_bytes.cpp.o
[ 81%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_coerce_usertype1.cpp.o
[ 82%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_coerce_usertype2.cpp.o
[ 82%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom.cpp.o
[ 82%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom_no_args.cpp.o
[ 82%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_repeat_bytes.cpp.o
[ 83%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_repeat_usertype.cpp.o
[ 83%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_rotate.cpp.o
[ 83%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_to_user.cpp.o
[ 83%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_xor4_const.cpp.o
[ 84%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_xor4_value.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom.cpp:19:5: error: unknown type name 'myCustomFx_t'; did you mean 'my_custom_fx_t'?
    myCustomFx_t _process__raw_buf1(7, true, std::string("\x20\x30\x40", 3));
    ^~~~~~~~~~~~
    my_custom_fx_t
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/prereq/my_custom_fx.h:6:7: note: 'my_custom_fx_t' declared here
class my_custom_fx_t : public kaitai::custom_decoder {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom.cpp:22:35: error: expected ';' after expression
    nested_t::deeply_t::customFx_t _process__raw_buf2(7);
                                  ^
                                  ;
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom.cpp:22:25: error: no member named 'customFx_t' in namespace 'nested_t::deeply_t'
    nested_t::deeply_t::customFx_t _process__raw_buf2(7);
    ~~~~~~~~~~~~~~~~~~~~^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom.cpp:22:36: error: use of undeclared identifier '_process__raw_buf2'
    nested_t::deeply_t::customFx_t _process__raw_buf2(7);
                                   ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom.cpp:23:14: error: use of undeclared identifier '_process__raw_buf2'; did you mean '_process__raw_buf1'?
    m_buf2 = _process__raw_buf2.decode(m__raw_buf2);
             ^~~~~~~~~~~~~~~~~~
             _process__raw_buf1
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom.cpp:19:18: note: '_process__raw_buf1' declared here
    myCustomFx_t _process__raw_buf1(7, true, std::string("\x20\x30\x40", 3));
                 ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom.cpp:26:5: error: unknown type name 'myCustomFx_t'; did you mean 'my_custom_fx_t'?
    myCustomFx_t _process__raw_buf3(key(), false, std::string("\x00", 1));
    ^~~~~~~~~~~~
    my_custom_fx_t
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/prereq/my_custom_fx.h:6:7: note: 'my_custom_fx_t' declared here
class my_custom_fx_t : public kaitai::custom_decoder {
      ^
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom_no_args.cpp:16:5: error: unknown type name 'customFxNoArgs_t'
    customFxNoArgs_t _process__raw_buf;
    ^
6 errors generated.
make[2]: *** [CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom.cpp.o] Error 1
[ 84%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_xor_const.cpp.o
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_custom_no_args.cpp.o] Error 1
[ 84%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_xor_value.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_repeat_bytes.cpp:21:51: error: no viable conversion from 'std::vector<std::string> *' (aka 'vector<basic_string<char, char_traits<char>, allocator<char> > > *') to 'std::string' (aka 'basic_string<char, char_traits<char>, allocator<char> >')
        m_bufs = kaitai::kstream::process_xor_one(m__raw_bufs, 158);
                                                  ^~~~~~~~~~~
/Applications/Xcode-9.4.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:760:5: note: candidate constructor not viable: no known conversion from 'std::vector<std::string> *' (aka 'vector<basic_string<char, char_traits<char>, allocator<char> > > *') to 'const std::__1::basic_string<char> &' for 1st argument
    basic_string(const basic_string& __str);
    ^
/Applications/Xcode-9.4.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:775:31: note: candidate constructor not viable: no known conversion from 'std::vector<std::string> *' (aka 'vector<basic_string<char, char_traits<char>, allocator<char> > > *') to 'const char *' for 1st argument
    _LIBCPP_INLINE_VISIBILITY basic_string(const _CharT* __s);
                              ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/../../../runtime/cpp_stl/kaitai/kaitaistream.h:179:52: note: passing argument to parameter 'data' here
    static std::string process_xor_one(std::string data, uint8_t key);
                                                   ^
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_repeat_bytes.cpp.o] Error 1
[ 84%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/recursive_one.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_repeat_usertype.cpp:26:58: error: no viable conversion from 'std::vector<std::string> *' (aka 'vector<basic_string<char, char_traits<char>, allocator<char> > > *') to 'std::string' (aka 'basic_string<char, char_traits<char>, allocator<char> >')
        m__raw_blocks = kaitai::kstream::process_xor_one(m__raw__raw_blocks, 158);
                                                         ^~~~~~~~~~~~~~~~~~
/Applications/Xcode-9.4.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:760:5: note: candidate constructor not viable: no known conversion from 'std::vector<std::string> *' (aka 'vector<basic_string<char, char_traits<char>, allocator<char> > > *') to 'const std::__1::basic_string<char> &' for 1st argument
    basic_string(const basic_string& __str);
    ^
/Applications/Xcode-9.4.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/string:775:31: note: candidate constructor not viable: no known conversion from 'std::vector<std::string> *' (aka 'vector<basic_string<char, char_traits<char>, allocator<char> > > *') to 'const char *' for 1st argument
    _LIBCPP_INLINE_VISIBILITY basic_string(const _CharT* __s);
                              ^
/Users/travis/build/kaitai-io/ci_targets/tests/spec/cpp_stl_98/../../../runtime/cpp_stl/kaitai/kaitaistream.h:179:52: note: passing argument to parameter 'data' here
    static std::string process_xor_one(std::string data, uint8_t key);
                                                   ^
[ 85%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_eos_bit.cpp.o
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/process_repeat_usertype.cpp.o] Error 1
[ 85%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_eos_struct.cpp.o
[ 85%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_eos_u4.cpp.o
[ 85%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_n_struct.cpp.o
[ 86%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_n_strz.cpp.o
[ 86%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_n_strz_double.cpp.o
[ 86%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_until_calc_array_type.cpp.o
[ 86%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_until_complex.cpp.o
[ 87%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_until_s4.cpp.o
[ 87%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/repeat_until_sized.cpp.o
[ 87%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_combine.cpp.o
[ 87%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_encodings.cpp.o
[ 88%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_encodings_default.cpp.o
[ 88%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_eos.cpp.o
[ 88%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_literals.cpp.o
[ 89%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_literals2.cpp.o
[ 89%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_pad_term.cpp.o
[ 89%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/str_pad_term_empty.cpp.o
[ 89%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_bytearray.cpp.o
[ 90%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_cast.cpp.o
[ 90%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_else_only.cpp.o
[ 90%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_integers.cpp.o
[ 90%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_integers2.cpp.o
[ 91%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum.cpp.o
[ 91%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum_invalid.cpp.o
[ 91%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_enum_invalid_else.cpp.o
In file included from /Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_else_only.cpp:4:
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_else_only.h:62:13: error: expected member name or ';' after declaration specifiers
    data_t* struct() const { return m_struct; }
    ~~~~~~  ^
1 error generated.
make[2]: *** [CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_else_only.cpp.o] Error 1
[ 91%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int.cpp.o
[ 92%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_else.cpp.o
[ 92%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_size.cpp.o
[ 92%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_size_else.cpp.o
[ 92%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_int_size_eos.cpp.o
[ 93%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str.cpp.o
[ 93%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_manual_str_else.cpp.o
[ 93%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_multi_bool_ops.cpp.o
[ 93%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/switch_repeat_expr.cpp.o
[ 94%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/term_bytes.cpp.o
[ 94%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/term_strz.cpp.o
[ 94%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/ts_packet_header.cpp.o
[ 94%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/type_int_unary_op.cpp.o
[ 95%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/type_ternary.cpp.o
[ 95%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/type_ternary_opaque.cpp.o
[ 95%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/user_type.cpp.o
[ 95%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_anyof_int.cpp.o
[ 96%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_contents.cpp.o
[ 96%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_eq_bytes.cpp.o
[ 96%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_eq_int.cpp.o
[ 96%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_inst.cpp.o
[ 97%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_max_int.cpp.o
[ 97%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_min_int.cpp.o
[ 97%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_range_float.cpp.o
[ 97%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_fail_range_int.cpp.o
[ 98%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_long.cpp.o
[ 98%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_not_parsed_if.cpp.o
[ 98%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_short.cpp.o
[ 98%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/valid_switch.cpp.o
[ 99%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/vlq_base128_le.cpp.o
[ 99%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/yaml_ints.cpp.o
[ 99%] Building CXX object CMakeFiles/ks_tests.dir/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/zlib_with_header_78.cpp.o
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/yaml_ints.cpp:41:21: warning: implicit conversion from 'unsigned long long' to 'int32_t' (aka 'int') changes value from 18446744073709551615 to -1 [-Wconstant-conversion]
    m_test_u8_dec = 18446744073709551615ULL;
                  ~ ^~~~~~~~~~~~~~~~~~~~~~~
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/yaml_ints.cpp:49:21: warning: implicit conversion from 'unsigned long long' to 'int32_t' (aka 'int') changes value from 18446744073709551615 to -1 [-Wconstant-conversion]
    m_test_u8_hex = 18446744073709551615ULL;
                  ~ ^~~~~~~~~~~~~~~~~~~~~~~
2 warnings generated.
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/vlq_base128_le.cpp:77:335: warning: shift count >= width of type [-Wshift-count-overflow]
    m_value = (((((((groups()->at(0)->value() + ((len() >= 2) ? ((groups()->at(1)->value() << 7)) : (0))) + ((len() >= 3) ? ((groups()->at(2)->value() << 14)) : (0))) + ((len() >= 4) ? ((groups()->at(3)->value() << 21)) : (0))) + ((len() >= 5) ? ((groups()->at(4)->value() << 28)) : (0))) + ((len() >= 6) ? ((groups()->at(5)->value() << 35)) : (0))) + ((len() >= 7) ? ((groups()->at(6)->value() << 42)) : (0))) + ((len() >= 8) ? ((groups()->at(7)->value() << 49)) : (0)));
                                                                                                                                                                                                                                                                                                                                              ^  ~~
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/vlq_base128_le.cpp:77:396: warning: shift count >= width of type [-Wshift-count-overflow]
    m_value = (((((((groups()->at(0)->value() + ((len() >= 2) ? ((groups()->at(1)->value() << 7)) : (0))) + ((len() >= 3) ? ((groups()->at(2)->value() << 14)) : (0))) + ((len() >= 4) ? ((groups()->at(3)->value() << 21)) : (0))) + ((len() >= 5) ? ((groups()->at(4)->value() << 28)) : (0))) + ((len() >= 6) ? ((groups()->at(5)->value() << 35)) : (0))) + ((len() >= 7) ? ((groups()->at(6)->value() << 42)) : (0))) + ((len() >= 8) ? ((groups()->at(7)->value() << 49)) : (0)));
                                                                                                                                                                                                                                                                                                                                                                                                           ^  ~~
/Users/travis/build/kaitai-io/ci_targets/tests/compiled/cpp_stl_98/vlq_base128_le.cpp:77:457: warning: shift count >= width of type [-Wshift-count-overflow]
    m_value = (((((((groups()->at(0)->value() + ((len() >= 2) ? ((groups()->at(1)->value() << 7)) : (0))) + ((len() >= 3) ? ((groups()->at(2)->value() << 14)) : (0))) + ((len() >= 4) ? ((groups()->at(3)->value() << 21)) : (0))) + ((len() >= 5) ? ((groups()->at(4)->value() << 28)) : (0))) + ((len() >= 6) ? ((groups()->at(5)->value() << 35)) : (0))) + ((len() >= 7) ? ((groups()->at(6)->value() << 42)) : (0))) + ((len() >= 8) ? ((groups()->at(7)->value() << 49)) : (0)));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^  ~~
3 warnings generated.
make[2]: Target `CMakeFiles/ks_tests.dir/build' not remade because of errors.
make[1]: *** [CMakeFiles/ks_tests.dir/all] Error 2
make[1]: Target `all' not remade because of errors.
make: *** [all] Error 2
make: Target `default_target' not remade because of errors.
