<testsuite name="Mocha Tests" tests="142" failures="0" errors="2" skipped="0" timestamp="Mon, 04 Mar 2019 17:26:07 GMT" time="0.16">
<testcase classname="BcdUserTypeBe" name="parses test properly" time="0.007"/>
<testcase classname="BcdUserTypeLe" name="parses test properly" time="0.002"/>
<testcase classname="BitsByteAligned" name="parses test properly" time="0"/>
<testcase classname="BitsEnum" name="parses test properly" time="0"/>
<testcase classname="BitsSimple" name="parses test properly" time="0"><failure>readBitsInt: the maximum supported bit length is 32 (tried to read 40 bits)
Error: readBitsInt: the maximum supported bit length is 32 (tried to read 40 bits)
    at KaitaiStream.readBitsInt (/home/travis/build/kaitai-io/ci_targets/runtime/javascript/KaitaiStream.js:403:11)
    at BitsSimple._read (/home/travis/build/kaitai-io/ci_targets/compiled/javascript/BitsSimple.js:33:32)
    at new BitsSimple (/home/travis/build/kaitai-io/ci_targets/compiled/javascript/BitsSimple.js:18:10)
    at /home/travis/build/kaitai-io/ci_targets/tests/helpers/javascript/testHelper.js:12:17
    at FSReqWrap.readFileAfterClose [as oncomplete] (fs.js:439:3)</failure></testcase>
<testcase classname="BufferedStruct" name="parses test properly" time="0"/>
<testcase classname="BytesPadTerm" name="parses test properly" time="0.001"/>
<testcase classname="CastNested" name="parses test properly" time="0.001"/>
<testcase classname="CastToImported" name="parses test properly" time="0"/>
<testcase classname="CastToTop" name="parses test properly" time="0.001"/>
<testcase classname="Debug0" name="parses test properly" time="0"/>
<testcase classname="DebugArrayUser" name="parses test properly" time="0.001"/>
<testcase classname="DebugEnumName" name="parses test properly" time="0.001"/>
<testcase classname="DefaultBigEndian" name="parses test properly" time="0"/>
<testcase classname="DefaultEndianExprException" name="parses test properly" time="0.001"/>
<testcase classname="DefaultEndianExprInherited" name="parses test properly" time="0.001"/>
<testcase classname="DefaultEndianExprIsBe" name="parses test properly" time="0.001"/>
<testcase classname="DefaultEndianExprIsLe" name="parses test properly" time="0.001"/>
<testcase classname="DefaultEndianMod" name="parses test properly" time="0.001"/>
<testcase classname="Docstrings" name="parses test properly" time="0"/>
<testcase classname="DocstringsDocref" name="parses test properly" time="0"/>
<testcase classname="Enum0" name="parses test properly" time="0.001"/>
<testcase classname="Enum1" name="parses test properly" time="0"/>
<testcase classname="EnumDeep" name="parses test properly" time="0.001"/>
<testcase classname="EnumDeepLiterals" name="parses test properly" time="0"/>
<testcase classname="EnumFancy" name="parses test properly" time="0"/>
<testcase classname="EnumForUnknownId" name="parses test properly" time="0"/>
<testcase classname="EnumIf" name="parses test properly" time="0.001"/>
<testcase classname="EnumInvalid" name="parses test properly" time="0"/>
<testcase classname="EnumNegative" name="parses test properly" time="0.001"/>
<testcase classname="EnumOfValueInst" name="parses test properly" time="0"/>
<testcase classname="EnumToI" name="parses test properly" time="0"/>
<testcase classname="EofExceptionBytes" name="parses test properly" time="0"/>
<testcase classname="EofExceptionU4" name="parses test properly" time="0"/>
<testcase classname="Expr0" name="parses test properly" time="0.001"/>
<testcase classname="Expr1" name="parses test properly" time="0"/>
<testcase classname="Expr2" name="parses test properly" time="0.001"/>
<testcase classname="Expr3" name="parses test properly" time="0.001"/>
<testcase classname="ExprArray" name="parses test properly" time="0.001"/>
<testcase classname="ExprBytesCmp" name="parses test properly" time="0.001"/>
<testcase classname="ExprEnum" name="parses test properly" time="0.001"/>
<testcase classname="ExprIoEof" name="parses test properly" time="0"/>
<testcase classname="ExprIoPos" name="parses test properly" time="0.001"/>
<testcase classname="ExprMod" name="parses test properly" time="0"/>
<testcase classname="FixedContents" name="parses test properly" time="0.001"/>
<testcase classname="FixedStruct" name="parses test properly" time="0.001"/>
<testcase classname="FloatToI" name="parses test properly" time="0"/>
<testcase classname="FloatingPoints" name="parses test properly" time="0.001"/>
<testcase classname="HelloWorld" name="parses test properly" time="0"/>
<testcase classname="IfInstances" name="parses test properly" time="0.001"/>
<testcase classname="IfStruct" name="parses test properly" time="0"/>
<testcase classname="IfValues" name="parses test properly" time="0.001"/>
<testcase classname="Imports0" name="parses test properly" time="0"/>
<testcase classname="ImportsAbs" name="parses test properly" time="0.001"/>
<testcase classname="ImportsCircularA" name="parses test properly" time="0"><failure>ImportsCircularA is not a constructor
TypeError: ImportsCircularA is not a constructor
    at ImportsCircularB._read (/home/travis/build/kaitai-io/ci_targets/compiled/javascript/ImportsCircularB.js:23:22)
    at new ImportsCircularB (/home/travis/build/kaitai-io/ci_targets/compiled/javascript/ImportsCircularB.js:18:10)
    at ImportsCircularA._read (/home/travis/build/kaitai-io/ci_targets/compiled/javascript/ImportsCircularA.js:22:16)
    at new ImportsCircularA (/home/travis/build/kaitai-io/ci_targets/compiled/javascript/ImportsCircularA.js:18:10)
    at /home/travis/build/kaitai-io/ci_targets/tests/helpers/javascript/testHelper.js:12:17
    at FSReqWrap.readFileAfterClose [as oncomplete] (fs.js:439:3)</failure></testcase>
<testcase classname="IndexSizes" name="parses test properly" time="0.001"/>
<testcase classname="IndexToParamEos" name="parses test properly" time="0"/>
<testcase classname="IndexToParamExpr" name="parses test properly" time="0.001"/>
<testcase classname="IndexToParamUntil" name="parses test properly" time="0"/>
<testcase classname="InstanceIoUser" name="parses test properly" time="0.001"/>
<testcase classname="InstanceStd" name="parses test properly" time="0.001"/>
<testcase classname="InstanceStdArray" name="parses test properly" time="0"/>
<testcase classname="InstanceUserArray" name="parses test properly" time="0"/>
<testcase classname="Integers" name="parses test properly" time="0.001"/>
<testcase classname="JsSignedRightShift" name="parses test properly" time="0"/>
<testcase classname="MetaXref" name="parses test properly" time="0.001"/>
<testcase classname="MultipleUse" name="parses test properly" time="0.002"/>
<testcase classname="NavParent" name="parses test properly" time="0.002"/>
<testcase classname="NavParent2" name="parses test properly" time="0"/>
<testcase classname="NavParent3" name="parses test properly" time="0"/>
<testcase classname="NavParentFalse" name="parses test properly" time="0.001"/>
<testcase classname="NavParentFalse2" name="parses test properly" time="0"/>
<testcase classname="NavParentOverride" name="parses test properly" time="0.001"/>
<testcase classname="NavParentSwitch" name="parses test properly" time="0"/>
<testcase classname="NavParentVsValueInst" name="parses test properly" time="0.001"/>
<testcase classname="NavRoot" name="parses test properly" time="0"/>
<testcase classname="NestedSameName" name="parses test properly" time="0.001"/>
<testcase classname="NestedSameName2" name="parses test properly" time="0.001"/>
<testcase classname="NestedTypes" name="parses test properly" time="0"/>
<testcase classname="NestedTypes2" name="parses test properly" time="0.001"/>
<testcase classname="NestedTypes3" name="parses test properly" time="0"/>
<testcase classname="NonStandard" name="parses test properly" time="0.001"/>
<testcase classname="OpaqueExternalType" name="parses test properly" time="0"/>
<testcase classname="OpaqueExternalType02Parent" name="parses test properly" time="0.001"/>
<testcase classname="OpaqueWithParam" name="parses test properly" time="0"/>
<testcase classname="OptionalId" name="parses test properly" time="0.001"/>
<testcase classname="ParamsCallShort" name="parses test properly" time="0"/>
<testcase classname="ParamsDef" name="parses test properly" time="0.001"/>
<testcase classname="ParamsEnum" name="parses test properly" time="0"/>
<testcase classname="ParamsPassUsertype" name="parses test properly" time="0.001"/>
<testcase classname="PositionAbs" name="parses test properly" time="0"/>
<testcase classname="PositionInSeq" name="parses test properly" time="0.002"/>
<testcase classname="PositionToEnd" name="parses test properly" time="0"/>
<testcase classname="ProcessCoerceBytes" name="parses test properly" time="0.001"/>
<testcase classname="ProcessCoerceSwitch" name="parses test properly" time="0"/>
<testcase classname="ProcessCoerceUsertype1" name="parses test properly" time="0.001"/>
<testcase classname="ProcessCoerceUsertype2" name="parses test properly" time="0.001"/>
<testcase classname="ProcessCustom" name="parses test properly" time="0"/>
<testcase classname="ProcessRotate" name="parses test properly" time="0.001"/>
<testcase classname="ProcessToUser" name="parses test properly" time="0"/>
<testcase classname="ProcessXor4Const" name="parses test properly" time="0.001"/>
<testcase classname="ProcessXor4Value" name="parses test properly" time="0"/>
<testcase classname="ProcessXorConst" name="parses test properly" time="0.001"/>
<testcase classname="ProcessXorValue" name="parses test properly" time="0"/>
<testcase classname="RecursiveOne" name="parses test properly" time="0"/>
<testcase classname="RepeatEosStruct" name="parses test properly" time="0"/>
<testcase classname="RepeatEosU4" name="parses test properly" time="0"/>
<testcase classname="RepeatNStruct" name="parses test properly" time="0.001"/>
<testcase classname="RepeatNStrz" name="parses test properly" time="0.001"/>
<testcase classname="RepeatNStrzDouble" name="parses test properly" time="0.001"/>
<testcase classname="RepeatUntilComplex" name="parses test properly" time="0"/>
<testcase classname="RepeatUntilS4" name="parses test properly" time="0"/>
<testcase classname="RepeatUntilSized" name="parses test properly" time="0"/>
<testcase classname="StrEncodings" name="parses test properly" time="0.02"/>
<testcase classname="StrEncodingsDefault" name="parses test properly" time="0.001"/>
<testcase classname="StrEos" name="parses test properly" time="0"/>
<testcase classname="StrLiterals" name="parses test properly" time="0.001"/>
<testcase classname="StrLiterals2" name="parses test properly" time="0.001"/>
<testcase classname="StrPadTerm" name="parses test properly" time="0"/>
<testcase classname="StrPadTermEmpty" name="parses test properly" time="0.001"/>
<testcase classname="SwitchBytearray" name="parses test properly" time="0.002"/>
<testcase classname="SwitchCast" name="parses test properly" time="0.001"/>
<testcase classname="SwitchIntegers" name="parses test properly" time="0"/>
<testcase classname="SwitchIntegers2" name="parses test properly" time="0.001"/>
<testcase classname="SwitchManualEnum" name="parses test properly" time="0"/>
<testcase classname="SwitchManualInt" name="parses test properly" time="0.001"/>
<testcase classname="SwitchManualIntElse" name="parses test properly" time="0.001"/>
<testcase classname="SwitchManualIntSize" name="parses test properly" time="0.001"/>
<testcase classname="SwitchManualIntSizeElse" name="parses test properly" time="0.001"/>
<testcase classname="SwitchManualIntSizeEos" name="parses test properly" time="0.001"/>
<testcase classname="SwitchManualStr" name="parses test properly" time="0.001"/>
<testcase classname="SwitchManualStrElse" name="parses test properly" time="0.01"/>
<testcase classname="SwitchMultiBoolOps" name="parses test properly" time="0.001"/>
<testcase classname="SwitchRepeatExpr" name="parses test properly" time="0.001"/>
<testcase classname="TermBytes" name="parses test properly" time="0"/>
<testcase classname="TermStrz" name="parses test properly" time="0.001"/>
<testcase classname="TsPacketHeader" name="parses test properly" time="0"/>
<testcase classname="TypeIntUnaryOp" name="parses test properly" time="0.001"/>
<testcase classname="TypeTernary" name="parses test properly" time="0"/>
<testcase classname="TypeTernaryOpaque" name="parses test properly" time="0.001"/>
<testcase classname="UserType" name="parses test properly" time="0"/>
<testcase classname="ZlibWithHeader78" name="parses test properly" time="0.003"/>
</testsuite>
