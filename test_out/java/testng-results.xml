<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="106" passed="106">
  <reporter-output>
  </reporter-output>
  <suite name="Kaitai Struct Java specs" duration-ms="248" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
    <groups>
    </groups>
    <test name="all" duration-ms="248" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
      <class name="io.kaitai.struct.spec.TestExprBytesCmp">
        <test-method status="PASS" signature="testExprBytesCmp()[pri:0, instance:io.kaitai.struct.spec.TestExprBytesCmp@57829d67]" name="testExprBytesCmp" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExprBytesCmp -->
      </class> <!-- io.kaitai.struct.spec.TestExprBytesCmp -->
      <class name="io.kaitai.struct.spec.TestRepeatEosStruct">
        <test-method status="PASS" signature="testRepeatEosStruct()[pri:0, instance:io.kaitai.struct.spec.TestRepeatEosStruct@6e8dacdf]" name="testRepeatEosStruct" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatEosStruct -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatEosStruct -->
      <class name="io.kaitai.struct.spec.TestFixedStruct">
        <test-method status="PASS" signature="testFixedStruct()[pri:0, instance:io.kaitai.struct.spec.TestFixedStruct@129a8472]" name="testFixedStruct" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedStruct -->
      </class> <!-- io.kaitai.struct.spec.TestFixedStruct -->
      <class name="io.kaitai.struct.spec.TestProcessToUser">
        <test-method status="PASS" signature="testProcessToUser()[pri:0, instance:io.kaitai.struct.spec.TestProcessToUser@6fadae5d]" name="testProcessToUser" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessToUser -->
      </class> <!-- io.kaitai.struct.spec.TestProcessToUser -->
      <class name="io.kaitai.struct.spec.TestFloatingPoints">
        <test-method status="PASS" signature="testFloatingPoints()[pri:0, instance:io.kaitai.struct.spec.TestFloatingPoints@4ec6a292]" name="testFloatingPoints" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFloatingPoints -->
      </class> <!-- io.kaitai.struct.spec.TestFloatingPoints -->
      <class name="io.kaitai.struct.spec.TestNonStandard">
        <test-method status="PASS" signature="testNonStandard()[pri:0, instance:io.kaitai.struct.spec.TestNonStandard@6bdf28bb]" name="testNonStandard" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonStandard -->
      </class> <!-- io.kaitai.struct.spec.TestNonStandard -->
      <class name="io.kaitai.struct.spec.TestImportsCircularA">
        <test-method status="PASS" signature="testImportsCircularA()[pri:0, instance:io.kaitai.struct.spec.TestImportsCircularA@6a5fc7f7]" name="testImportsCircularA" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportsCircularA -->
      </class> <!-- io.kaitai.struct.spec.TestImportsCircularA -->
      <class name="io.kaitai.struct.spec.TestBitsEnum">
        <test-method status="PASS" signature="testBitsEnum()[pri:0, instance:io.kaitai.struct.spec.TestBitsEnum@2c8d66b2]" name="testBitsEnum" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBitsEnum -->
      </class> <!-- io.kaitai.struct.spec.TestBitsEnum -->
      <class name="io.kaitai.struct.spec.TestPositionInSeq">
        <test-method status="PASS" signature="testPositionInSeq()[pri:0, instance:io.kaitai.struct.spec.TestPositionInSeq@511baa65]" name="testPositionInSeq" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositionInSeq -->
      </class> <!-- io.kaitai.struct.spec.TestPositionInSeq -->
      <class name="io.kaitai.struct.spec.TestDefaultBigEndian">
        <test-method status="PASS" signature="testDefaultBigEndian()[pri:0, instance:io.kaitai.struct.spec.TestDefaultBigEndian@7e0ea639]" name="testDefaultBigEndian" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultBigEndian -->
      </class> <!-- io.kaitai.struct.spec.TestDefaultBigEndian -->
      <class name="io.kaitai.struct.spec.TestDebug0">
        <test-method status="PASS" signature="testDebug0()[pri:0, instance:io.kaitai.struct.spec.TestDebug0@47f37ef1]" name="testDebug0" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDebug0 -->
      </class> <!-- io.kaitai.struct.spec.TestDebug0 -->
      <class name="io.kaitai.struct.spec.TestNavParentVsValueInst">
        <test-method status="PASS" signature="testNavParentVsValueInst()[pri:0, instance:io.kaitai.struct.spec.TestNavParentVsValueInst@71c7db30]" name="testNavParentVsValueInst" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParentVsValueInst -->
      </class> <!-- io.kaitai.struct.spec.TestNavParentVsValueInst -->
      <class name="io.kaitai.struct.spec.TestExprIoPos">
        <test-method status="PASS" signature="testExprIoPos()[pri:0, instance:io.kaitai.struct.spec.TestExprIoPos@3ac3fd8b]" name="testExprIoPos" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExprIoPos -->
      </class> <!-- io.kaitai.struct.spec.TestExprIoPos -->
      <class name="io.kaitai.struct.spec.TestProcessXorValue">
        <test-method status="PASS" signature="testProcessXorValue()[pri:0, instance:io.kaitai.struct.spec.TestProcessXorValue@2acf57e3]" name="testProcessXorValue" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessXorValue -->
      </class> <!-- io.kaitai.struct.spec.TestProcessXorValue -->
      <class name="io.kaitai.struct.spec.TestHelloWorld">
        <test-method status="PASS" signature="testHelloWorld()[pri:0, instance:io.kaitai.struct.spec.TestHelloWorld@e580929]" name="testHelloWorld" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHelloWorld -->
      </class> <!-- io.kaitai.struct.spec.TestHelloWorld -->
      <class name="io.kaitai.struct.spec.TestProcessXor4Value">
        <test-method status="PASS" signature="testProcessXor4Value()[pri:0, instance:io.kaitai.struct.spec.TestProcessXor4Value@3b6eb2ec]" name="testProcessXor4Value" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessXor4Value -->
      </class> <!-- io.kaitai.struct.spec.TestProcessXor4Value -->
      <class name="io.kaitai.struct.spec.TestInstanceUserArray">
        <test-method status="PASS" signature="testInstanceUserArray()[pri:0, instance:io.kaitai.struct.spec.TestInstanceUserArray@67b64c45]" name="testInstanceUserArray" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstanceUserArray -->
      </class> <!-- io.kaitai.struct.spec.TestInstanceUserArray -->
      <class name="io.kaitai.struct.spec.TestExprEnum">
        <test-method status="PASS" signature="testExprEnum()[pri:0, instance:io.kaitai.struct.spec.TestExprEnum@2d6e8792]" name="testExprEnum" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExprEnum -->
      </class> <!-- io.kaitai.struct.spec.TestExprEnum -->
      <class name="io.kaitai.struct.spec.TestProcessXorConst">
        <test-method status="PASS" signature="testProcessXorConst()[pri:0, instance:io.kaitai.struct.spec.TestProcessXorConst@357246de]" name="testProcessXorConst" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessXorConst -->
      </class> <!-- io.kaitai.struct.spec.TestProcessXorConst -->
      <class name="io.kaitai.struct.spec.TestProcessXor4Const">
        <test-method status="PASS" signature="testProcessXor4Const()[pri:0, instance:io.kaitai.struct.spec.TestProcessXor4Const@23223dd8]" name="testProcessXor4Const" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessXor4Const -->
      </class> <!-- io.kaitai.struct.spec.TestProcessXor4Const -->
      <class name="io.kaitai.struct.spec.TestBufferedStruct">
        <test-method status="PASS" signature="testBufferedStruct()[pri:0, instance:io.kaitai.struct.spec.TestBufferedStruct@6adca536]" name="testBufferedStruct" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBufferedStruct -->
      </class> <!-- io.kaitai.struct.spec.TestBufferedStruct -->
      <class name="io.kaitai.struct.spec.TestNavParentFalse2">
        <test-method status="PASS" signature="testNavParentFalse2()[pri:0, instance:io.kaitai.struct.spec.TestNavParentFalse2@36d64342]" name="testNavParentFalse2" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParentFalse2 -->
      </class> <!-- io.kaitai.struct.spec.TestNavParentFalse2 -->
      <class name="io.kaitai.struct.spec.TestDebugEnumName">
        <test-method status="PASS" signature="testDebugEnumName()[pri:0, instance:io.kaitai.struct.spec.TestDebugEnumName@5594a1b5]" name="testDebugEnumName" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDebugEnumName -->
      </class> <!-- io.kaitai.struct.spec.TestDebugEnumName -->
      <class name="io.kaitai.struct.spec.TestSwitchManualEnum">
        <test-method status="PASS" signature="testSwitchManualEnum()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualEnum@256216b3]" name="testSwitchManualEnum" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualEnum -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualEnum -->
      <class name="io.kaitai.struct.spec.TestSwitchManualStrElse">
        <test-method status="PASS" signature="testSwitchManualStrElse()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualStrElse@1d251891]" name="testSwitchManualStrElse" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualStrElse -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualStrElse -->
      <class name="io.kaitai.struct.spec.TestSwitchMultiBoolOps">
        <test-method status="PASS" signature="testSwitchMultiBoolOps()[pri:0, instance:io.kaitai.struct.spec.TestSwitchMultiBoolOps@1cd072a9]" name="testSwitchMultiBoolOps" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchMultiBoolOps -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchMultiBoolOps -->
      <class name="io.kaitai.struct.spec.TestEnumForUnknownId">
        <test-method status="PASS" signature="testEnumForUnknownId()[pri:0, instance:io.kaitai.struct.spec.TestEnumForUnknownId@71be98f5]" name="testEnumForUnknownId" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumForUnknownId -->
      </class> <!-- io.kaitai.struct.spec.TestEnumForUnknownId -->
      <class name="io.kaitai.struct.spec.TestRecursiveOne">
        <test-method status="PASS" signature="testRecursiveOne()[pri:0, instance:io.kaitai.struct.spec.TestRecursiveOne@2f7c7260]" name="testRecursiveOne" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecursiveOne -->
      </class> <!-- io.kaitai.struct.spec.TestRecursiveOne -->
      <class name="io.kaitai.struct.spec.TestTermStrz">
        <test-method status="PASS" signature="testTermStrz()[pri:0, instance:io.kaitai.struct.spec.TestTermStrz@5ba23b66]" name="testTermStrz" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTermStrz -->
      </class> <!-- io.kaitai.struct.spec.TestTermStrz -->
      <class name="io.kaitai.struct.spec.TestNavRoot">
        <test-method status="PASS" signature="testNavRoot()[pri:0, instance:io.kaitai.struct.spec.TestNavRoot@30c7da1e]" name="testNavRoot" duration-ms="15" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavRoot -->
      </class> <!-- io.kaitai.struct.spec.TestNavRoot -->
      <class name="io.kaitai.struct.spec.TestRepeatNStrzDouble">
        <test-method status="PASS" signature="testRepeatNStrzDouble()[pri:0, instance:io.kaitai.struct.spec.TestRepeatNStrzDouble@7c75222b]" name="testRepeatNStrzDouble" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatNStrzDouble -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatNStrzDouble -->
      <class name="io.kaitai.struct.spec.TestTsPacketHeader">
        <test-method status="PASS" signature="testTsPacketHeader()[pri:0, instance:io.kaitai.struct.spec.TestTsPacketHeader@49e4cb85]" name="testTsPacketHeader" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTsPacketHeader -->
      </class> <!-- io.kaitai.struct.spec.TestTsPacketHeader -->
      <class name="io.kaitai.struct.spec.TestSwitchManualIntSizeEos">
        <test-method status="PASS" signature="testSwitchManualIntSizeEos()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualIntSizeEos@d7b1517]" name="testSwitchManualIntSizeEos" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualIntSizeEos -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualIntSizeEos -->
      <class name="io.kaitai.struct.spec.TestZlibWithHeader78">
        <test-method status="PASS" signature="testZlibWithHeader78()[pri:0, instance:io.kaitai.struct.spec.TestZlibWithHeader78@16c0663d]" name="testZlibWithHeader78" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZlibWithHeader78 -->
      </class> <!-- io.kaitai.struct.spec.TestZlibWithHeader78 -->
      <class name="io.kaitai.struct.spec.TestRepeatNStrz">
        <test-method status="PASS" signature="testRepeatNStrz()[pri:0, instance:io.kaitai.struct.spec.TestRepeatNStrz@b684286]" name="testRepeatNStrz" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatNStrz -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatNStrz -->
      <class name="io.kaitai.struct.spec.TestRepeatUntilS4">
        <test-method status="PASS" signature="testRepeatUntilS4()[pri:0, instance:io.kaitai.struct.spec.TestRepeatUntilS4@7dc36524]" name="testRepeatUntilS4" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatUntilS4 -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatUntilS4 -->
      <class name="io.kaitai.struct.spec.TestEofExceptionU4">
        <test-method status="PASS" signature="testEofExceptionU4()[pri:0, instance:io.kaitai.struct.spec.TestEofExceptionU4@34ce8af7]" name="testEofExceptionU4" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <exception class="java.nio.BufferUnderflowException">
            <full-stacktrace>
              <![CDATA[java.nio.BufferUnderflowException
	at java.nio.Buffer.nextGetIndex(Buffer.java:506)
	at java.nio.DirectByteBuffer.getInt(DirectByteBuffer.java:681)
	at io.kaitai.struct.KaitaiStream.readU4le(KaitaiStream.java:261)
	at io.kaitai.struct.testformats.EofExceptionU4._read(EofExceptionU4.java:35)
	at io.kaitai.struct.testformats.EofExceptionU4.<init>(EofExceptionU4.java:17)
	at io.kaitai.struct.testformats.EofExceptionU4.fromFile(EofExceptionU4.java:11)
	at io.kaitai.struct.spec.TestEofExceptionU4.testEofExceptionU4(TestEofExceptionU4.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.BufferUnderflowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEofExceptionU4 -->
      </class> <!-- io.kaitai.struct.spec.TestEofExceptionU4 -->
      <class name="io.kaitai.struct.spec.TestPositionAbs">
        <test-method status="PASS" signature="testPositionAbs()[pri:0, instance:io.kaitai.struct.spec.TestPositionAbs@35851384]" name="testPositionAbs" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositionAbs -->
      </class> <!-- io.kaitai.struct.spec.TestPositionAbs -->
      <class name="io.kaitai.struct.spec.TestStrLiterals">
        <test-method status="PASS" signature="testStrLiterals()[pri:0, instance:io.kaitai.struct.spec.TestStrLiterals@11531931]" name="testStrLiterals" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStrLiterals -->
      </class> <!-- io.kaitai.struct.spec.TestStrLiterals -->
      <class name="io.kaitai.struct.spec.TestExprMod">
        <test-method status="PASS" signature="testExprMod()[pri:0, instance:io.kaitai.struct.spec.TestExprMod@506e6d5e]" name="testExprMod" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExprMod -->
      </class> <!-- io.kaitai.struct.spec.TestExprMod -->
      <class name="io.kaitai.struct.spec.TestOptionalId">
        <test-method status="PASS" signature="testOptionalId()[pri:0, instance:io.kaitai.struct.spec.TestOptionalId@340f438e]" name="testOptionalId" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptionalId -->
      </class> <!-- io.kaitai.struct.spec.TestOptionalId -->
      <class name="io.kaitai.struct.spec.TestSwitchManualStr">
        <test-method status="PASS" signature="testSwitchManualStr()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualStr@5b464ce8]" name="testSwitchManualStr" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualStr -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualStr -->
      <class name="io.kaitai.struct.spec.TestIfStruct">
        <test-method status="PASS" signature="testIfStruct()[pri:0, instance:io.kaitai.struct.spec.TestIfStruct@6ad5c04e]" name="testIfStruct" duration-ms="19" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfStruct -->
      </class> <!-- io.kaitai.struct.spec.TestIfStruct -->
      <class name="io.kaitai.struct.spec.TestRepeatUntilSized">
        <test-method status="PASS" signature="testRepeatUntilSized()[pri:0, instance:io.kaitai.struct.spec.TestRepeatUntilSized@58ceff1]" name="testRepeatUntilSized" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatUntilSized -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatUntilSized -->
      <class name="io.kaitai.struct.spec.TestTypeTernaryOpaque">
        <test-method status="PASS" signature="testTypeTernaryOpaque()[pri:0, instance:io.kaitai.struct.spec.TestTypeTernaryOpaque@17c68925]" name="testTypeTernaryOpaque" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeTernaryOpaque -->
      </class> <!-- io.kaitai.struct.spec.TestTypeTernaryOpaque -->
      <class name="io.kaitai.struct.spec.TestStrPadTerm">
        <test-method status="PASS" signature="testStrPadTerm()[pri:0, instance:io.kaitai.struct.spec.TestStrPadTerm@3c5a99da]" name="testStrPadTerm" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStrPadTerm -->
      </class> <!-- io.kaitai.struct.spec.TestStrPadTerm -->
      <class name="io.kaitai.struct.spec.TestDocstringsDocref">
        <test-method status="PASS" signature="testDocstringsDocref()[pri:0, instance:io.kaitai.struct.spec.TestDocstringsDocref@1134affc]" name="testDocstringsDocref" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDocstringsDocref -->
      </class> <!-- io.kaitai.struct.spec.TestDocstringsDocref -->
      <class name="io.kaitai.struct.spec.TestExpr3">
        <test-method status="PASS" signature="testExpr3()[pri:0, instance:io.kaitai.struct.spec.TestExpr3@2d209079]" name="testExpr3" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExpr3 -->
      </class> <!-- io.kaitai.struct.spec.TestExpr3 -->
      <class name="io.kaitai.struct.spec.TestExpr2">
        <test-method status="PASS" signature="testExpr2()[pri:0, instance:io.kaitai.struct.spec.TestExpr2@28f67ac7]" name="testExpr2" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExpr2 -->
      </class> <!-- io.kaitai.struct.spec.TestExpr2 -->
      <class name="io.kaitai.struct.spec.TestNavParent">
        <test-method status="PASS" signature="testNavParent()[pri:0, instance:io.kaitai.struct.spec.TestNavParent@35f983a6]" name="testNavParent" duration-ms="6" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParent -->
      </class> <!-- io.kaitai.struct.spec.TestNavParent -->
      <class name="io.kaitai.struct.spec.TestTermBytes">
        <test-method status="PASS" signature="testTermBytes()[pri:0, instance:io.kaitai.struct.spec.TestTermBytes@3796751b]" name="testTermBytes" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTermBytes -->
      </class> <!-- io.kaitai.struct.spec.TestTermBytes -->
      <class name="io.kaitai.struct.spec.TestExpr1">
        <test-method status="PASS" signature="testExpr1()[pri:0, instance:io.kaitai.struct.spec.TestExpr1@2133c8f8]" name="testExpr1" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExpr1 -->
      </class> <!-- io.kaitai.struct.spec.TestExpr1 -->
      <class name="io.kaitai.struct.spec.TestDocstrings">
        <test-method status="PASS" signature="testDocstrings()[pri:0, instance:io.kaitai.struct.spec.TestDocstrings@7f63425a]" name="testDocstrings" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDocstrings -->
      </class> <!-- io.kaitai.struct.spec.TestDocstrings -->
      <class name="io.kaitai.struct.spec.TestExpr0">
        <test-method status="PASS" signature="testExpr0()[pri:0, instance:io.kaitai.struct.spec.TestExpr0@4cdbe50f]" name="testExpr0" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExpr0 -->
      </class> <!-- io.kaitai.struct.spec.TestExpr0 -->
      <class name="io.kaitai.struct.spec.TestOpaqueExternalType">
        <test-method status="PASS" signature="testOpaqueExternalType()[pri:0, instance:io.kaitai.struct.spec.TestOpaqueExternalType@96532d6]" name="testOpaqueExternalType" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpaqueExternalType -->
      </class> <!-- io.kaitai.struct.spec.TestOpaqueExternalType -->
      <class name="io.kaitai.struct.spec.TestNestedTypes2">
        <test-method status="PASS" signature="testNestedTypes2()[pri:0, instance:io.kaitai.struct.spec.TestNestedTypes2@2a18f23c]" name="testNestedTypes2" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedTypes2 -->
      </class> <!-- io.kaitai.struct.spec.TestNestedTypes2 -->
      <class name="io.kaitai.struct.spec.TestBcdUserTypeBe">
        <test-method status="PASS" signature="testBcdUserTypeBe()[pri:0, instance:io.kaitai.struct.spec.TestBcdUserTypeBe@59a6e353]" name="testBcdUserTypeBe" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBcdUserTypeBe -->
      </class> <!-- io.kaitai.struct.spec.TestBcdUserTypeBe -->
      <class name="io.kaitai.struct.spec.TestBitsSimple">
        <test-method status="PASS" signature="testBitsSimple()[pri:0, instance:io.kaitai.struct.spec.TestBitsSimple@17f6480]" name="testBitsSimple" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBitsSimple -->
      </class> <!-- io.kaitai.struct.spec.TestBitsSimple -->
      <class name="io.kaitai.struct.spec.TestStrLiterals2">
        <test-method status="PASS" signature="testStrLiterals2()[pri:0, instance:io.kaitai.struct.spec.TestStrLiterals2@2812cbfa]" name="testStrLiterals2" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStrLiterals2 -->
      </class> <!-- io.kaitai.struct.spec.TestStrLiterals2 -->
      <class name="io.kaitai.struct.spec.TestIfInstances">
        <test-method status="PASS" signature="testIfInstances()[pri:0, instance:io.kaitai.struct.spec.TestIfInstances@ea4a92b]" name="testIfInstances" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfInstances -->
      </class> <!-- io.kaitai.struct.spec.TestIfInstances -->
      <class name="io.kaitai.struct.spec.TestInstanceStd">
        <test-method status="PASS" signature="testInstanceStd()[pri:0, instance:io.kaitai.struct.spec.TestInstanceStd@5e025e70]" name="testInstanceStd" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstanceStd -->
      </class> <!-- io.kaitai.struct.spec.TestInstanceStd -->
      <class name="io.kaitai.struct.spec.TestEofExceptionBytes">
        <test-method status="PASS" signature="testEofExceptionBytes()[pri:0, instance:io.kaitai.struct.spec.TestEofExceptionBytes@d041cf]" name="testEofExceptionBytes" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <exception class="java.nio.BufferUnderflowException">
            <full-stacktrace>
              <![CDATA[java.nio.BufferUnderflowException
	at java.nio.DirectByteBuffer.get(DirectByteBuffer.java:271)
	at java.nio.ByteBuffer.get(ByteBuffer.java:715)
	at io.kaitai.struct.KaitaiStream.readBytes(KaitaiStream.java:368)
	at io.kaitai.struct.testformats.EofExceptionBytes._read(EofExceptionBytes.java:34)
	at io.kaitai.struct.testformats.EofExceptionBytes.<init>(EofExceptionBytes.java:17)
	at io.kaitai.struct.testformats.EofExceptionBytes.fromFile(EofExceptionBytes.java:11)
	at io.kaitai.struct.spec.TestEofExceptionBytes.testEofExceptionBytes(TestEofExceptionBytes.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.BufferUnderflowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEofExceptionBytes -->
      </class> <!-- io.kaitai.struct.spec.TestEofExceptionBytes -->
      <class name="io.kaitai.struct.spec.TestExprIoEof">
        <test-method status="PASS" signature="testExprIoEof()[pri:0, instance:io.kaitai.struct.spec.TestExprIoEof@7cf10a6f]" name="testExprIoEof" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExprIoEof -->
      </class> <!-- io.kaitai.struct.spec.TestExprIoEof -->
      <class name="io.kaitai.struct.spec.TestRepeatUntilComplex">
        <test-method status="PASS" signature="testRepeatUntilComplex()[pri:0, instance:io.kaitai.struct.spec.TestRepeatUntilComplex@3f0ee7cb]" name="testRepeatUntilComplex" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatUntilComplex -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatUntilComplex -->
      <class name="io.kaitai.struct.spec.TestOpaqueExternalType02Parent">
        <test-method status="PASS" signature="testOpaqueExternalType02Parent()[pri:0, instance:io.kaitai.struct.spec.TestOpaqueExternalType02Parent@5a39699c]" name="testOpaqueExternalType02Parent" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpaqueExternalType02Parent -->
      </class> <!-- io.kaitai.struct.spec.TestOpaqueExternalType02Parent -->
      <class name="io.kaitai.struct.spec.TestSwitchIntegers">
        <test-method status="PASS" signature="testSwitchIntegers()[pri:0, instance:io.kaitai.struct.spec.TestSwitchIntegers@75bd9247]" name="testSwitchIntegers" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchIntegers -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchIntegers -->
      <class name="io.kaitai.struct.spec.TestBytesPadTerm">
        <test-method status="PASS" signature="testBytesPadTerm()[pri:0, instance:io.kaitai.struct.spec.TestBytesPadTerm@56cbfb61]" name="testBytesPadTerm" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBytesPadTerm -->
      </class> <!-- io.kaitai.struct.spec.TestBytesPadTerm -->
      <class name="io.kaitai.struct.spec.TestStrEncodingsDefault">
        <test-method status="PASS" signature="testStrEncodingsDefault()[pri:0, instance:io.kaitai.struct.spec.TestStrEncodingsDefault@4c203ea1]" name="testStrEncodingsDefault" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStrEncodingsDefault -->
      </class> <!-- io.kaitai.struct.spec.TestStrEncodingsDefault -->
      <class name="io.kaitai.struct.spec.TestNavParentSwitch">
        <test-method status="PASS" signature="testNavParentSwitch()[pri:0, instance:io.kaitai.struct.spec.TestNavParentSwitch@880ec60]" name="testNavParentSwitch" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParentSwitch -->
      </class> <!-- io.kaitai.struct.spec.TestNavParentSwitch -->
      <class name="io.kaitai.struct.spec.TestEnumIf">
        <test-method status="PASS" signature="testEnumIf()[pri:0, instance:io.kaitai.struct.spec.TestEnumIf@19dfb72a]" name="testEnumIf" duration-ms="3" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumIf -->
      </class> <!-- io.kaitai.struct.spec.TestEnumIf -->
      <class name="io.kaitai.struct.spec.TestFixedContents">
        <test-method status="PASS" signature="testFixedContents()[pri:0, instance:io.kaitai.struct.spec.TestFixedContents@66d33a]" name="testFixedContents" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedContents -->
      </class> <!-- io.kaitai.struct.spec.TestFixedContents -->
      <class name="io.kaitai.struct.spec.TestInstanceIoUser">
        <test-method status="PASS" signature="testInstanceIoUser()[pri:0, instance:io.kaitai.struct.spec.TestInstanceIoUser@7a79be86]" name="testInstanceIoUser" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstanceIoUser -->
      </class> <!-- io.kaitai.struct.spec.TestInstanceIoUser -->
      <class name="io.kaitai.struct.spec.TestTypeTernary">
        <test-method status="PASS" signature="testTypeTernary()[pri:0, instance:io.kaitai.struct.spec.TestTypeTernary@4411d970]" name="testTypeTernary" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeTernary -->
      </class> <!-- io.kaitai.struct.spec.TestTypeTernary -->
      <class name="io.kaitai.struct.spec.TestInstanceStdArray">
        <test-method status="PASS" signature="testInstanceStdArray()[pri:0, instance:io.kaitai.struct.spec.TestInstanceStdArray@c818063]" name="testInstanceStdArray" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstanceStdArray -->
      </class> <!-- io.kaitai.struct.spec.TestInstanceStdArray -->
      <class name="io.kaitai.struct.spec.TestNavParentFalse">
        <test-method status="PASS" signature="testNavParentFalse()[pri:0, instance:io.kaitai.struct.spec.TestNavParentFalse@2aaf7cc2]" name="testNavParentFalse" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParentFalse -->
      </class> <!-- io.kaitai.struct.spec.TestNavParentFalse -->
      <class name="io.kaitai.struct.spec.TestSwitchManualInt">
        <test-method status="PASS" signature="testSwitchManualInt()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualInt@649d209a]" name="testSwitchManualInt" duration-ms="3" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualInt -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualInt -->
      <class name="io.kaitai.struct.spec.TestNavParent2">
        <test-method status="PASS" signature="testNavParent2()[pri:0, instance:io.kaitai.struct.spec.TestNavParent2@60f82f98]" name="testNavParent2" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParent2 -->
      </class> <!-- io.kaitai.struct.spec.TestNavParent2 -->
      <class name="io.kaitai.struct.spec.TestNavParent3">
        <test-method status="PASS" signature="testNavParent3()[pri:0, instance:io.kaitai.struct.spec.TestNavParent3@1e643faf]" name="testNavParent3" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParent3 -->
      </class> <!-- io.kaitai.struct.spec.TestNavParent3 -->
      <class name="io.kaitai.struct.spec.TestDefaultEndianMod">
        <test-method status="PASS" signature="testDefaultEndianMod()[pri:0, instance:io.kaitai.struct.spec.TestDefaultEndianMod@7d417077]" name="testDefaultEndianMod" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultEndianMod -->
      </class> <!-- io.kaitai.struct.spec.TestDefaultEndianMod -->
      <class name="io.kaitai.struct.spec.TestSwitchCast">
        <test-method status="PASS" signature="testSwitchCast()[pri:0, instance:io.kaitai.struct.spec.TestSwitchCast@45c8e616]" name="testSwitchCast" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchCast -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchCast -->
      <class name="io.kaitai.struct.spec.TestSwitchManualIntSize">
        <test-method status="PASS" signature="testSwitchManualIntSize()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualIntSize@39ba5a14]" name="testSwitchManualIntSize" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualIntSize -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualIntSize -->
      <class name="io.kaitai.struct.spec.TestImports0">
        <test-method status="PASS" signature="testImports0()[pri:0, instance:io.kaitai.struct.spec.TestImports0@7e0babb1]" name="testImports0" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImports0 -->
      </class> <!-- io.kaitai.struct.spec.TestImports0 -->
      <class name="io.kaitai.struct.spec.TestBitsByteAligned">
        <test-method status="PASS" signature="testBitsByteAligned()[pri:0, instance:io.kaitai.struct.spec.TestBitsByteAligned@2752f6e2]" name="testBitsByteAligned" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBitsByteAligned -->
      </class> <!-- io.kaitai.struct.spec.TestBitsByteAligned -->
      <class name="io.kaitai.struct.spec.TestNestedSameName">
        <test-method status="PASS" signature="testNestedSameName()[pri:0, instance:io.kaitai.struct.spec.TestNestedSameName@6debcae2]" name="testNestedSameName" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedSameName -->
      </class> <!-- io.kaitai.struct.spec.TestNestedSameName -->
      <class name="io.kaitai.struct.spec.TestEnumToI">
        <test-method status="PASS" signature="testEnumToI()[pri:0, instance:io.kaitai.struct.spec.TestEnumToI@7a0ac6e3]" name="testEnumToI" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumToI -->
      </class> <!-- io.kaitai.struct.spec.TestEnumToI -->
      <class name="io.kaitai.struct.spec.TestRepeatEosU4">
        <test-method status="PASS" signature="testRepeatEosU4()[pri:0, instance:io.kaitai.struct.spec.TestRepeatEosU4@1fbc7afb]" name="testRepeatEosU4" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatEosU4 -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatEosU4 -->
      <class name="io.kaitai.struct.spec.TestSwitchManualIntSizeElse">
        <test-method status="PASS" signature="testSwitchManualIntSizeElse()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualIntSizeElse@35bbe5e8]" name="testSwitchManualIntSizeElse" duration-ms="6" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualIntSizeElse -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualIntSizeElse -->
      <class name="io.kaitai.struct.spec.TestPositionToEnd">
        <test-method status="PASS" signature="testPositionToEnd()[pri:0, instance:io.kaitai.struct.spec.TestPositionToEnd@3d24753a]" name="testPositionToEnd" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositionToEnd -->
      </class> <!-- io.kaitai.struct.spec.TestPositionToEnd -->
      <class name="io.kaitai.struct.spec.TestImportsAbs">
        <test-method status="PASS" signature="testImportsAbs()[pri:0, instance:io.kaitai.struct.spec.TestImportsAbs@edf4efb]" name="testImportsAbs" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportsAbs -->
      </class> <!-- io.kaitai.struct.spec.TestImportsAbs -->
      <class name="io.kaitai.struct.spec.TestExprArray">
        <test-method status="PASS" signature="testExprArray()[pri:0, instance:io.kaitai.struct.spec.TestExprArray@7f690630]" name="testExprArray" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExprArray -->
      </class> <!-- io.kaitai.struct.spec.TestExprArray -->
      <class name="io.kaitai.struct.spec.TestNestedTypes">
        <test-method status="PASS" signature="testNestedTypes()[pri:0, instance:io.kaitai.struct.spec.TestNestedTypes@4563e9ab]" name="testNestedTypes" duration-ms="4" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedTypes -->
      </class> <!-- io.kaitai.struct.spec.TestNestedTypes -->
      <class name="io.kaitai.struct.spec.TestTypeIntUnaryOp">
        <test-method status="PASS" signature="testTypeIntUnaryOp()[pri:0, instance:io.kaitai.struct.spec.TestTypeIntUnaryOp@1888ff2c]" name="testTypeIntUnaryOp" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeIntUnaryOp -->
      </class> <!-- io.kaitai.struct.spec.TestTypeIntUnaryOp -->
      <class name="io.kaitai.struct.spec.TestFloatToI">
        <test-method status="PASS" signature="testFloatToI()[pri:0, instance:io.kaitai.struct.spec.TestFloatToI@3f3afe78]" name="testFloatToI" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFloatToI -->
      </class> <!-- io.kaitai.struct.spec.TestFloatToI -->
      <class name="io.kaitai.struct.spec.TestIfValues">
        <test-method status="PASS" signature="testIfValues()[pri:0, instance:io.kaitai.struct.spec.TestIfValues@6e3c1e69]" name="testIfValues" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfValues -->
      </class> <!-- io.kaitai.struct.spec.TestIfValues -->
      <class name="io.kaitai.struct.spec.TestMultipleUse">
        <test-method status="PASS" signature="testMultipleUse()[pri:0, instance:io.kaitai.struct.spec.TestMultipleUse@7c30a502]" name="testMultipleUse" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleUse -->
      </class> <!-- io.kaitai.struct.spec.TestMultipleUse -->
      <class name="io.kaitai.struct.spec.TestStrEncodings">
        <test-method status="PASS" signature="testStrEncodings()[pri:0, instance:io.kaitai.struct.spec.TestStrEncodings@19bb089b]" name="testStrEncodings" duration-ms="18" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStrEncodings -->
      </class> <!-- io.kaitai.struct.spec.TestStrEncodings -->
      <class name="io.kaitai.struct.spec.TestEnumOfValueInst">
        <test-method status="PASS" signature="testEnumOfValueInst()[pri:0, instance:io.kaitai.struct.spec.TestEnumOfValueInst@5a01ccaa]" name="testEnumOfValueInst" duration-ms="3" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumOfValueInst -->
      </class> <!-- io.kaitai.struct.spec.TestEnumOfValueInst -->
      <class name="io.kaitai.struct.spec.TestSwitchManualIntElse">
        <test-method status="PASS" signature="testSwitchManualIntElse()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualIntElse@3cb5cdba]" name="testSwitchManualIntElse" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualIntElse -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualIntElse -->
      <class name="io.kaitai.struct.spec.TestEnum1">
        <test-method status="PASS" signature="testEnum1()[pri:0, instance:io.kaitai.struct.spec.TestEnum1@1b40d5f0]" name="testEnum1" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnum1 -->
      </class> <!-- io.kaitai.struct.spec.TestEnum1 -->
      <class name="io.kaitai.struct.spec.TestEnum0">
        <test-method status="PASS" signature="testEnum0()[pri:0, instance:io.kaitai.struct.spec.TestEnum0@48140564]" name="testEnum0" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnum0 -->
      </class> <!-- io.kaitai.struct.spec.TestEnum0 -->
      <class name="io.kaitai.struct.spec.TestProcessRotate">
        <test-method status="PASS" signature="testProcessRotate()[pri:0, instance:io.kaitai.struct.spec.TestProcessRotate@27f674d]" name="testProcessRotate" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessRotate -->
      </class> <!-- io.kaitai.struct.spec.TestProcessRotate -->
      <class name="io.kaitai.struct.spec.TestNavParentOverride">
        <test-method status="PASS" signature="testNavParentOverride()[pri:0, instance:io.kaitai.struct.spec.TestNavParentOverride@6b71769e]" name="testNavParentOverride" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParentOverride -->
      </class> <!-- io.kaitai.struct.spec.TestNavParentOverride -->
      <class name="io.kaitai.struct.spec.TestRepeatNStruct">
        <test-method status="PASS" signature="testRepeatNStruct()[pri:0, instance:io.kaitai.struct.spec.TestRepeatNStruct@6442b0a6]" name="testRepeatNStruct" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatNStruct -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatNStruct -->
      <class name="io.kaitai.struct.spec.TestBcdUserTypeLe">
        <test-method status="PASS" signature="testBcdUserTypeLe()[pri:0, instance:io.kaitai.struct.spec.TestBcdUserTypeLe@1b0375b3]" name="testBcdUserTypeLe" duration-ms="2" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBcdUserTypeLe -->
      </class> <!-- io.kaitai.struct.spec.TestBcdUserTypeLe -->
      <class name="io.kaitai.struct.spec.TestStrEos">
        <test-method status="PASS" signature="testStrEos()[pri:0, instance:io.kaitai.struct.spec.TestStrEos@2ff4f00f]" name="testStrEos" duration-ms="0" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStrEos -->
      </class> <!-- io.kaitai.struct.spec.TestStrEos -->
      <class name="io.kaitai.struct.spec.TestNestedSameName2">
        <test-method status="PASS" signature="testNestedSameName2()[pri:0, instance:io.kaitai.struct.spec.TestNestedSameName2@43a25848]" name="testNestedSameName2" duration-ms="1" started-at="2017-05-01T21:49:20Z" finished-at="2017-05-01T21:49:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedSameName2 -->
      </class> <!-- io.kaitai.struct.spec.TestNestedSameName2 -->
    </test> <!-- all -->
  </suite> <!-- Kaitai Struct Java specs -->
</testng-results>
