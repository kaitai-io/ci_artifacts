<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="141" passed="141">
  <reporter-output>
  </reporter-output>
  <suite name="Kaitai Struct Java specs" duration-ms="352" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
    <groups>
    </groups>
    <test name="all" duration-ms="352" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
      <class name="io.kaitai.struct.spec.TestExprBytesCmp">
        <test-method status="PASS" signature="testExprBytesCmp()[pri:0, instance:io.kaitai.struct.spec.TestExprBytesCmp@dbd940d]" name="testExprBytesCmp" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExprBytesCmp -->
      </class> <!-- io.kaitai.struct.spec.TestExprBytesCmp -->
      <class name="io.kaitai.struct.spec.TestDefaultEndianExprIsLe">
        <test-method status="PASS" signature="testDefaultEndianExprIsLe()[pri:0, instance:io.kaitai.struct.spec.TestDefaultEndianExprIsLe@44a3ec6b]" name="testDefaultEndianExprIsLe" duration-ms="29" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultEndianExprIsLe -->
      </class> <!-- io.kaitai.struct.spec.TestDefaultEndianExprIsLe -->
      <class name="io.kaitai.struct.spec.TestRepeatEosStruct">
        <test-method status="PASS" signature="testRepeatEosStruct()[pri:0, instance:io.kaitai.struct.spec.TestRepeatEosStruct@365c30cc]" name="testRepeatEosStruct" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatEosStruct -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatEosStruct -->
      <class name="io.kaitai.struct.spec.TestParamsPassUsertype">
        <test-method status="PASS" signature="testParamsPassUsertype()[pri:0, instance:io.kaitai.struct.spec.TestParamsPassUsertype@517cd4b]" name="testParamsPassUsertype" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParamsPassUsertype -->
      </class> <!-- io.kaitai.struct.spec.TestParamsPassUsertype -->
      <class name="io.kaitai.struct.spec.TestProcessToUser">
        <test-method status="PASS" signature="testProcessToUser()[pri:0, instance:io.kaitai.struct.spec.TestProcessToUser@71d15f18]" name="testProcessToUser" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessToUser -->
      </class> <!-- io.kaitai.struct.spec.TestProcessToUser -->
      <class name="io.kaitai.struct.spec.TestFixedStruct">
        <test-method status="PASS" signature="testFixedStruct()[pri:0, instance:io.kaitai.struct.spec.TestFixedStruct@21a947fe]" name="testFixedStruct" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedStruct -->
      </class> <!-- io.kaitai.struct.spec.TestFixedStruct -->
      <class name="io.kaitai.struct.spec.TestNonStandard">
        <test-method status="PASS" signature="testNonStandard()[pri:0, instance:io.kaitai.struct.spec.TestNonStandard@11c20519]" name="testNonStandard" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonStandard -->
      </class> <!-- io.kaitai.struct.spec.TestNonStandard -->
      <class name="io.kaitai.struct.spec.TestFloatingPoints">
        <test-method status="PASS" signature="testFloatingPoints()[pri:0, instance:io.kaitai.struct.spec.TestFloatingPoints@43d7741f]" name="testFloatingPoints" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFloatingPoints -->
      </class> <!-- io.kaitai.struct.spec.TestFloatingPoints -->
      <class name="io.kaitai.struct.spec.TestImportsAbsAbs">
        <test-method status="PASS" signature="testImportsAbsAbs()[pri:0, instance:io.kaitai.struct.spec.TestImportsAbsAbs@3ffcd140]" name="testImportsAbsAbs" duration-ms="3" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportsAbsAbs -->
      </class> <!-- io.kaitai.struct.spec.TestImportsAbsAbs -->
      <class name="io.kaitai.struct.spec.TestImportsCircularA">
        <test-method status="PASS" signature="testImportsCircularA()[pri:0, instance:io.kaitai.struct.spec.TestImportsCircularA@f4168b8]" name="testImportsCircularA" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportsCircularA -->
      </class> <!-- io.kaitai.struct.spec.TestImportsCircularA -->
      <class name="io.kaitai.struct.spec.TestEnumNegative">
        <test-method status="PASS" signature="testEnumNegative()[pri:0, instance:io.kaitai.struct.spec.TestEnumNegative@1ee807c6]" name="testEnumNegative" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumNegative -->
      </class> <!-- io.kaitai.struct.spec.TestEnumNegative -->
      <class name="io.kaitai.struct.spec.TestProcessCoerceSwitch">
        <test-method status="PASS" signature="testProcessCoerceSwitch()[pri:0, instance:io.kaitai.struct.spec.TestProcessCoerceSwitch@4ba2ca36]" name="testProcessCoerceSwitch" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessCoerceSwitch -->
      </class> <!-- io.kaitai.struct.spec.TestProcessCoerceSwitch -->
      <class name="io.kaitai.struct.spec.TestStrPadTermEmpty">
        <test-method status="PASS" signature="testStrPadTermEmpty()[pri:0, instance:io.kaitai.struct.spec.TestStrPadTermEmpty@282003e1]" name="testStrPadTermEmpty" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStrPadTermEmpty -->
      </class> <!-- io.kaitai.struct.spec.TestStrPadTermEmpty -->
      <class name="io.kaitai.struct.spec.TestBitsEnum">
        <test-method status="PASS" signature="testBitsEnum()[pri:0, instance:io.kaitai.struct.spec.TestBitsEnum@32464a14]" name="testBitsEnum" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBitsEnum -->
      </class> <!-- io.kaitai.struct.spec.TestBitsEnum -->
      <class name="io.kaitai.struct.spec.TestPositionInSeq">
        <test-method status="PASS" signature="testPositionInSeq()[pri:0, instance:io.kaitai.struct.spec.TestPositionInSeq@6a79c292]" name="testPositionInSeq" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositionInSeq -->
      </class> <!-- io.kaitai.struct.spec.TestPositionInSeq -->
      <class name="io.kaitai.struct.spec.TestDefaultBigEndian">
        <test-method status="PASS" signature="testDefaultBigEndian()[pri:0, instance:io.kaitai.struct.spec.TestDefaultBigEndian@33b37288]" name="testDefaultBigEndian" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultBigEndian -->
      </class> <!-- io.kaitai.struct.spec.TestDefaultBigEndian -->
      <class name="io.kaitai.struct.spec.TestDebug0">
        <test-method status="PASS" signature="testDebug0()[pri:0, instance:io.kaitai.struct.spec.TestDebug0@4df828d7]" name="testDebug0" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDebug0 -->
      </class> <!-- io.kaitai.struct.spec.TestDebug0 -->
      <class name="io.kaitai.struct.spec.TestIntegers">
        <test-method status="PASS" signature="testIntegers()[pri:0, instance:io.kaitai.struct.spec.TestIntegers@5e25a92e]" name="testIntegers" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntegers -->
      </class> <!-- io.kaitai.struct.spec.TestIntegers -->
      <class name="io.kaitai.struct.spec.TestNavParentVsValueInst">
        <test-method status="PASS" signature="testNavParentVsValueInst()[pri:0, instance:io.kaitai.struct.spec.TestNavParentVsValueInst@133e16fd]" name="testNavParentVsValueInst" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParentVsValueInst -->
      </class> <!-- io.kaitai.struct.spec.TestNavParentVsValueInst -->
      <class name="io.kaitai.struct.spec.TestExprIoPos">
        <test-method status="PASS" signature="testExprIoPos()[pri:0, instance:io.kaitai.struct.spec.TestExprIoPos@290dbf45]" name="testExprIoPos" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExprIoPos -->
      </class> <!-- io.kaitai.struct.spec.TestExprIoPos -->
      <class name="io.kaitai.struct.spec.TestYamlInts">
        <test-method status="PASS" signature="testYamlInts()[pri:0, instance:io.kaitai.struct.spec.TestYamlInts@5427c60c]" name="testYamlInts" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testYamlInts -->
      </class> <!-- io.kaitai.struct.spec.TestYamlInts -->
      <class name="io.kaitai.struct.spec.TestProcessXorValue">
        <test-method status="PASS" signature="testProcessXorValue()[pri:0, instance:io.kaitai.struct.spec.TestProcessXorValue@1372ed45]" name="testProcessXorValue" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessXorValue -->
      </class> <!-- io.kaitai.struct.spec.TestProcessXorValue -->
      <class name="io.kaitai.struct.spec.TestHelloWorld">
        <test-method status="PASS" signature="testHelloWorld()[pri:0, instance:io.kaitai.struct.spec.TestHelloWorld@74294adb]" name="testHelloWorld" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHelloWorld -->
      </class> <!-- io.kaitai.struct.spec.TestHelloWorld -->
      <class name="io.kaitai.struct.spec.TestProcessXor4Value">
        <test-method status="PASS" signature="testProcessXor4Value()[pri:0, instance:io.kaitai.struct.spec.TestProcessXor4Value@31206beb]" name="testProcessXor4Value" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessXor4Value -->
      </class> <!-- io.kaitai.struct.spec.TestProcessXor4Value -->
      <class name="io.kaitai.struct.spec.TestInstanceUserArray">
        <test-method status="PASS" signature="testInstanceUserArray()[pri:0, instance:io.kaitai.struct.spec.TestInstanceUserArray@70a9f84e]" name="testInstanceUserArray" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstanceUserArray -->
      </class> <!-- io.kaitai.struct.spec.TestInstanceUserArray -->
      <class name="io.kaitai.struct.spec.TestExprEnum">
        <test-method status="PASS" signature="testExprEnum()[pri:0, instance:io.kaitai.struct.spec.TestExprEnum@134593bf]" name="testExprEnum" duration-ms="4" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExprEnum -->
      </class> <!-- io.kaitai.struct.spec.TestExprEnum -->
      <class name="io.kaitai.struct.spec.TestProcessXorConst">
        <test-method status="PASS" signature="testProcessXorConst()[pri:0, instance:io.kaitai.struct.spec.TestProcessXorConst@4f51b3e0]" name="testProcessXorConst" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessXorConst -->
      </class> <!-- io.kaitai.struct.spec.TestProcessXorConst -->
      <class name="io.kaitai.struct.spec.TestProcessCustom">
        <test-method status="PASS" signature="testProcessCustom()[pri:0, instance:io.kaitai.struct.spec.TestProcessCustom@453da22c]" name="testProcessCustom" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessCustom -->
      </class> <!-- io.kaitai.struct.spec.TestProcessCustom -->
      <class name="io.kaitai.struct.spec.TestDefaultEndianExprInherited">
        <test-method status="PASS" signature="testDefaultEndianExprInherited()[pri:0, instance:io.kaitai.struct.spec.TestDefaultEndianExprInherited@2473b9ce]" name="testDefaultEndianExprInherited" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultEndianExprInherited -->
      </class> <!-- io.kaitai.struct.spec.TestDefaultEndianExprInherited -->
      <class name="io.kaitai.struct.spec.TestProcessXor4Const">
        <test-method status="PASS" signature="testProcessXor4Const()[pri:0, instance:io.kaitai.struct.spec.TestProcessXor4Const@16267862]" name="testProcessXor4Const" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessXor4Const -->
      </class> <!-- io.kaitai.struct.spec.TestProcessXor4Const -->
      <class name="io.kaitai.struct.spec.TestCastToImported">
        <test-method status="PASS" signature="testCastToImported()[pri:0, instance:io.kaitai.struct.spec.TestCastToImported@32cf48b7]" name="testCastToImported" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCastToImported -->
      </class> <!-- io.kaitai.struct.spec.TestCastToImported -->
      <class name="io.kaitai.struct.spec.TestBufferedStruct">
        <test-method status="PASS" signature="testBufferedStruct()[pri:0, instance:io.kaitai.struct.spec.TestBufferedStruct@8b87145]" name="testBufferedStruct" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBufferedStruct -->
      </class> <!-- io.kaitai.struct.spec.TestBufferedStruct -->
      <class name="io.kaitai.struct.spec.TestNavParentFalse2">
        <test-method status="PASS" signature="testNavParentFalse2()[pri:0, instance:io.kaitai.struct.spec.TestNavParentFalse2@17776a8]" name="testNavParentFalse2" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParentFalse2 -->
      </class> <!-- io.kaitai.struct.spec.TestNavParentFalse2 -->
      <class name="io.kaitai.struct.spec.TestIndexToParamExpr">
        <test-method status="PASS" signature="testIndexToParamExpr()[pri:0, instance:io.kaitai.struct.spec.TestIndexToParamExpr@3d8314f0]" name="testIndexToParamExpr" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexToParamExpr -->
      </class> <!-- io.kaitai.struct.spec.TestIndexToParamExpr -->
      <class name="io.kaitai.struct.spec.TestDebugEnumName">
        <test-method status="PASS" signature="testDebugEnumName()[pri:0, instance:io.kaitai.struct.spec.TestDebugEnumName@77a57272]" name="testDebugEnumName" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDebugEnumName -->
      </class> <!-- io.kaitai.struct.spec.TestDebugEnumName -->
      <class name="io.kaitai.struct.spec.TestSwitchManualEnum">
        <test-method status="PASS" signature="testSwitchManualEnum()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualEnum@5a4041cc]" name="testSwitchManualEnum" duration-ms="3" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualEnum -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualEnum -->
      <class name="io.kaitai.struct.spec.TestSwitchManualStrElse">
        <test-method status="PASS" signature="testSwitchManualStrElse()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualStrElse@1188e820]" name="testSwitchManualStrElse" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualStrElse -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualStrElse -->
      <class name="io.kaitai.struct.spec.TestCastNested">
        <test-method status="PASS" signature="testCastNested()[pri:0, instance:io.kaitai.struct.spec.TestCastNested@23bb8443]" name="testCastNested" duration-ms="4" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCastNested -->
      </class> <!-- io.kaitai.struct.spec.TestCastNested -->
      <class name="io.kaitai.struct.spec.TestSwitchMultiBoolOps">
        <test-method status="PASS" signature="testSwitchMultiBoolOps()[pri:0, instance:io.kaitai.struct.spec.TestSwitchMultiBoolOps@1efee8e7]" name="testSwitchMultiBoolOps" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchMultiBoolOps -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchMultiBoolOps -->
      <class name="io.kaitai.struct.spec.TestEnumForUnknownId">
        <test-method status="PASS" signature="testEnumForUnknownId()[pri:0, instance:io.kaitai.struct.spec.TestEnumForUnknownId@101df177]" name="testEnumForUnknownId" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumForUnknownId -->
      </class> <!-- io.kaitai.struct.spec.TestEnumForUnknownId -->
      <class name="io.kaitai.struct.spec.TestRecursiveOne">
        <test-method status="PASS" signature="testRecursiveOne()[pri:0, instance:io.kaitai.struct.spec.TestRecursiveOne@5f71c76a]" name="testRecursiveOne" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecursiveOne -->
      </class> <!-- io.kaitai.struct.spec.TestRecursiveOne -->
      <class name="io.kaitai.struct.spec.TestTermStrz">
        <test-method status="PASS" signature="testTermStrz()[pri:0, instance:io.kaitai.struct.spec.TestTermStrz@701fc37a]" name="testTermStrz" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTermStrz -->
      </class> <!-- io.kaitai.struct.spec.TestTermStrz -->
      <class name="io.kaitai.struct.spec.TestNavRoot">
        <test-method status="PASS" signature="testNavRoot()[pri:0, instance:io.kaitai.struct.spec.TestNavRoot@73d4cc9e]" name="testNavRoot" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavRoot -->
      </class> <!-- io.kaitai.struct.spec.TestNavRoot -->
      <class name="io.kaitai.struct.spec.TestRepeatNStrzDouble">
        <test-method status="PASS" signature="testRepeatNStrzDouble()[pri:0, instance:io.kaitai.struct.spec.TestRepeatNStrzDouble@4b53f538]" name="testRepeatNStrzDouble" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatNStrzDouble -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatNStrzDouble -->
      <class name="io.kaitai.struct.spec.TestTsPacketHeader">
        <test-method status="PASS" signature="testTsPacketHeader()[pri:0, instance:io.kaitai.struct.spec.TestTsPacketHeader@44f75083]" name="testTsPacketHeader" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTsPacketHeader -->
      </class> <!-- io.kaitai.struct.spec.TestTsPacketHeader -->
      <class name="io.kaitai.struct.spec.TestSwitchManualIntSizeEos">
        <test-method status="PASS" signature="testSwitchManualIntSizeEos()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualIntSizeEos@1ad282e0]" name="testSwitchManualIntSizeEos" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualIntSizeEos -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualIntSizeEos -->
      <class name="io.kaitai.struct.spec.TestZlibWithHeader78">
        <test-method status="PASS" signature="testZlibWithHeader78()[pri:0, instance:io.kaitai.struct.spec.TestZlibWithHeader78@7fad8c79]" name="testZlibWithHeader78" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZlibWithHeader78 -->
      </class> <!-- io.kaitai.struct.spec.TestZlibWithHeader78 -->
      <class name="io.kaitai.struct.spec.TestRepeatNStrz">
        <test-method status="PASS" signature="testRepeatNStrz()[pri:0, instance:io.kaitai.struct.spec.TestRepeatNStrz@71a794e5]" name="testRepeatNStrz" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatNStrz -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatNStrz -->
      <class name="io.kaitai.struct.spec.TestDefaultEndianExprIsBe">
        <test-method status="PASS" signature="testDefaultEndianExprIsBe()[pri:0, instance:io.kaitai.struct.spec.TestDefaultEndianExprIsBe@4e4aea35]" name="testDefaultEndianExprIsBe" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultEndianExprIsBe -->
      </class> <!-- io.kaitai.struct.spec.TestDefaultEndianExprIsBe -->
      <class name="io.kaitai.struct.spec.TestRepeatUntilS4">
        <test-method status="PASS" signature="testRepeatUntilS4()[pri:0, instance:io.kaitai.struct.spec.TestRepeatUntilS4@76329302]" name="testRepeatUntilS4" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatUntilS4 -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatUntilS4 -->
      <class name="io.kaitai.struct.spec.TestPositionAbs">
        <test-method status="PASS" signature="testPositionAbs()[pri:0, instance:io.kaitai.struct.spec.TestPositionAbs@543e710e]" name="testPositionAbs" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositionAbs -->
      </class> <!-- io.kaitai.struct.spec.TestPositionAbs -->
      <class name="io.kaitai.struct.spec.TestEofExceptionU4">
        <test-method status="PASS" signature="testEofExceptionU4()[pri:0, instance:io.kaitai.struct.spec.TestEofExceptionU4@7dc222ae]" name="testEofExceptionU4" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <exception class="java.nio.BufferUnderflowException">
            <full-stacktrace>
              <![CDATA[java.nio.BufferUnderflowException
	at java.nio.Buffer.nextGetIndex(Buffer.java:506)
	at java.nio.DirectByteBuffer.getInt(DirectByteBuffer.java:681)
	at io.kaitai.struct.ByteBufferKaitaiStream.readU4le(ByteBufferKaitaiStream.java:219)
	at io.kaitai.struct.testformats.EofExceptionU4._read(EofExceptionU4.java:31)
	at io.kaitai.struct.testformats.EofExceptionU4.<init>(EofExceptionU4.java:27)
	at io.kaitai.struct.testformats.EofExceptionU4.<init>(EofExceptionU4.java:16)
	at io.kaitai.struct.testformats.EofExceptionU4.fromFile(EofExceptionU4.java:12)
	at io.kaitai.struct.spec.TestEofExceptionU4.testEofExceptionU4(TestEofExceptionU4.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.BufferUnderflowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEofExceptionU4 -->
      </class> <!-- io.kaitai.struct.spec.TestEofExceptionU4 -->
      <class name="io.kaitai.struct.spec.TestStrLiterals">
        <test-method status="PASS" signature="testStrLiterals()[pri:0, instance:io.kaitai.struct.spec.TestStrLiterals@6cc7b4de]" name="testStrLiterals" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStrLiterals -->
      </class> <!-- io.kaitai.struct.spec.TestStrLiterals -->
      <class name="io.kaitai.struct.spec.TestExprMod">
        <test-method status="PASS" signature="testExprMod()[pri:0, instance:io.kaitai.struct.spec.TestExprMod@de3a06f]" name="testExprMod" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExprMod -->
      </class> <!-- io.kaitai.struct.spec.TestExprMod -->
      <class name="io.kaitai.struct.spec.TestOptionalId">
        <test-method status="PASS" signature="testOptionalId()[pri:0, instance:io.kaitai.struct.spec.TestOptionalId@5e955596]" name="testOptionalId" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptionalId -->
      </class> <!-- io.kaitai.struct.spec.TestOptionalId -->
      <class name="io.kaitai.struct.spec.TestSwitchManualStr">
        <test-method status="PASS" signature="testSwitchManualStr()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualStr@276438c9]" name="testSwitchManualStr" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualStr -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualStr -->
      <class name="io.kaitai.struct.spec.TestIfStruct">
        <test-method status="PASS" signature="testIfStruct()[pri:0, instance:io.kaitai.struct.spec.TestIfStruct@679b62af]" name="testIfStruct" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfStruct -->
      </class> <!-- io.kaitai.struct.spec.TestIfStruct -->
      <class name="io.kaitai.struct.spec.TestRepeatUntilSized">
        <test-method status="PASS" signature="testRepeatUntilSized()[pri:0, instance:io.kaitai.struct.spec.TestRepeatUntilSized@4148db48]" name="testRepeatUntilSized" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatUntilSized -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatUntilSized -->
      <class name="io.kaitai.struct.spec.TestStrPadTerm">
        <test-method status="PASS" signature="testStrPadTerm()[pri:0, instance:io.kaitai.struct.spec.TestStrPadTerm@11e21d0e]" name="testStrPadTerm" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStrPadTerm -->
      </class> <!-- io.kaitai.struct.spec.TestStrPadTerm -->
      <class name="io.kaitai.struct.spec.TestTypeTernaryOpaque">
        <test-method status="PASS" signature="testTypeTernaryOpaque()[pri:0, instance:io.kaitai.struct.spec.TestTypeTernaryOpaque@1068e947]" name="testTypeTernaryOpaque" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeTernaryOpaque -->
      </class> <!-- io.kaitai.struct.spec.TestTypeTernaryOpaque -->
      <class name="io.kaitai.struct.spec.TestExpr3">
        <test-method status="PASS" signature="testExpr3()[pri:0, instance:io.kaitai.struct.spec.TestExpr3@2a40cd94]" name="testExpr3" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExpr3 -->
      </class> <!-- io.kaitai.struct.spec.TestExpr3 -->
      <class name="io.kaitai.struct.spec.TestDocstringsDocref">
        <test-method status="PASS" signature="testDocstringsDocref()[pri:0, instance:io.kaitai.struct.spec.TestDocstringsDocref@4b9e255]" name="testDocstringsDocref" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDocstringsDocref -->
      </class> <!-- io.kaitai.struct.spec.TestDocstringsDocref -->
      <class name="io.kaitai.struct.spec.TestExpr2">
        <test-method status="PASS" signature="testExpr2()[pri:0, instance:io.kaitai.struct.spec.TestExpr2@1d7acb34]" name="testExpr2" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExpr2 -->
      </class> <!-- io.kaitai.struct.spec.TestExpr2 -->
      <class name="io.kaitai.struct.spec.TestOpaqueWithParam">
        <test-method status="PASS" signature="testOpaqueWithParam()[pri:0, instance:io.kaitai.struct.spec.TestOpaqueWithParam@6b67034]" name="testOpaqueWithParam" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpaqueWithParam -->
      </class> <!-- io.kaitai.struct.spec.TestOpaqueWithParam -->
      <class name="io.kaitai.struct.spec.TestTermBytes">
        <test-method status="PASS" signature="testTermBytes()[pri:0, instance:io.kaitai.struct.spec.TestTermBytes@1442d7b5]" name="testTermBytes" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTermBytes -->
      </class> <!-- io.kaitai.struct.spec.TestTermBytes -->
      <class name="io.kaitai.struct.spec.TestNestedTypes3">
        <test-method status="PASS" signature="testNestedTypes3()[pri:0, instance:io.kaitai.struct.spec.TestNestedTypes3@799d4f69]" name="testNestedTypes3" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedTypes3 -->
      </class> <!-- io.kaitai.struct.spec.TestNestedTypes3 -->
      <class name="io.kaitai.struct.spec.TestExpr1">
        <test-method status="PASS" signature="testExpr1()[pri:0, instance:io.kaitai.struct.spec.TestExpr1@15b3e5b]" name="testExpr1" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExpr1 -->
      </class> <!-- io.kaitai.struct.spec.TestExpr1 -->
      <class name="io.kaitai.struct.spec.TestSwitchBytearray">
        <test-method status="PASS" signature="testSwitchBytearray()[pri:0, instance:io.kaitai.struct.spec.TestSwitchBytearray@37574691]" name="testSwitchBytearray" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchBytearray -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchBytearray -->
      <class name="io.kaitai.struct.spec.TestNavParent">
        <test-method status="PASS" signature="testNavParent()[pri:0, instance:io.kaitai.struct.spec.TestNavParent@382db087]" name="testNavParent" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParent -->
      </class> <!-- io.kaitai.struct.spec.TestNavParent -->
      <class name="io.kaitai.struct.spec.TestDocstrings">
        <test-method status="PASS" signature="testDocstrings()[pri:0, instance:io.kaitai.struct.spec.TestDocstrings@27fe3806]" name="testDocstrings" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDocstrings -->
      </class> <!-- io.kaitai.struct.spec.TestDocstrings -->
      <class name="io.kaitai.struct.spec.TestExpr0">
        <test-method status="PASS" signature="testExpr0()[pri:0, instance:io.kaitai.struct.spec.TestExpr0@17baae6e]" name="testExpr0" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExpr0 -->
      </class> <!-- io.kaitai.struct.spec.TestExpr0 -->
      <class name="io.kaitai.struct.spec.TestOpaqueExternalType">
        <test-method status="PASS" signature="testOpaqueExternalType()[pri:0, instance:io.kaitai.struct.spec.TestOpaqueExternalType@57f23557]" name="testOpaqueExternalType" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpaqueExternalType -->
      </class> <!-- io.kaitai.struct.spec.TestOpaqueExternalType -->
      <class name="io.kaitai.struct.spec.TestNestedTypes2">
        <test-method status="PASS" signature="testNestedTypes2()[pri:0, instance:io.kaitai.struct.spec.TestNestedTypes2@3d0f8e03]" name="testNestedTypes2" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedTypes2 -->
      </class> <!-- io.kaitai.struct.spec.TestNestedTypes2 -->
      <class name="io.kaitai.struct.spec.TestBcdUserTypeBe">
        <test-method status="PASS" signature="testBcdUserTypeBe()[pri:0, instance:io.kaitai.struct.spec.TestBcdUserTypeBe@7181ae3f]" name="testBcdUserTypeBe" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBcdUserTypeBe -->
      </class> <!-- io.kaitai.struct.spec.TestBcdUserTypeBe -->
      <class name="io.kaitai.struct.spec.TestIndexToParamEos">
        <test-method status="PASS" signature="testIndexToParamEos()[pri:0, instance:io.kaitai.struct.spec.TestIndexToParamEos@25359ed8]" name="testIndexToParamEos" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexToParamEos -->
      </class> <!-- io.kaitai.struct.spec.TestIndexToParamEos -->
      <class name="io.kaitai.struct.spec.TestBitsSimple">
        <test-method status="PASS" signature="testBitsSimple()[pri:0, instance:io.kaitai.struct.spec.TestBitsSimple@6a396c1e]" name="testBitsSimple" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBitsSimple -->
      </class> <!-- io.kaitai.struct.spec.TestBitsSimple -->
      <class name="io.kaitai.struct.spec.TestSwitchIntegers2">
        <test-method status="PASS" signature="testSwitchIntegers2()[pri:0, instance:io.kaitai.struct.spec.TestSwitchIntegers2@5fcd892a]" name="testSwitchIntegers2" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchIntegers2 -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchIntegers2 -->
      <class name="io.kaitai.struct.spec.TestStrLiterals2">
        <test-method status="PASS" signature="testStrLiterals2()[pri:0, instance:io.kaitai.struct.spec.TestStrLiterals2@15bfd87]" name="testStrLiterals2" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStrLiterals2 -->
      </class> <!-- io.kaitai.struct.spec.TestStrLiterals2 -->
      <class name="io.kaitai.struct.spec.TestIfInstances">
        <test-method status="PASS" signature="testIfInstances()[pri:0, instance:io.kaitai.struct.spec.TestIfInstances@140e5a13]" name="testIfInstances" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfInstances -->
      </class> <!-- io.kaitai.struct.spec.TestIfInstances -->
      <class name="io.kaitai.struct.spec.TestMetaXref">
        <test-method status="PASS" signature="testMetaXref()[pri:0, instance:io.kaitai.struct.spec.TestMetaXref@2f8f5f62]" name="testMetaXref" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMetaXref -->
      </class> <!-- io.kaitai.struct.spec.TestMetaXref -->
      <class name="io.kaitai.struct.spec.TestInstanceStd">
        <test-method status="PASS" signature="testInstanceStd()[pri:0, instance:io.kaitai.struct.spec.TestInstanceStd@17695df3]" name="testInstanceStd" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstanceStd -->
      </class> <!-- io.kaitai.struct.spec.TestInstanceStd -->
      <class name="io.kaitai.struct.spec.TestEofExceptionBytes">
        <test-method status="PASS" signature="testEofExceptionBytes()[pri:0, instance:io.kaitai.struct.spec.TestEofExceptionBytes@6e2c9341]" name="testEofExceptionBytes" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <exception class="java.nio.BufferUnderflowException">
            <full-stacktrace>
              <![CDATA[java.nio.BufferUnderflowException
	at java.nio.DirectByteBuffer.get(DirectByteBuffer.java:271)
	at java.nio.ByteBuffer.get(ByteBuffer.java:715)
	at io.kaitai.struct.ByteBufferKaitaiStream.readBytes(ByteBufferKaitaiStream.java:274)
	at io.kaitai.struct.testformats.EofExceptionBytes._read(EofExceptionBytes.java:30)
	at io.kaitai.struct.testformats.EofExceptionBytes.<init>(EofExceptionBytes.java:27)
	at io.kaitai.struct.testformats.EofExceptionBytes.<init>(EofExceptionBytes.java:16)
	at io.kaitai.struct.testformats.EofExceptionBytes.fromFile(EofExceptionBytes.java:12)
	at io.kaitai.struct.spec.TestEofExceptionBytes.testEofExceptionBytes(TestEofExceptionBytes.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- java.nio.BufferUnderflowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEofExceptionBytes -->
      </class> <!-- io.kaitai.struct.spec.TestEofExceptionBytes -->
      <class name="io.kaitai.struct.spec.TestExprIoEof">
        <test-method status="PASS" signature="testExprIoEof()[pri:0, instance:io.kaitai.struct.spec.TestExprIoEof@4bb4de6a]" name="testExprIoEof" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExprIoEof -->
      </class> <!-- io.kaitai.struct.spec.TestExprIoEof -->
      <class name="io.kaitai.struct.spec.TestImportsRel1">
        <test-method status="PASS" signature="testImportsRel1()[pri:0, instance:io.kaitai.struct.spec.TestImportsRel1@2698dc7]" name="testImportsRel1" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportsRel1 -->
      </class> <!-- io.kaitai.struct.spec.TestImportsRel1 -->
      <class name="io.kaitai.struct.spec.TestDefaultEndianExprException">
        <test-method status="PASS" signature="testDefaultEndianExprException()[pri:0, instance:io.kaitai.struct.spec.TestDefaultEndianExprException@46238e3f]" name="testDefaultEndianExprException" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <exception class="io.kaitai.struct.KaitaiStream$UndecidedEndiannessError">
            <full-stacktrace>
              <![CDATA[io.kaitai.struct.KaitaiStream$UndecidedEndiannessError
	at io.kaitai.struct.testformats.DefaultEndianExprException$Doc$MainObj._read(DefaultEndianExprException.java:98)
	at io.kaitai.struct.testformats.DefaultEndianExprException$Doc$MainObj.<init>(DefaultEndianExprException.java:82)
	at io.kaitai.struct.testformats.DefaultEndianExprException$Doc._read(DefaultEndianExprException.java:62)
	at io.kaitai.struct.testformats.DefaultEndianExprException$Doc.<init>(DefaultEndianExprException.java:58)
	at io.kaitai.struct.testformats.DefaultEndianExprException._read(DefaultEndianExprException.java:36)
	at io.kaitai.struct.testformats.DefaultEndianExprException.<init>(DefaultEndianExprException.java:29)
	at io.kaitai.struct.testformats.DefaultEndianExprException.<init>(DefaultEndianExprException.java:18)
	at io.kaitai.struct.testformats.DefaultEndianExprException.fromFile(DefaultEndianExprException.java:14)
	at io.kaitai.struct.spec.TestDefaultEndianExprException.testDefaultEndianExprException(TestDefaultEndianExprException.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- io.kaitai.struct.KaitaiStream$UndecidedEndiannessError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultEndianExprException -->
      </class> <!-- io.kaitai.struct.spec.TestDefaultEndianExprException -->
      <class name="io.kaitai.struct.spec.TestUserType">
        <test-method status="PASS" signature="testUserType()[pri:0, instance:io.kaitai.struct.spec.TestUserType@2bbaf4f0]" name="testUserType" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserType -->
      </class> <!-- io.kaitai.struct.spec.TestUserType -->
      <class name="io.kaitai.struct.spec.TestRepeatUntilComplex">
        <test-method status="PASS" signature="testRepeatUntilComplex()[pri:0, instance:io.kaitai.struct.spec.TestRepeatUntilComplex@12405818]" name="testRepeatUntilComplex" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatUntilComplex -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatUntilComplex -->
      <class name="io.kaitai.struct.spec.TestOpaqueExternalType02Parent">
        <test-method status="PASS" signature="testOpaqueExternalType02Parent()[pri:0, instance:io.kaitai.struct.spec.TestOpaqueExternalType02Parent@1dd02175]" name="testOpaqueExternalType02Parent" duration-ms="4" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpaqueExternalType02Parent -->
      </class> <!-- io.kaitai.struct.spec.TestOpaqueExternalType02Parent -->
      <class name="io.kaitai.struct.spec.TestSwitchIntegers">
        <test-method status="PASS" signature="testSwitchIntegers()[pri:0, instance:io.kaitai.struct.spec.TestSwitchIntegers@76a4d6c]" name="testSwitchIntegers" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchIntegers -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchIntegers -->
      <class name="io.kaitai.struct.spec.TestBytesPadTerm">
        <test-method status="PASS" signature="testBytesPadTerm()[pri:0, instance:io.kaitai.struct.spec.TestBytesPadTerm@130f889]" name="testBytesPadTerm" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBytesPadTerm -->
      </class> <!-- io.kaitai.struct.spec.TestBytesPadTerm -->
      <class name="io.kaitai.struct.spec.TestStrEncodingsDefault">
        <test-method status="PASS" signature="testStrEncodingsDefault()[pri:0, instance:io.kaitai.struct.spec.TestStrEncodingsDefault@48a242ce]" name="testStrEncodingsDefault" duration-ms="16" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStrEncodingsDefault -->
      </class> <!-- io.kaitai.struct.spec.TestStrEncodingsDefault -->
      <class name="io.kaitai.struct.spec.TestNavParentSwitch">
        <test-method status="PASS" signature="testNavParentSwitch()[pri:0, instance:io.kaitai.struct.spec.TestNavParentSwitch@69379752]" name="testNavParentSwitch" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParentSwitch -->
      </class> <!-- io.kaitai.struct.spec.TestNavParentSwitch -->
      <class name="io.kaitai.struct.spec.TestEnumIf">
        <test-method status="PASS" signature="testEnumIf()[pri:0, instance:io.kaitai.struct.spec.TestEnumIf@5e57643e]" name="testEnumIf" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumIf -->
      </class> <!-- io.kaitai.struct.spec.TestEnumIf -->
      <class name="io.kaitai.struct.spec.TestFixedContents">
        <test-method status="PASS" signature="testFixedContents()[pri:0, instance:io.kaitai.struct.spec.TestFixedContents@3e77a1ed]" name="testFixedContents" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFixedContents -->
      </class> <!-- io.kaitai.struct.spec.TestFixedContents -->
      <class name="io.kaitai.struct.spec.TestInstanceIoUser">
        <test-method status="PASS" signature="testInstanceIoUser()[pri:0, instance:io.kaitai.struct.spec.TestInstanceIoUser@6c9f5c0d]" name="testInstanceIoUser" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstanceIoUser -->
      </class> <!-- io.kaitai.struct.spec.TestInstanceIoUser -->
      <class name="io.kaitai.struct.spec.TestIndexSizes">
        <test-method status="PASS" signature="testIndexSizes()[pri:0, instance:io.kaitai.struct.spec.TestIndexSizes@49c43f4e]" name="testIndexSizes" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexSizes -->
      </class> <!-- io.kaitai.struct.spec.TestIndexSizes -->
      <class name="io.kaitai.struct.spec.TestTypeTernary">
        <test-method status="PASS" signature="testTypeTernary()[pri:0, instance:io.kaitai.struct.spec.TestTypeTernary@b9afc07]" name="testTypeTernary" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeTernary -->
      </class> <!-- io.kaitai.struct.spec.TestTypeTernary -->
      <class name="io.kaitai.struct.spec.TestInstanceStdArray">
        <test-method status="PASS" signature="testInstanceStdArray()[pri:0, instance:io.kaitai.struct.spec.TestInstanceStdArray@69a10787]" name="testInstanceStdArray" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInstanceStdArray -->
      </class> <!-- io.kaitai.struct.spec.TestInstanceStdArray -->
      <class name="io.kaitai.struct.spec.TestNavParentFalse">
        <test-method status="PASS" signature="testNavParentFalse()[pri:0, instance:io.kaitai.struct.spec.TestNavParentFalse@2f490758]" name="testNavParentFalse" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParentFalse -->
      </class> <!-- io.kaitai.struct.spec.TestNavParentFalse -->
      <class name="io.kaitai.struct.spec.TestSwitchManualInt">
        <test-method status="PASS" signature="testSwitchManualInt()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualInt@51b279c9]" name="testSwitchManualInt" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualInt -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualInt -->
      <class name="io.kaitai.struct.spec.TestNavParent2">
        <test-method status="PASS" signature="testNavParent2()[pri:0, instance:io.kaitai.struct.spec.TestNavParent2@120d6fe6]" name="testNavParent2" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParent2 -->
      </class> <!-- io.kaitai.struct.spec.TestNavParent2 -->
      <class name="io.kaitai.struct.spec.TestNavParent3">
        <test-method status="PASS" signature="testNavParent3()[pri:0, instance:io.kaitai.struct.spec.TestNavParent3@5606c0b]" name="testNavParent3" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParent3 -->
      </class> <!-- io.kaitai.struct.spec.TestNavParent3 -->
      <class name="io.kaitai.struct.spec.TestDefaultEndianMod">
        <test-method status="PASS" signature="testDefaultEndianMod()[pri:0, instance:io.kaitai.struct.spec.TestDefaultEndianMod@7ba18f1b]" name="testDefaultEndianMod" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultEndianMod -->
      </class> <!-- io.kaitai.struct.spec.TestDefaultEndianMod -->
      <class name="io.kaitai.struct.spec.TestSwitchCast">
        <test-method status="PASS" signature="testSwitchCast()[pri:0, instance:io.kaitai.struct.spec.TestSwitchCast@530612ba]" name="testSwitchCast" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchCast -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchCast -->
      <class name="io.kaitai.struct.spec.TestCastToTop">
        <test-method status="PASS" signature="testCastToTop()[pri:0, instance:io.kaitai.struct.spec.TestCastToTop@58a90037]" name="testCastToTop" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCastToTop -->
      </class> <!-- io.kaitai.struct.spec.TestCastToTop -->
      <class name="io.kaitai.struct.spec.TestSwitchManualIntSize">
        <test-method status="PASS" signature="testSwitchManualIntSize()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualIntSize@76b10754]" name="testSwitchManualIntSize" duration-ms="15" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualIntSize -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualIntSize -->
      <class name="io.kaitai.struct.spec.TestImports0">
        <test-method status="PASS" signature="testImports0()[pri:0, instance:io.kaitai.struct.spec.TestImports0@1445d7f]" name="testImports0" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImports0 -->
      </class> <!-- io.kaitai.struct.spec.TestImports0 -->
      <class name="io.kaitai.struct.spec.TestBitsByteAligned">
        <test-method status="PASS" signature="testBitsByteAligned()[pri:0, instance:io.kaitai.struct.spec.TestBitsByteAligned@50de0926]" name="testBitsByteAligned" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBitsByteAligned -->
      </class> <!-- io.kaitai.struct.spec.TestBitsByteAligned -->
      <class name="io.kaitai.struct.spec.TestNestedSameName">
        <test-method status="PASS" signature="testNestedSameName()[pri:0, instance:io.kaitai.struct.spec.TestNestedSameName@32a068d1]" name="testNestedSameName" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedSameName -->
      </class> <!-- io.kaitai.struct.spec.TestNestedSameName -->
      <class name="io.kaitai.struct.spec.TestEnumToI">
        <test-method status="PASS" signature="testEnumToI()[pri:0, instance:io.kaitai.struct.spec.TestEnumToI@6366ebe0]" name="testEnumToI" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumToI -->
      </class> <!-- io.kaitai.struct.spec.TestEnumToI -->
      <class name="io.kaitai.struct.spec.TestRepeatEosU4">
        <test-method status="PASS" signature="testRepeatEosU4()[pri:0, instance:io.kaitai.struct.spec.TestRepeatEosU4@1176dcec]" name="testRepeatEosU4" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatEosU4 -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatEosU4 -->
      <class name="io.kaitai.struct.spec.TestPositionToEnd">
        <test-method status="PASS" signature="testPositionToEnd()[pri:0, instance:io.kaitai.struct.spec.TestPositionToEnd@588df31b]" name="testPositionToEnd" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositionToEnd -->
      </class> <!-- io.kaitai.struct.spec.TestPositionToEnd -->
      <class name="io.kaitai.struct.spec.TestSwitchManualIntSizeElse">
        <test-method status="PASS" signature="testSwitchManualIntSizeElse()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualIntSizeElse@166fa74d]" name="testSwitchManualIntSizeElse" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualIntSizeElse -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualIntSizeElse -->
      <class name="io.kaitai.struct.spec.TestParamsCallShort">
        <test-method status="PASS" signature="testParamsCallShort()[pri:0, instance:io.kaitai.struct.spec.TestParamsCallShort@6c3f5566]" name="testParamsCallShort" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParamsCallShort -->
      </class> <!-- io.kaitai.struct.spec.TestParamsCallShort -->
      <class name="io.kaitai.struct.spec.TestImportsAbs">
        <test-method status="PASS" signature="testImportsAbs()[pri:0, instance:io.kaitai.struct.spec.TestImportsAbs@80169cf]" name="testImportsAbs" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportsAbs -->
      </class> <!-- io.kaitai.struct.spec.TestImportsAbs -->
      <class name="io.kaitai.struct.spec.TestEnumFancy">
        <test-method status="PASS" signature="testEnumFancy()[pri:0, instance:io.kaitai.struct.spec.TestEnumFancy@2d127a61]" name="testEnumFancy" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumFancy -->
      </class> <!-- io.kaitai.struct.spec.TestEnumFancy -->
      <class name="io.kaitai.struct.spec.TestNestedTypes">
        <test-method status="PASS" signature="testNestedTypes()[pri:0, instance:io.kaitai.struct.spec.TestNestedTypes@60438a68]" name="testNestedTypes" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedTypes -->
      </class> <!-- io.kaitai.struct.spec.TestNestedTypes -->
      <class name="io.kaitai.struct.spec.TestExprArray">
        <test-method status="PASS" signature="testExprArray()[pri:0, instance:io.kaitai.struct.spec.TestExprArray@3bd94634]" name="testExprArray" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExprArray -->
      </class> <!-- io.kaitai.struct.spec.TestExprArray -->
      <class name="io.kaitai.struct.spec.TestSwitchRepeatExpr">
        <test-method status="PASS" signature="testSwitchRepeatExpr()[pri:0, instance:io.kaitai.struct.spec.TestSwitchRepeatExpr@80ec1f8]" name="testSwitchRepeatExpr" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchRepeatExpr -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchRepeatExpr -->
      <class name="io.kaitai.struct.spec.TestTypeIntUnaryOp">
        <test-method status="PASS" signature="testTypeIntUnaryOp()[pri:0, instance:io.kaitai.struct.spec.TestTypeIntUnaryOp@1e4a7dd4]" name="testTypeIntUnaryOp" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeIntUnaryOp -->
      </class> <!-- io.kaitai.struct.spec.TestTypeIntUnaryOp -->
      <class name="io.kaitai.struct.spec.TestFloatToI">
        <test-method status="PASS" signature="testFloatToI()[pri:0, instance:io.kaitai.struct.spec.TestFloatToI@d6da883]" name="testFloatToI" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFloatToI -->
      </class> <!-- io.kaitai.struct.spec.TestFloatToI -->
      <class name="io.kaitai.struct.spec.TestIfValues">
        <test-method status="PASS" signature="testIfValues()[pri:0, instance:io.kaitai.struct.spec.TestIfValues@aecb35a]" name="testIfValues" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfValues -->
      </class> <!-- io.kaitai.struct.spec.TestIfValues -->
      <class name="io.kaitai.struct.spec.TestMultipleUse">
        <test-method status="PASS" signature="testMultipleUse()[pri:0, instance:io.kaitai.struct.spec.TestMultipleUse@45afc369]" name="testMultipleUse" duration-ms="3" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleUse -->
      </class> <!-- io.kaitai.struct.spec.TestMultipleUse -->
      <class name="io.kaitai.struct.spec.TestProcessCoerceBytes">
        <test-method status="PASS" signature="testProcessCoerceBytes()[pri:0, instance:io.kaitai.struct.spec.TestProcessCoerceBytes@40f08448]" name="testProcessCoerceBytes" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessCoerceBytes -->
      </class> <!-- io.kaitai.struct.spec.TestProcessCoerceBytes -->
      <class name="io.kaitai.struct.spec.TestProcessCoerceUsertype2">
        <test-method status="PASS" signature="testProcessCoerceUsertype2()[pri:0, instance:io.kaitai.struct.spec.TestProcessCoerceUsertype2@70beb599]" name="testProcessCoerceUsertype2" duration-ms="5" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessCoerceUsertype2 -->
      </class> <!-- io.kaitai.struct.spec.TestProcessCoerceUsertype2 -->
      <class name="io.kaitai.struct.spec.TestProcessCoerceUsertype1">
        <test-method status="PASS" signature="testProcessCoerceUsertype1()[pri:0, instance:io.kaitai.struct.spec.TestProcessCoerceUsertype1@1cab0bfb]" name="testProcessCoerceUsertype1" duration-ms="3" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessCoerceUsertype1 -->
      </class> <!-- io.kaitai.struct.spec.TestProcessCoerceUsertype1 -->
      <class name="io.kaitai.struct.spec.TestStrEncodings">
        <test-method status="PASS" signature="testStrEncodings()[pri:0, instance:io.kaitai.struct.spec.TestStrEncodings@3439f68d]" name="testStrEncodings" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStrEncodings -->
      </class> <!-- io.kaitai.struct.spec.TestStrEncodings -->
      <class name="io.kaitai.struct.spec.TestParamsDef">
        <test-method status="PASS" signature="testParamsDef()[pri:0, instance:io.kaitai.struct.spec.TestParamsDef@5cdd8682]" name="testParamsDef" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParamsDef -->
      </class> <!-- io.kaitai.struct.spec.TestParamsDef -->
      <class name="io.kaitai.struct.spec.TestEnumOfValueInst">
        <test-method status="PASS" signature="testEnumOfValueInst()[pri:0, instance:io.kaitai.struct.spec.TestEnumOfValueInst@2df32bf7]" name="testEnumOfValueInst" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnumOfValueInst -->
      </class> <!-- io.kaitai.struct.spec.TestEnumOfValueInst -->
      <class name="io.kaitai.struct.spec.TestSwitchManualIntElse">
        <test-method status="PASS" signature="testSwitchManualIntElse()[pri:0, instance:io.kaitai.struct.spec.TestSwitchManualIntElse@61ca2dfa]" name="testSwitchManualIntElse" duration-ms="3" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchManualIntElse -->
      </class> <!-- io.kaitai.struct.spec.TestSwitchManualIntElse -->
      <class name="io.kaitai.struct.spec.TestEnum1">
        <test-method status="PASS" signature="testEnum1()[pri:0, instance:io.kaitai.struct.spec.TestEnum1@10b48321]" name="testEnum1" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnum1 -->
      </class> <!-- io.kaitai.struct.spec.TestEnum1 -->
      <class name="io.kaitai.struct.spec.TestEnum0">
        <test-method status="PASS" signature="testEnum0()[pri:0, instance:io.kaitai.struct.spec.TestEnum0@4e41089d]" name="testEnum0" duration-ms="19" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnum0 -->
      </class> <!-- io.kaitai.struct.spec.TestEnum0 -->
      <class name="io.kaitai.struct.spec.TestProcessRotate">
        <test-method status="PASS" signature="testProcessRotate()[pri:0, instance:io.kaitai.struct.spec.TestProcessRotate@7f416310]" name="testProcessRotate" duration-ms="0" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessRotate -->
      </class> <!-- io.kaitai.struct.spec.TestProcessRotate -->
      <class name="io.kaitai.struct.spec.TestJsSignedRightShift">
        <test-method status="PASS" signature="testJsSignedRightShift()[pri:0, instance:io.kaitai.struct.spec.TestJsSignedRightShift@62fdb4a6]" name="testJsSignedRightShift" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJsSignedRightShift -->
      </class> <!-- io.kaitai.struct.spec.TestJsSignedRightShift -->
      <class name="io.kaitai.struct.spec.TestNavParentOverride">
        <test-method status="PASS" signature="testNavParentOverride()[pri:0, instance:io.kaitai.struct.spec.TestNavParentOverride@6483f5ae]" name="testNavParentOverride" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavParentOverride -->
      </class> <!-- io.kaitai.struct.spec.TestNavParentOverride -->
      <class name="io.kaitai.struct.spec.TestRepeatNStruct">
        <test-method status="PASS" signature="testRepeatNStruct()[pri:0, instance:io.kaitai.struct.spec.TestRepeatNStruct@b59d31]" name="testRepeatNStruct" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeatNStruct -->
      </class> <!-- io.kaitai.struct.spec.TestRepeatNStruct -->
      <class name="io.kaitai.struct.spec.TestIndexToParamUntil">
        <test-method status="PASS" signature="testIndexToParamUntil()[pri:0, instance:io.kaitai.struct.spec.TestIndexToParamUntil@12028586]" name="testIndexToParamUntil" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexToParamUntil -->
      </class> <!-- io.kaitai.struct.spec.TestIndexToParamUntil -->
      <class name="io.kaitai.struct.spec.TestStrEos">
        <test-method status="PASS" signature="testStrEos()[pri:0, instance:io.kaitai.struct.spec.TestStrEos@33cb5951]" name="testStrEos" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStrEos -->
      </class> <!-- io.kaitai.struct.spec.TestStrEos -->
      <class name="io.kaitai.struct.spec.TestBcdUserTypeLe">
        <test-method status="PASS" signature="testBcdUserTypeLe()[pri:0, instance:io.kaitai.struct.spec.TestBcdUserTypeLe@3444d69d]" name="testBcdUserTypeLe" duration-ms="2" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBcdUserTypeLe -->
      </class> <!-- io.kaitai.struct.spec.TestBcdUserTypeLe -->
      <class name="io.kaitai.struct.spec.TestNestedSameName2">
        <test-method status="PASS" signature="testNestedSameName2()[pri:0, instance:io.kaitai.struct.spec.TestNestedSameName2@2bea5ab4]" name="testNestedSameName2" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNestedSameName2 -->
      </class> <!-- io.kaitai.struct.spec.TestNestedSameName2 -->
      <class name="io.kaitai.struct.spec.TestImportsAbsRel">
        <test-method status="PASS" signature="testImportsAbsRel()[pri:0, instance:io.kaitai.struct.spec.TestImportsAbsRel@314c508a]" name="testImportsAbsRel" duration-ms="1" started-at="2018-04-10T22:27:40Z" finished-at="2018-04-10T22:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportsAbsRel -->
      </class> <!-- io.kaitai.struct.spec.TestImportsAbsRel -->
    </test> <!-- all -->
  </suite> <!-- Kaitai Struct Java specs -->
</testng-results>
