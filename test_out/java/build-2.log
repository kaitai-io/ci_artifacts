spec/java/src/io/kaitai/struct/spec/TestExprBytesLiteral.java:5: error: cannot find symbol
import io.kaitai.struct.testformats.ExprBytesLiteral;
                                   ^
  symbol:   class ExprBytesLiteral
  location: package io.kaitai.struct.testformats
spec/java/src/io/kaitai/struct/spec/TestExprBytesLiteral.java:12: error: cannot find symbol
        ExprBytesLiteral r = ExprBytesLiteral.fromFile(SRC_DIR + "enum_negative.bin");
        ^
  symbol:   class ExprBytesLiteral
  location: class TestExprBytesLiteral
spec/java/src/io/kaitai/struct/spec/TestExprBytesLiteral.java:12: error: cannot find symbol
        ExprBytesLiteral r = ExprBytesLiteral.fromFile(SRC_DIR + "enum_negative.bin");
                             ^
  symbol:   variable ExprBytesLiteral
  location: class TestExprBytesLiteral
compiled/java/src/io/kaitai/struct/testformats/ValidFailRangeFloat.java:32: error: incompatible types: possible lossy conversion from double to long
            throw new KaitaiStream.ValidationLessThanError(0.2, foo(), _io(), "/seq/0");
                                                           ^
compiled/java/src/io/kaitai/struct/testformats/ValidFailRangeFloat.java:35: error: incompatible types: possible lossy conversion from double to long
            throw new KaitaiStream.ValidationGreaterThanError(0.4, foo(), _io(), "/seq/0");
                                                              ^
compiled/java/src/io/kaitai/struct/testformats/ExprBits.java:56: error: incompatible types: possible lossy conversion from long to int
        switch (a()) {
               ^
compiled/java/src/io/kaitai/struct/testformats/ExprBits.java:85: error: incompatible types: possible lossy conversion from long to int
            switch (_parent().a()) {
                   ^
compiled/java/src/io/kaitai/struct/testformats/ExprOpsParens.java:97: error: incompatible types: String cannot be converted to int
        int _tmp = (int) (str0To4() + str5To9().length());
                         ^
Note: Some messages have been simplified; recompile with -Xdiags:verbose to get full output
8 errors
