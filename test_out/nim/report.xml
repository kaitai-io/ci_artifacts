<testsuites>
  <testsuite tests="177" failures="0" errors="67" name="tests">
    <testcase time="0.00000000" name="tbcd_user_type_be">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/bcd_user_type_be.nim(144, 21) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.asIntInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="tbcd_user_type_le">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/bcd_user_type_le.nim(144, 21) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.asIntInst == nil
" />
    </testcase>
    <testcase time="0.001852989196777344" name="tbits_byte_aligned" />
    <testcase time="0.001814126968383789" name="tbits_enum" />
    <testcase time="0.001722574234008789" name="tbits_seq_endian_combo" />
    <testcase time="0.00000000" name="tbits_simple">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/bits_simple.nim(63, 24) Error: type mismatch: got &lt;int8, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int16): bool
  first type mismatch at position: 2
  required type for y: int16
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int32): bool
  first type mismatch at position: 2
  required type for y: int32
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int8): bool
  first type mismatch at position: 2
  required type for y: int8
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.testIfB1Inst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="tbits_simple_le">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/bits_simple_le.nim(63, 24) Error: type mismatch: got &lt;int8, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int16): bool
  first type mismatch at position: 2
  required type for y: int16
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int32): bool
  first type mismatch at position: 2
  required type for y: int32
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int8): bool
  first type mismatch at position: 2
  required type for y: int8
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.testIfB1Inst == nil
" />
    </testcase>
    <testcase time="0.001828670501708984" name="tbuffered_struct" />
    <testcase time="0.001720905303955078" name="tbytes_pad_term" />
    <testcase time="0.00000000" name="tcast_nested">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/cast_nested.nim(73, 32) Error: type mismatch: got &lt;uint8, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint): bool
  first type mismatch at position: 2
  required type for y: uint
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint16): bool
  first type mismatch at position: 2
  required type for y: uint16
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint32): bool
  first type mismatch at position: 2
  required type for y: uint32
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint64): bool
  first type mismatch at position: 2
  required type for y: uint64
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint8): bool
  first type mismatch at position: 2
  required type for y: uint8
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.opcodes1IntValueInst == nil
" />
    </testcase>
    <testcase time="0.001753568649291992" name="tcast_to_imported" />
    <testcase time="0.001767396926879883" name="tcast_to_top" />
    <testcase time="0.00000000" name="tcombine_bool">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/combine_bool.nim(28, 24) Error: type mismatch: got &lt;bool, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: bool): bool
  first type mismatch at position: 2
  required type for y: bool
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.boolCalcInst == nil
" />
    </testcase>
    <testcase time="0.00183558464050293" name="tcombine_bytes" />
    <testcase time="0.001821279525756836" name="tcombine_str" />
    <testcase time="0.001818656921386719" name="tdebug_switch_user" />
    <testcase time="0.001821041107177734" name="tdefault_big_endian" />
    <testcase time="0.001728057861328125" name="tdefault_bit_endian_mod" />
    <testcase time="0.00000000" name="tdefault_endian_expr_inherited">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/default_endian_expr_inherited.nim(168, 24) Error: type mismatch: got &lt;uint32, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint): bool
  first type mismatch at position: 2
  required type for y: uint
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint32): bool
  first type mismatch at position: 2
  required type for y: uint32
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint64): bool
  first type mismatch at position: 2
  required type for y: uint64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
24 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.someInstInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="tdefault_endian_expr_is_be">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/default_endian_expr_is_be.nim(109, 23) Error: type mismatch: got &lt;uint32, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint): bool
  first type mismatch at position: 2
  required type for y: uint
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint32): bool
  first type mismatch at position: 2
  required type for y: uint32
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint64): bool
  first type mismatch at position: 2
  required type for y: uint64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
24 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.instIntInst == nil
" />
    </testcase>
    <testcase time="0.00178980827331543" name="tdefault_endian_expr_is_le" />
    <testcase time="0.001763343811035156" name="tdefault_endian_mod" />
    <testcase time="0.00000000" name="tdocstrings">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/docstrings.nim(43, 19) Error: type mismatch: got &lt;uint8, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint): bool
  first type mismatch at position: 2
  required type for y: uint
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint16): bool
  first type mismatch at position: 2
  required type for y: uint16
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint32): bool
  first type mismatch at position: 2
  required type for y: uint32
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint64): bool
  first type mismatch at position: 2
  required type for y: uint64
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint8): bool
  first type mismatch at position: 2
  required type for y: uint8
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.twoInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="tdocstrings_docref">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/docstrings_docref.nim(56, 19) Error: type mismatch: got &lt;bool, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: bool): bool
  first type mismatch at position: 2
  required type for y: bool
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.fooInst == nil
" />
    </testcase>
    <testcase time="0.001760482788085938" name="tdocstrings_docref_multi" />
    <testcase time="0.00177311897277832" name="tenum_0" />
    <testcase time="0.001707553863525391" name="tenum_1" />
    <testcase time="0.001822948455810547" name="tenum_deep" />
    <testcase time="0.00000000" name="tenum_deep_literals">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_deep_literals.nim(45, 24) Error: type mismatch: got &lt;bool, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: bool): bool
  first type mismatch at position: 2
  required type for y: bool
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.isPet1OkInst == nil
" />
    </testcase>
    <testcase time="0.001820087432861328" name="tenum_fancy" />
    <testcase time="0.001883029937744141" name="tenum_if" />
    <testcase time="0.001853466033935547" name="tenum_import" />
    <testcase time="0.001802206039428711" name="tenum_int_range_s" />
    <testcase time="0.001731634140014648" name="tenum_int_range_u" />
    <testcase time="0.001819133758544922" name="tenum_invalid" />
    <testcase time="0.00000000" name="tenum_long_range_s">
      <failure message="fatal.nim(49)            sysFatal
Error: unhandled exception: over- or underflow [OverflowError]
" />
    </testcase>
    <testcase time="0.00000000" name="tenum_long_range_u">
      <failure message="fatal.nim(49)            sysFatal
Error: unhandled exception: over- or underflow [OverflowError]
" />
    </testcase>
    <testcase time="0.001832723617553711" name="tenum_negative" />
    <testcase time="0.00000000" name="tenum_of_value_inst">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_of_value_inst.nim(35, 20) Error: type mismatch: got &lt;EnumOfValueInst_Animal, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`[Enum: enum](x, y: Enum): bool
  first type mismatch at position: 2
  required type for y: Enum: enum
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.pet3Inst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="tenum_to_i">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i.nim(37, 21) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.pet1IInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="tenum_to_i_class_border_1">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_1.nim(12, 21) Error: undeclared identifier: 'EnumToIClassBorder2'
This might be caused by a recursive module dependency:
/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_2.nim imports /home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_1.nim
/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_1.nim imports /home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_2.nim
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_0">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_0.nim(28, 24) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.mustBeF7Inst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_1">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_1.nim(31, 25) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.lenOf1ModInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_2">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_2.nim(62, 26) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.str1LenModInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_3">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_3.nim(55, 23) Error: type mismatch: got &lt;bool, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: bool): bool
  first type mismatch at position: 2
  required type for y: bool
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.isStrGeInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_array">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_array.nim(63, 25) Error: type mismatch: got &lt;uint32, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint): bool
  first type mismatch at position: 2
  required type for y: uint
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint32): bool
  first type mismatch at position: 2
  required type for y: uint32
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint64): bool
  first type mismatch at position: 2
  required type for y: uint64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
24 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.aintFirstInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_bits">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_bits.nim(56, 24) Error: type mismatch: got &lt;ExprBits_Items, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`[Enum: enum](x, y: Enum): bool
  first type mismatch at position: 2
  required type for y: Enum: enum
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.enumInstInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_bytes_cmp">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_bytes_cmp.nim(49, 20) Error: type mismatch: got &lt;bool, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: bool): bool
  first type mismatch at position: 2
  required type for y: bool
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.isLeInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_bytes_literal">
      <failure message="/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/texpr_bytes_literal.nim(4, 29) Error: cannot open file: ../../../compiled/nim/expr_bytes_literal
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_bytes_ops">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_bytes_ops.nim(50, 23) Error: type mismatch: got &lt;uint8, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint): bool
  first type mismatch at position: 2
  required type for y: uint
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint16): bool
  first type mismatch at position: 2
  required type for y: uint16
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint32): bool
  first type mismatch at position: 2
  required type for y: uint32
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint64): bool
  first type mismatch at position: 2
  required type for y: uint64
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint8): bool
  first type mismatch at position: 2
  required type for y: uint8
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.twoLastInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_calc_array_ops">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_calc_array_ops.nim(71, 28) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.intArraySizeInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_enum">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_enum.nim(35, 24) Error: type mismatch: got &lt;ExprEnum_Animal, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`[Enum: enum](x, y: Enum): bool
  first type mismatch at position: 2
  required type for y: Enum: enum
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.constDogInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_io_eof">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_io_eof.nim(59, 26) Error: type mismatch: got &lt;bool, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: bool): bool
  first type mismatch at position: 2
  required type for y: bool
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.reflectEofInst == nil
" />
    </testcase>
    <testcase time="0.001833438873291016" name="texpr_io_pos" />
    <testcase time="0.00000000" name="texpr_mod">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_mod.nim(35, 27) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.modPosConstInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_ops_parens">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_ops_parens.nim(53, 23) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.boolAndInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_sizeof_type_0">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_sizeof_type_0.nim(29, 27) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.sizeofBlockInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_sizeof_type_1">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_sizeof_type_1.nim(36, 27) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.sizeofBlockInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_sizeof_value_0">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_sizeof_value_0.nim(43, 26) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.selfSizeofInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_sizeof_value_sized">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_sizeof_value_sized.nim(47, 26) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.selfSizeofInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="texpr_str_ops">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_str_ops.nim(65, 21) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.toIR8Inst == nil
" />
    </testcase>
    <testcase time="0.001777887344360352" name="tfixed_contents" />
    <testcase time="0.001813411712646484" name="tfixed_struct" />
    <testcase time="0.00000000" name="tfloat_to_i">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/float_to_i.nim(47, 23) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.float2IInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="tfloating_points">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/floating_points.nim(42, 34) Error: type mismatch: got &lt;float64, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: float): bool
  first type mismatch at position: 2
  required type for y: float
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: float32): bool
  first type mismatch at position: 2
  required type for y: float32
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.singleValuePlusIntInst == nil
" />
    </testcase>
    <testcase time="0.001763343811035156" name="thello_world" />
    <testcase time="0.00000000" name="tif_instances">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/if_instances.nim(23, 28) Error: type mismatch: got &lt;uint8, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint): bool
  first type mismatch at position: 2
  required type for y: uint
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint16): bool
  first type mismatch at position: 2
  required type for y: uint16
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint32): bool
  first type mismatch at position: 2
  required type for y: uint32
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint64): bool
  first type mismatch at position: 2
  required type for y: uint64
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint8): bool
  first type mismatch at position: 2
  required type for y: uint8
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.neverHappensInst == nil
" />
    </testcase>
    <testcase time="0.001790285110473633" name="tif_struct" />
    <testcase time="0.00000000" name="tif_values">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/if_values.nim(45, 26) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.halfOpcodeInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="timports0">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports0.nim(31, 21) Error: type mismatch: got &lt;uint8, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint): bool
  first type mismatch at position: 2
  required type for y: uint
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint16): bool
  first type mismatch at position: 2
  required type for y: uint16
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint32): bool
  first type mismatch at position: 2
  required type for y: uint32
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint64): bool
  first type mismatch at position: 2
  required type for y: uint64
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint8): bool
  first type mismatch at position: 2
  required type for y: uint8
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.hwOneInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="timports_abs">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/vlq_base128_le.nim(65, 19) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.lenInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="timports_circular_a">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_a.nim(9, 13) Error: undeclared identifier: 'ImportsCircularB'
This might be caused by a recursive module dependency:
/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_b.nim imports /home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_a.nim
/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_a.nim imports /home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_b.nim
" />
    </testcase>
    <testcase time="0.00000000" name="timports_rel_1">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_rel_1.nim(3, 23) Error: cannot open file: for_rel_imports/imported_1
" />
    </testcase>
    <testcase time="0.001798391342163086" name="tindex_sizes" />
    <testcase time="0.001963615417480469" name="tindex_to_param_eos" />
    <testcase time="0.001845359802246094" name="tindex_to_param_expr" />
    <testcase time="0.001856327056884766" name="tindex_to_param_until" />
    <testcase time="0.001966238021850586" name="tinstance_io_user" />
    <testcase time="0.001934289932250977" name="tinstance_std" />
    <testcase time="0.001819849014282227" name="tinstance_std_array" />
    <testcase time="0.00185394287109375" name="tinstance_user_array" />
    <testcase time="0.001800537109375" name="tintegers" />
    <testcase time="0.001853466033935547" name="tintegers_min_max" />
    <testcase time="0.00000000" name="tio_local_var">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/io_local_var.nim(58, 25) Error: type mismatch: got &lt;seq[byte]&gt; but expected 'KaitaiStruct = ref KaitaiStruct:ObjectType'
" />
    </testcase>
    <testcase time="0.00000000" name="tjs_signed_right_shift">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/js_signed_right_shift.nim(25, 32) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.shouldBe40000000Inst == nil
" />
    </testcase>
    <testcase time="0.001786231994628906" name="tmeta_tags" />
    <testcase time="0.00178217887878418" name="tmeta_xref" />
    <testcase time="0.001771211624145508" name="tmultiple_use" />
    <testcase time="0.001873493194580078" name="tnav_parent" />
    <testcase time="0.002042770385742188" name="tnav_parent2" />
    <testcase time="0.001941919326782227" name="tnav_parent3" />
    <testcase time="0.001742362976074219" name="tnav_parent_false" />
    <testcase time="0.001761198043823242" name="tnav_parent_false2" />
    <testcase time="0.00188136100769043" name="tnav_parent_override" />
    <testcase time="0.001767873764038086" name="tnav_parent_switch" />
    <testcase time="0.00000000" name="tnav_parent_switch_cast">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/nav_parent_switch_cast.nim(117, 20) Error: type mismatch: got &lt;uint8, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint): bool
  first type mismatch at position: 2
  required type for y: uint
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint16): bool
  first type mismatch at position: 2
  required type for y: uint16
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint32): bool
  first type mismatch at position: 2
  required type for y: uint32
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint64): bool
  first type mismatch at position: 2
  required type for y: uint64
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint8): bool
  first type mismatch at position: 2
  required type for y: uint8
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.flagInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="tnav_parent_vs_value_inst">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/nav_parent_vs_value_inst.nim(44, 27) Error: type mismatch: got &lt;bool, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: bool): bool
  first type mismatch at position: 2
  required type for y: bool
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.doSomethingInst == nil
" />
    </testcase>
    <testcase time="0.001859664916992188" name="tnav_root" />
    <testcase time="0.001730918884277344" name="tnested_same_name" />
    <testcase time="0.001817941665649414" name="tnested_same_name2" />
    <testcase time="0.001954078674316406" name="tnested_type_param" />
    <testcase time="0.002289533615112305" name="tnested_types" />
    <testcase time="0.00198817253112793" name="tnested_types2" />
    <testcase time="0.001878499984741211" name="tnested_types3" />
    <testcase time="0.00000000" name="tnon_standard">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/non_standard.nim(37, 18) Error: type mismatch: got &lt;uint8, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint): bool
  first type mismatch at position: 2
  required type for y: uint
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint16): bool
  first type mismatch at position: 2
  required type for y: uint16
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint32): bool
  first type mismatch at position: 2
  required type for y: uint32
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint64): bool
  first type mismatch at position: 2
  required type for y: uint64
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: uint8): bool
  first type mismatch at position: 2
  required type for y: uint8
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.viInst == nil
" />
    </testcase>
    <testcase time="0.001935958862304688" name="tparams_call_extra_parens" />
    <testcase time="0.002035617828369141" name="tparams_call_short" />
    <testcase time="0.00000000" name="tparams_enum">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/params_enum.nim(51, 21) Error: type mismatch: got &lt;bool, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: bool): bool
  first type mismatch at position: 2
  required type for y: bool
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.isCatInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="tparams_pass_array_int">
      <failure message="/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tparams_pass_array_int.nim(7, 27) template/generic instantiation of `fromFile` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/params_pass_array_int.nim(45, 21) template/generic instantiation of `read` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/params_pass_array_int.nim(33, 54) template/generic instantiation of `read` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/params_pass_array_int.nim(54, 29) Error: type mismatch: got &lt;seq[int]&gt; but expected 'seq[uint16]'
" />
    </testcase>
    <testcase time="0.002039670944213867" name="tparams_pass_array_str" />
    <testcase time="0.00215911865234375" name="tparams_pass_array_struct" />
    <testcase time="0.00191187858581543" name="tparams_pass_array_usertype" />
    <testcase time="0.001856327056884766" name="tparams_pass_struct" />
    <testcase time="0.00191187858581543" name="tparams_pass_usertype" />
    <testcase time="0.001977443695068359" name="tposition_abs" />
    <testcase time="0.001785993576049805" name="tposition_in_seq" />
    <testcase time="0.00179743766784668" name="tposition_to_end" />
    <testcase time="0.001866817474365234" name="tprocess_coerce_bytes" />
    <testcase time="0.00000000" name="tprocess_coerce_switch">
      <failure message="/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tprocess_coerce_switch.nim(7, 28) template/generic instantiation of `fromFile` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_coerce_switch.nim(74, 22) template/generic instantiation of `read` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_coerce_switch.nim(47, 26) Error: type mismatch: got &lt;seq[byte]&gt; but expected 'KaitaiStruct = ref KaitaiStruct:ObjectType'
" />
    </testcase>
    <testcase time="0.001983165740966797" name="tprocess_coerce_usertype1" />
    <testcase time="0.001905918121337891" name="tprocess_coerce_usertype2" />
    <testcase time="0.00000000" name="tprocess_custom">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_custom.nim(3, 8) Error: cannot open file: my_custom_fx
" />
    </testcase>
    <testcase time="0.00000000" name="tprocess_custom_no_args">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_custom_no_args.nim(3, 8) Error: cannot open file: custom_fx_no_args
" />
    </testcase>
    <testcase time="0.001947164535522461" name="tprocess_repeat_bytes" />
    <testcase time="0.00000000" name="tprocess_repeat_usertype">
      <failure message="/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tprocess_repeat_usertype.nim(7, 30) template/generic instantiation of `fromFile` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_repeat_usertype.nim(37, 24) template/generic instantiation of `read` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_repeat_usertype.nim(30, 9) Error: redefinition of 'buf'; previous declaration here: /home/travis/build/kaitai-io/ci_targets/compiled/nim/process_repeat_usertype.nim(28, 9)
" />
    </testcase>
    <testcase time="0.001815319061279297" name="tprocess_rotate" />
    <testcase time="0.001976966857910156" name="tprocess_to_user" />
    <testcase time="0.001815557479858398" name="tprocess_xor4_const" />
    <testcase time="0.001834392547607422" name="tprocess_xor4_value" />
    <testcase time="0.001790285110473633" name="tprocess_xor_const" />
    <testcase time="0.001834630966186523" name="tprocess_xor_value" />
    <testcase time="0.001924514770507812" name="trecursive_one" />
    <testcase time="0.001782894134521484" name="trepeat_eos_bit" />
    <testcase time="0.001877546310424805" name="trepeat_eos_struct" />
    <testcase time="0.001801252365112305" name="trepeat_eos_u4" />
    <testcase time="0.001828908920288086" name="trepeat_n_struct" />
    <testcase time="0.001928091049194336" name="trepeat_n_strz" />
    <testcase time="0.001900196075439453" name="trepeat_n_strz_double" />
    <testcase time="0.001828670501708984" name="trepeat_until_calc_array_type" />
    <testcase time="0.001848220825195312" name="trepeat_until_complex" />
    <testcase time="0.001878023147583008" name="trepeat_until_s4" />
    <testcase time="0.001883029937744141" name="trepeat_until_sized" />
    <testcase time="0.006361484527587891" name="tstr_encodings" />
    <testcase time="0.002011775970458984" name="tstr_encodings_default" />
    <testcase time="0.001942873001098633" name="tstr_eos" />
    <testcase time="0.001804590225219727" name="tstr_literals2" />
    <testcase time="0.001926898956298828" name="tstr_pad_term" />
    <testcase time="0.001973867416381836" name="tstr_pad_term_empty" />
    <testcase time="0.001955270767211914" name="tswitch_bytearray" />
    <testcase time="0.00000000" name="tswitch_else_only">
      <failure message="/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tswitch_else_only.nim(9, 6) template/generic instantiation of `test` from here
/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tswitch_else_only.nim(13, 10) Error: undeclared field: 'struct' for type switch_else_only.SwitchElseOnly [declared in /home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_else_only.nim(5, 3)] 
" />
    </testcase>
    <testcase time="0.001888275146484375" name="tswitch_integers" />
    <testcase time="0.001860618591308594" name="tswitch_integers2" />
    <testcase time="0.002074718475341797" name="tswitch_manual_enum" />
    <testcase time="0.00000000" name="tswitch_manual_enum_invalid">
      <failure message="/opt/Nim-1.2.0/lib/pure/unittest.nim(647, 43) Error: conversion from int literal(255) to SwitchManualEnumInvalid_Opcode_CodeEnum is invalid
" />
    </testcase>
    <testcase time="0.00000000" name="tswitch_manual_enum_invalid_else">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_manual_enum_invalid_else.nim(114, 21) Error: type mismatch: got &lt;int8, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int16): bool
  first type mismatch at position: 2
  required type for y: int16
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int32): bool
  first type mismatch at position: 2
  required type for y: int32
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int8): bool
  first type mismatch at position: 2
  required type for y: int8
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.valueInst == nil
" />
    </testcase>
    <testcase time="0.00201725959777832" name="tswitch_manual_int" />
    <testcase time="0.001920938491821289" name="tswitch_manual_int_else" />
    <testcase time="0.00000000" name="tswitch_manual_int_size">
      <failure message="/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tswitch_manual_int_size.nim(7, 28) template/generic instantiation of `fromFile` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_manual_int_size.nim(44, 22) template/generic instantiation of `read` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_manual_int_size.nim(39, 41) template/generic instantiation of `read` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_manual_int_size.nim(74, 19) Error: type mismatch: got &lt;seq[byte]&gt; but expected 'KaitaiStruct = ref KaitaiStruct:ObjectType'
" />
    </testcase>
    <testcase time="0.00000000" name="tswitch_manual_int_size_else">
      <failure message="/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tswitch_manual_int_size_else.nim(9, 6) template/generic instantiation of `test` from here
/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tswitch_manual_int_size_else.nim(20, 8) template/generic instantiation of `check` from here
/opt/Nim-1.2.0/lib/pure/unittest.nim(647, 43) Error: cannot infer the type of the sequence
" />
    </testcase>
    <testcase time="0.001977920532226562" name="tswitch_manual_str" />
    <testcase time="0.002033710479736328" name="tswitch_manual_str_else" />
    <testcase time="0.00000000" name="tswitch_repeat_expr">
      <failure message="/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tswitch_repeat_expr.nim(7, 25) template/generic instantiation of `fromFile` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_repeat_expr.nim(55, 19) template/generic instantiation of `read` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_repeat_expr.nim(52, 18) Error: type mismatch: got &lt;seq[KaitaiStruct], seq[byte]&gt;
but expected one of: 
proc add[T](x: var seq[T]; y: T)
  first type mismatch at position: 2
  required type for y: T
  but expression 'it' is of type: seq[byte]
proc add[T](x: var seq[T]; y: openArray[T])
  first type mismatch at position: 2
  required type for y: openArray[T]
  but expression 'it' is of type: seq[byte]
5 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: add(result.body, it)
" />
    </testcase>
    <testcase time="0.00000000" name="tswitch_repeat_expr_invalid">
      <failure message="/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tswitch_repeat_expr_invalid.nim(7, 32) template/generic instantiation of `fromFile` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_repeat_expr_invalid.nim(55, 26) template/generic instantiation of `read` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_repeat_expr_invalid.nim(52, 18) Error: type mismatch: got &lt;seq[KaitaiStruct], seq[byte]&gt;
but expected one of: 
proc add[T](x: var seq[T]; y: T)
  first type mismatch at position: 2
  required type for y: T
  but expression 'it' is of type: seq[byte]
proc add[T](x: var seq[T]; y: openArray[T])
  first type mismatch at position: 2
  required type for y: openArray[T]
  but expression 'it' is of type: seq[byte]
5 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: add(result.body, it)
" />
    </testcase>
    <testcase time="0.0018157958984375" name="tterm_bytes" />
    <testcase time="0.001883745193481445" name="tterm_strz" />
    <testcase time="0.001877069473266602" name="tts_packet_header" />
    <testcase time="0.00000000" name="ttype_int_unary_op">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/type_int_unary_op.nim(31, 23) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.unaryS2Inst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="ttype_ternary">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/type_ternary.nim(49, 22) Error: type mismatch: got &lt;bool, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: bool): bool
  first type mismatch at position: 2
  required type for y: bool
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.isHackInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="ttype_ternary_2nd_falsy">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/type_ternary_2nd_falsy.nim(70, 26) Error: type mismatch: got &lt;float64, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: float): bool
  first type mismatch at position: 2
  required type for y: float
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: float32): bool
  first type mismatch at position: 2
  required type for y: float32
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.vFloatZeroInst == nil
" />
    </testcase>
    <testcase time="0.001748323440551758" name="tuser_type" />
    <testcase time="0.001840829849243164" name="tvalid_long" />
    <testcase time="0.001996278762817383" name="tvalid_not_parsed_if" />
    <testcase time="0.001877307891845703" name="tvalid_short" />
    <testcase time="0.001812458038330078" name="tvalid_switch" />
    <testcase time="0.00000000" name="tyaml_ints">
      <failure message="/home/travis/build/kaitai-io/ci_targets/compiled/nim/yaml_ints.nim(29, 25) Error: type mismatch: got &lt;int, typeof(nil)&gt;
but expected one of: 
proc `==`(a, b: Option): bool
  first type mismatch at position: 2
  required type for b: Option
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int): bool
  first type mismatch at position: 2
  required type for y: int
  but expression 'nil' is of type: typeof(nil)
proc `==`(x, y: int64): bool
  first type mismatch at position: 2
  required type for y: int64
  but expression 'nil' is of type: typeof(nil)
proc `==`[T: tuple | object](x, y: T): bool
  first type mismatch at position: 2
  required type for y: T: tuple or object
  but expression 'nil' is of type: typeof(nil)
25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them

expression: this.testU4DecInst == nil
" />
    </testcase>
    <testcase time="0.00000000" name="tzlib_surrounded">
      <failure message="/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tzlib_surrounded.nim(7, 23) template/generic instantiation of `fromFile` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/zlib_surrounded.nim(41, 17) template/generic instantiation of `read` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/zlib_surrounded.nim(32, 36) Error: attempting to call undeclared routine: 'processZlib'
" />
    </testcase>
    <testcase time="0.00000000" name="tzlib_with_header_78">
      <failure message="/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tzlib_with_header_78.nim(7, 25) template/generic instantiation of `fromFile` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/zlib_with_header_78.nim(27, 19) template/generic instantiation of `read` from here
/home/travis/build/kaitai-io/ci_targets/compiled/nim/zlib_with_header_78.nim(23, 30) Error: attempting to call undeclared routine: 'processZlib'
" />
    </testcase>
  </testsuite>
</testsuites>