{
  "BcdUserTypeBe": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/bcd_user_type_be.nim(144, 21) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.asIntInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "BcdUserTypeLe": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/bcd_user_type_le.nim(144, 21) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.asIntInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "BitsByteAligned": {
    "status": "passed",
    "elapsed": 0.001978635787963867,
    "is_kst": true
  },
  "BitsEnum": {
    "status": "passed",
    "elapsed": 0.001946449279785156,
    "is_kst": true
  },
  "BitsSeqEndianCombo": {
    "status": "passed",
    "elapsed": 0.001932859420776367,
    "is_kst": true
  },
  "BitsSimple": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/bits_simple.nim(63, 24) Error: type mismatch: got <int8, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int16): bool\n  first type mismatch at position: 2\n  required type for y: int16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int32): bool\n  first type mismatch at position: 2\n  required type for y: int32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int8): bool\n  first type mismatch at position: 2\n  required type for y: int8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.testIfB1Inst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "BitsSimpleLe": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/bits_simple_le.nim(63, 24) Error: type mismatch: got <int8, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int16): bool\n  first type mismatch at position: 2\n  required type for y: int16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int32): bool\n  first type mismatch at position: 2\n  required type for y: int32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int8): bool\n  first type mismatch at position: 2\n  required type for y: int8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.testIfB1Inst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "BufferedStruct": {
    "status": "passed",
    "elapsed": 0.001974821090698242,
    "is_kst": true
  },
  "BytesPadTerm": {
    "status": "passed",
    "elapsed": 0.001883268356323242,
    "is_kst": true
  },
  "CastNested": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/cast_nested.nim(73, 32) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.opcodes1IntValueInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "CastToImported": {
    "status": "passed",
    "elapsed": 0.001905441284179688,
    "is_kst": true
  },
  "CastToTop": {
    "status": "passed",
    "elapsed": 0.002026796340942383,
    "is_kst": true
  },
  "CombineBool": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/combine_bool.nim(28, 24) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.boolCalcInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "CombineBytes": {
    "status": "passed",
    "elapsed": 0.002041101455688477,
    "is_kst": true
  },
  "CombineStr": {
    "status": "passed",
    "elapsed": 0.002046823501586914,
    "is_kst": true
  },
  "DebugSwitchUser": {
    "status": "passed",
    "elapsed": 0.001904726028442383,
    "is_kst": true
  },
  "DefaultBigEndian": {
    "status": "passed",
    "elapsed": 0.001970291137695312,
    "is_kst": true
  },
  "DefaultBitEndianMod": {
    "status": "passed",
    "elapsed": 0.001952171325683594,
    "is_kst": true
  },
  "DefaultEndianExprInherited": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/default_endian_expr_inherited.nim(168, 24) Error: type mismatch: got <uint32, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n24 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.someInstInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "DefaultEndianExprIsBe": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/default_endian_expr_is_be.nim(109, 23) Error: type mismatch: got <uint32, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n24 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.instIntInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "DefaultEndianExprIsLe": {
    "status": "passed",
    "elapsed": 0.001932382583618164,
    "is_kst": true
  },
  "DefaultEndianMod": {
    "status": "passed",
    "elapsed": 0.001926422119140625,
    "is_kst": true
  },
  "Docstrings": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/docstrings.nim(43, 19) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.twoInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "DocstringsDocref": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/docstrings_docref.nim(56, 19) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.fooInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "DocstringsDocrefMulti": {
    "status": "passed",
    "elapsed": 0.002010107040405273,
    "is_kst": true
  },
  "Enum0": {
    "status": "passed",
    "elapsed": 0.0018157958984375,
    "is_kst": true
  },
  "Enum1": {
    "status": "passed",
    "elapsed": 0.002049922943115234,
    "is_kst": true
  },
  "EnumDeep": {
    "status": "passed",
    "elapsed": 0.002019882202148438,
    "is_kst": true
  },
  "EnumDeepLiterals": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_deep_literals.nim(45, 24) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.isPet1OkInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "EnumFancy": {
    "status": "passed",
    "elapsed": 0.001867532730102539,
    "is_kst": true
  },
  "EnumIf": {
    "status": "passed",
    "elapsed": 0.001940488815307617,
    "is_kst": true
  },
  "EnumImport": {
    "status": "passed",
    "elapsed": 0.001856088638305664,
    "is_kst": true
  },
  "EnumIntRangeS": {
    "status": "passed",
    "elapsed": 0.001812458038330078,
    "is_kst": true
  },
  "EnumIntRangeU": {
    "status": "passed",
    "elapsed": 0.001988649368286133,
    "is_kst": true
  },
  "EnumInvalid": {
    "status": "passed",
    "elapsed": 0.001936435699462891,
    "is_kst": true
  },
  "EnumLongRangeS": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "fatal.nim(49)            sysFatal\nError: unhandled exception: over- or underflow [OverflowError]\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "EnumLongRangeU": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "fatal.nim(49)            sysFatal\nError: unhandled exception: over- or underflow [OverflowError]\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "EnumNegative": {
    "status": "passed",
    "elapsed": 0.001906394958496094,
    "is_kst": true
  },
  "EnumOfValueInst": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_of_value_inst.nim(35, 20) Error: type mismatch: got <EnumOfValueInst_Animal, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[Enum: enum](x, y: Enum): bool\n  first type mismatch at position: 2\n  required type for y: Enum: enum\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.pet3Inst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "EnumToI": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i.nim(37, 21) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.pet1IInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "EnumToIClassBorder1": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_1.nim(12, 21) Error: undeclared identifier: 'EnumToIClassBorder2'\nThis might be caused by a recursive module dependency:\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_2.nim imports /home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_1.nim\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_1.nim imports /home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_2.nim\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "Expr0": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_0.nim(28, 24) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.mustBeF7Inst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "Expr1": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_1.nim(31, 25) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.lenOf1ModInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "Expr2": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_2.nim(62, 26) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.str1LenModInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "Expr3": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_3.nim(55, 23) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.isStrGeInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprArray": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_array.nim(63, 25) Error: type mismatch: got <uint32, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n24 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.aintFirstInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprBits": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_bits.nim(56, 24) Error: type mismatch: got <ExprBits_Items, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[Enum: enum](x, y: Enum): bool\n  first type mismatch at position: 2\n  required type for y: Enum: enum\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.enumInstInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprBytesCmp": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_bytes_cmp.nim(49, 20) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.isLeInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprBytesLiteral": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/texpr_bytes_literal.nim(4, 29) Error: cannot open file: ../../../compiled/nim/expr_bytes_literal\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprBytesOps": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_bytes_ops.nim(50, 23) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.twoLastInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprCalcArrayOps": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_calc_array_ops.nim(71, 28) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.intArraySizeInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprEnum": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_enum.nim(35, 24) Error: type mismatch: got <ExprEnum_Animal, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[Enum: enum](x, y: Enum): bool\n  first type mismatch at position: 2\n  required type for y: Enum: enum\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.constDogInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprIoEof": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_io_eof.nim(59, 26) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.reflectEofInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprIoPos": {
    "status": "passed",
    "elapsed": 0.001888036727905273,
    "is_kst": true
  },
  "ExprMod": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_mod.nim(35, 27) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.modPosConstInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprOpsParens": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_ops_parens.nim(53, 23) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.boolAndInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprSizeofType0": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_sizeof_type_0.nim(29, 27) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.sizeofBlockInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprSizeofType1": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_sizeof_type_1.nim(36, 27) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.sizeofBlockInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprSizeofValue0": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_sizeof_value_0.nim(43, 26) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.selfSizeofInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprSizeofValueSized": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_sizeof_value_sized.nim(47, 26) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.selfSizeofInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ExprStrOps": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_str_ops.nim(65, 21) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.toIR8Inst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "FixedContents": {
    "status": "passed",
    "elapsed": 0.001880168914794922,
    "is_kst": true
  },
  "FixedStruct": {
    "status": "passed",
    "elapsed": 0.001956939697265625,
    "is_kst": true
  },
  "FloatToI": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/float_to_i.nim(47, 23) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.float2IInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "FloatingPoints": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/floating_points.nim(42, 34) Error: type mismatch: got <float64, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: float): bool\n  first type mismatch at position: 2\n  required type for y: float\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: float32): bool\n  first type mismatch at position: 2\n  required type for y: float32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.singleValuePlusIntInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "HelloWorld": {
    "status": "passed",
    "elapsed": 0.001902103424072266,
    "is_kst": true
  },
  "IfInstances": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/if_instances.nim(23, 28) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.neverHappensInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "IfStruct": {
    "status": "passed",
    "elapsed": 0.001926422119140625,
    "is_kst": true
  },
  "IfValues": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/if_values.nim(45, 26) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.halfOpcodeInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "Imports0": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports0.nim(31, 21) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.hwOneInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ImportsAbs": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/vlq_base128_le.nim(65, 19) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.lenInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ImportsCircularA": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_a.nim(9, 13) Error: undeclared identifier: 'ImportsCircularB'\nThis might be caused by a recursive module dependency:\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_b.nim imports /home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_a.nim\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_a.nim imports /home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_b.nim\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ImportsRel1": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_rel_1.nim(3, 23) Error: cannot open file: for_rel_imports/imported_1\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "IndexSizes": {
    "status": "passed",
    "elapsed": 0.002038717269897461,
    "is_kst": true
  },
  "IndexToParamEos": {
    "status": "passed",
    "elapsed": 0.002058506011962891,
    "is_kst": true
  },
  "IndexToParamExpr": {
    "status": "passed",
    "elapsed": 0.001944541931152344,
    "is_kst": true
  },
  "IndexToParamUntil": {
    "status": "passed",
    "elapsed": 0.002079486846923828,
    "is_kst": true
  },
  "InstanceIoUser": {
    "status": "passed",
    "elapsed": 0.002002477645874023,
    "is_kst": true
  },
  "InstanceStd": {
    "status": "passed",
    "elapsed": 0.001984119415283203,
    "is_kst": true
  },
  "InstanceStdArray": {
    "status": "passed",
    "elapsed": 0.001875400543212891,
    "is_kst": true
  },
  "InstanceUserArray": {
    "status": "passed",
    "elapsed": 0.002043724060058594,
    "is_kst": true
  },
  "Integers": {
    "status": "passed",
    "elapsed": 0.001997709274291992,
    "is_kst": true
  },
  "IntegersMinMax": {
    "status": "passed",
    "elapsed": 0.002090692520141602,
    "is_kst": true
  },
  "IoLocalVar": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/io_local_var.nim(58, 25) Error: type mismatch: got <seq[byte]> but expected 'KaitaiStruct = ref KaitaiStruct:ObjectType'\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "JsSignedRightShift": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/js_signed_right_shift.nim(25, 32) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.shouldBe40000000Inst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "MetaTags": {
    "status": "passed",
    "elapsed": 0.001955032348632812,
    "is_kst": true
  },
  "MetaXref": {
    "status": "passed",
    "elapsed": 0.001943826675415039,
    "is_kst": true
  },
  "MultipleUse": {
    "status": "passed",
    "elapsed": 0.002022504806518555,
    "is_kst": true
  },
  "NavParent": {
    "status": "passed",
    "elapsed": 0.001890182495117188,
    "is_kst": true
  },
  "NavParent2": {
    "status": "passed",
    "elapsed": 0.002111196517944336,
    "is_kst": true
  },
  "NavParent3": {
    "status": "passed",
    "elapsed": 0.002165079116821289,
    "is_kst": true
  },
  "NavParentFalse": {
    "status": "passed",
    "elapsed": 0.002061128616333008,
    "is_kst": true
  },
  "NavParentFalse2": {
    "status": "passed",
    "elapsed": 0.00237584114074707,
    "is_kst": true
  },
  "NavParentOverride": {
    "status": "passed",
    "elapsed": 0.001984596252441406,
    "is_kst": true
  },
  "NavParentSwitch": {
    "status": "passed",
    "elapsed": 0.002025604248046875,
    "is_kst": true
  },
  "NavParentSwitchCast": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/nav_parent_switch_cast.nim(117, 20) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.flagInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "NavParentVsValueInst": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/nav_parent_vs_value_inst.nim(44, 27) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.doSomethingInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "NavRoot": {
    "status": "passed",
    "elapsed": 0.001897335052490234,
    "is_kst": true
  },
  "NestedSameName": {
    "status": "passed",
    "elapsed": 0.001988649368286133,
    "is_kst": true
  },
  "NestedSameName2": {
    "status": "passed",
    "elapsed": 0.00186920166015625,
    "is_kst": true
  },
  "NestedTypeParam": {
    "status": "passed",
    "elapsed": 0.001997709274291992,
    "is_kst": true
  },
  "NestedTypes": {
    "status": "passed",
    "elapsed": 0.002286434173583984,
    "is_kst": true
  },
  "NestedTypes2": {
    "status": "passed",
    "elapsed": 0.001992702484130859,
    "is_kst": true
  },
  "NestedTypes3": {
    "status": "passed",
    "elapsed": 0.001976966857910156,
    "is_kst": true
  },
  "NonStandard": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/non_standard.nim(37, 18) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.viInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ParamsCallExtraParens": {
    "status": "passed",
    "elapsed": 0.002140522003173828,
    "is_kst": true
  },
  "ParamsCallShort": {
    "status": "passed",
    "elapsed": 0.001990556716918945,
    "is_kst": true
  },
  "ParamsEnum": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/params_enum.nim(51, 21) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.isCatInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ParamsPassArrayInt": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tparams_pass_array_int.nim(7, 27) template/generic instantiation of `fromFile` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/params_pass_array_int.nim(45, 21) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/params_pass_array_int.nim(33, 54) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/params_pass_array_int.nim(54, 29) Error: type mismatch: got <seq[int]> but expected 'seq[uint16]'\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ParamsPassArrayStr": {
    "status": "passed",
    "elapsed": 0.002083778381347656,
    "is_kst": true
  },
  "ParamsPassArrayStruct": {
    "status": "passed",
    "elapsed": 0.002048254013061523,
    "is_kst": true
  },
  "ParamsPassArrayUsertype": {
    "status": "passed",
    "elapsed": 0.001908540725708008,
    "is_kst": true
  },
  "ParamsPassStruct": {
    "status": "passed",
    "elapsed": 0.001926422119140625,
    "is_kst": true
  },
  "ParamsPassUsertype": {
    "status": "passed",
    "elapsed": 0.001867055892944336,
    "is_kst": true
  },
  "PositionAbs": {
    "status": "passed",
    "elapsed": 0.002054929733276367,
    "is_kst": true
  },
  "PositionInSeq": {
    "status": "passed",
    "elapsed": 0.001859188079833984,
    "is_kst": true
  },
  "PositionToEnd": {
    "status": "passed",
    "elapsed": 0.001916408538818359,
    "is_kst": true
  },
  "ProcessCoerceBytes": {
    "status": "passed",
    "elapsed": 0.001897335052490234,
    "is_kst": true
  },
  "ProcessCoerceSwitch": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tprocess_coerce_switch.nim(7, 28) template/generic instantiation of `fromFile` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_coerce_switch.nim(74, 22) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_coerce_switch.nim(47, 26) Error: type mismatch: got <seq[byte]> but expected 'KaitaiStruct = ref KaitaiStruct:ObjectType'\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ProcessCoerceUsertype1": {
    "status": "passed",
    "elapsed": 0.00186610221862793,
    "is_kst": true
  },
  "ProcessCoerceUsertype2": {
    "status": "passed",
    "elapsed": 0.00188755989074707,
    "is_kst": true
  },
  "ProcessCustom": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_custom.nim(3, 8) Error: cannot open file: my_custom_fx\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ProcessCustomNoArgs": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_custom_no_args.nim(3, 8) Error: cannot open file: custom_fx_no_args\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ProcessRepeatBytes": {
    "status": "passed",
    "elapsed": 0.001838445663452148,
    "is_kst": true
  },
  "ProcessRepeatUsertype": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tprocess_repeat_usertype.nim(7, 30) template/generic instantiation of `fromFile` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_repeat_usertype.nim(37, 24) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_repeat_usertype.nim(30, 9) Error: redefinition of 'buf'; previous declaration here: /home/travis/build/kaitai-io/ci_targets/compiled/nim/process_repeat_usertype.nim(28, 9)\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ProcessRotate": {
    "status": "passed",
    "elapsed": 0.001855373382568359,
    "is_kst": true
  },
  "ProcessToUser": {
    "status": "passed",
    "elapsed": 0.001945257186889648,
    "is_kst": true
  },
  "ProcessXor4Const": {
    "status": "passed",
    "elapsed": 0.001952409744262695,
    "is_kst": true
  },
  "ProcessXor4Value": {
    "status": "passed",
    "elapsed": 0.001847028732299805,
    "is_kst": true
  },
  "ProcessXorConst": {
    "status": "passed",
    "elapsed": 0.001868486404418945,
    "is_kst": true
  },
  "ProcessXorValue": {
    "status": "passed",
    "elapsed": 0.001826047897338867,
    "is_kst": true
  },
  "RecursiveOne": {
    "status": "passed",
    "elapsed": 0.001849889755249023,
    "is_kst": true
  },
  "RepeatEosBit": {
    "status": "passed",
    "elapsed": 0.001889944076538086,
    "is_kst": true
  },
  "RepeatEosStruct": {
    "status": "passed",
    "elapsed": 0.001847505569458008,
    "is_kst": true
  },
  "RepeatEosU4": {
    "status": "passed",
    "elapsed": 0.001839160919189453,
    "is_kst": true
  },
  "RepeatNStruct": {
    "status": "passed",
    "elapsed": 0.001880884170532227,
    "is_kst": true
  },
  "RepeatNStrz": {
    "status": "passed",
    "elapsed": 0.001946210861206055,
    "is_kst": true
  },
  "RepeatNStrzDouble": {
    "status": "passed",
    "elapsed": 0.001901388168334961,
    "is_kst": true
  },
  "RepeatUntilCalcArrayType": {
    "status": "passed",
    "elapsed": 0.001960515975952148,
    "is_kst": true
  },
  "RepeatUntilComplex": {
    "status": "passed",
    "elapsed": 0.001933574676513672,
    "is_kst": true
  },
  "RepeatUntilS4": {
    "status": "passed",
    "elapsed": 0.001913547515869141,
    "is_kst": true
  },
  "RepeatUntilSized": {
    "status": "passed",
    "elapsed": 0.00186467170715332,
    "is_kst": true
  },
  "StrEncodings": {
    "status": "passed",
    "elapsed": 0.005053043365478516,
    "is_kst": true
  },
  "StrEncodingsDefault": {
    "status": "passed",
    "elapsed": 0.002050161361694336,
    "is_kst": true
  },
  "StrEos": {
    "status": "passed",
    "elapsed": 0.001888513565063477,
    "is_kst": true
  },
  "StrLiterals2": {
    "status": "passed",
    "elapsed": 0.001853704452514648,
    "is_kst": true
  },
  "StrPadTerm": {
    "status": "passed",
    "elapsed": 0.001919031143188477,
    "is_kst": true
  },
  "StrPadTermEmpty": {
    "status": "passed",
    "elapsed": 0.001935958862304688,
    "is_kst": true
  },
  "SwitchBytearray": {
    "status": "passed",
    "elapsed": 0.001951932907104492,
    "is_kst": true
  },
  "SwitchElseOnly": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tswitch_else_only.nim(9, 6) template/generic instantiation of `test` from here\n/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tswitch_else_only.nim(13, 10) Error: undeclared field: 'struct' for type switch_else_only.SwitchElseOnly [declared in /home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_else_only.nim(5, 3)] \n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "SwitchIntegers": {
    "status": "passed",
    "elapsed": 0.001948118209838867,
    "is_kst": true
  },
  "SwitchIntegers2": {
    "status": "passed",
    "elapsed": 0.001841306686401367,
    "is_kst": true
  },
  "SwitchManualEnum": {
    "status": "passed",
    "elapsed": 0.00193333625793457,
    "is_kst": true
  },
  "SwitchManualEnumInvalid": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/opt/Nim-1.2.0/lib/pure/unittest.nim(647, 43) Error: conversion from int literal(255) to SwitchManualEnumInvalid_Opcode_CodeEnum is invalid\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "SwitchManualEnumInvalidElse": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_manual_enum_invalid_else.nim(114, 21) Error: type mismatch: got <int8, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int16): bool\n  first type mismatch at position: 2\n  required type for y: int16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int32): bool\n  first type mismatch at position: 2\n  required type for y: int32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int8): bool\n  first type mismatch at position: 2\n  required type for y: int8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.valueInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "SwitchManualInt": {
    "status": "passed",
    "elapsed": 0.001991510391235352,
    "is_kst": true
  },
  "SwitchManualIntElse": {
    "status": "passed",
    "elapsed": 0.002007722854614258,
    "is_kst": true
  },
  "SwitchManualIntSize": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tswitch_manual_int_size.nim(7, 28) template/generic instantiation of `fromFile` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_manual_int_size.nim(44, 22) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_manual_int_size.nim(39, 41) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_manual_int_size.nim(74, 19) Error: type mismatch: got <seq[byte]> but expected 'KaitaiStruct = ref KaitaiStruct:ObjectType'\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "SwitchManualIntSizeElse": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tswitch_manual_int_size_else.nim(9, 6) template/generic instantiation of `test` from here\n/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tswitch_manual_int_size_else.nim(20, 8) template/generic instantiation of `check` from here\n/opt/Nim-1.2.0/lib/pure/unittest.nim(647, 43) Error: cannot infer the type of the sequence\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "SwitchManualStr": {
    "status": "passed",
    "elapsed": 0.001971244812011719,
    "is_kst": true
  },
  "SwitchManualStrElse": {
    "status": "passed",
    "elapsed": 0.002027511596679688,
    "is_kst": true
  },
  "TermBytes": {
    "status": "passed",
    "elapsed": 0.001898527145385742,
    "is_kst": true
  },
  "TermStrz": {
    "status": "passed",
    "elapsed": 0.001959085464477539,
    "is_kst": true
  },
  "TsPacketHeader": {
    "status": "passed",
    "elapsed": 0.001869916915893555,
    "is_kst": true
  },
  "TypeIntUnaryOp": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/type_int_unary_op.nim(31, 23) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.unaryS2Inst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "TypeTernary": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/type_ternary.nim(49, 22) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.isHackInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "TypeTernary2ndFalsy": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/type_ternary_2nd_falsy.nim(70, 26) Error: type mismatch: got <float64, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: float): bool\n  first type mismatch at position: 2\n  required type for y: float\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: float32): bool\n  first type mismatch at position: 2\n  required type for y: float32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.vFloatZeroInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "UserType": {
    "status": "passed",
    "elapsed": 0.001836061477661133,
    "is_kst": true
  },
  "ValidLong": {
    "status": "passed",
    "elapsed": 0.001977443695068359,
    "is_kst": true
  },
  "ValidNotParsedIf": {
    "status": "passed",
    "elapsed": 0.00189661979675293,
    "is_kst": true
  },
  "ValidShort": {
    "status": "passed",
    "elapsed": 0.002011775970458984,
    "is_kst": true
  },
  "ValidSwitch": {
    "status": "passed",
    "elapsed": 0.00184178352355957,
    "is_kst": true
  },
  "YamlInts": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/yaml_ints.nim(29, 25) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of: \nproc `==`(a, b: Option): bool\n  first type mismatch at position: 2\n  required type for b: Option\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.testU4DecInst == nil\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ZlibSurrounded": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tzlib_surrounded.nim(7, 23) template/generic instantiation of `fromFile` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/zlib_surrounded.nim(41, 17) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/zlib_surrounded.nim(32, 36) Error: attempting to call undeclared routine: 'processZlib'\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "ZlibWithHeader78": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tests/tzlib_with_header_78.nim(7, 25) template/generic instantiation of `fromFile` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/zlib_with_header_78.nim(27, 19) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/zlib_with_header_78.nim(23, 30) Error: attempting to call undeclared routine: 'processZlib'\n",
      "trace": [

      ]
    },
    "is_kst": true
  },
  "$meta": {
    "lang": "nim",
    "timestamp": "2020-07-26T18:11:59Z",
    "ci": {
      "ci": "travis",
      "build_id": "711973568",
      "job_id": "711973595",
      "job_number": "378.27",
      "url": "https://travis-ci.org/kaitai-io/ci_targets/jobs/711973595"
    }
  }
}