{
  "BcdUserTypeBe": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/bcd_user_type_be.nim(144, 21) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.asIntInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "BcdUserTypeLe": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/bcd_user_type_le.nim(144, 21) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.asIntInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "BitsByteAligned": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tbits_byte_aligned.nim(15, 22) Error: number out of range: '1'u8'\n",
      "trace": ""
    },
    "is_kst": true
  },
  "BitsEnum": {
    "status": "passed",
    "elapsed": 0.001363754272460938,
    "is_kst": true
  },
  "BitsSeqEndianCombo": {
    "status": "passed",
    "elapsed": 0.001361846923828125,
    "is_kst": true
  },
  "BitsSignedB32Le": {
    "status": "passed",
    "elapsed": 0.00130009651184082,
    "is_kst": true
  },
  "BitsSignedB64Le": {
    "status": "passed",
    "elapsed": 0.001335382461547852,
    "is_kst": true
  },
  "BitsSimple": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/bits_simple.nim(63, 24) Error: type mismatch: got <int8, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int16): bool\n  first type mismatch at position: 2\n  required type for y: int16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int32): bool\n  first type mismatch at position: 2\n  required type for y: int32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int8): bool\n  first type mismatch at position: 2\n  required type for y: int8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.testIfB1Inst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "BitsSimpleLe": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/bits_simple_le.nim(63, 24) Error: type mismatch: got <int8, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int16): bool\n  first type mismatch at position: 2\n  required type for y: int16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int32): bool\n  first type mismatch at position: 2\n  required type for y: int32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int8): bool\n  first type mismatch at position: 2\n  required type for y: int8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.testIfB1Inst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "BufferedStruct": {
    "status": "passed",
    "elapsed": 0.001349687576293945,
    "is_kst": true
  },
  "BytesPadTerm": {
    "status": "passed",
    "elapsed": 0.001325368881225586,
    "is_kst": true
  },
  "CastNested": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/cast_nested.nim(73, 32) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.opcodes1IntValueInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "CastToImported": {
    "status": "passed",
    "elapsed": 0.001323223114013672,
    "is_kst": true
  },
  "CastToTop": {
    "status": "passed",
    "elapsed": 0.001333475112915039,
    "is_kst": true
  },
  "CombineBool": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/combine_bool.nim(28, 24) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.boolCalcInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "CombineBytes": {
    "status": "passed",
    "elapsed": 0.001420497894287109,
    "is_kst": true
  },
  "CombineEnum": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/combine_enum.nim(32, 24) Error: type mismatch: got <CombineEnum_Animal, typeof(nil)>\nbut expected one of:\nproc `==`[Enum: enum](x, y: Enum): bool\n  first type mismatch at position: 2\n  required type for y: Enum: enum\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.enumU4U2Inst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "CombineStr": {
    "status": "passed",
    "elapsed": 0.001398324966430664,
    "is_kst": true
  },
  "DebugSwitchUser": {
    "status": "passed",
    "elapsed": 0.001335859298706055,
    "is_kst": true
  },
  "DefaultBigEndian": {
    "status": "passed",
    "elapsed": 0.001295089721679688,
    "is_kst": true
  },
  "DefaultBitEndianMod": {
    "status": "passed",
    "elapsed": 0.001298666000366211,
    "is_kst": true
  },
  "DefaultEndianExprInherited": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/default_endian_expr_inherited.nim(168, 24) Error: type mismatch: got <uint32, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n24 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.someInstInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "DefaultEndianExprIsBe": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/default_endian_expr_is_be.nim(109, 23) Error: type mismatch: got <uint32, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n24 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.instIntInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "DefaultEndianExprIsLe": {
    "status": "passed",
    "elapsed": 0.001395225524902344,
    "is_kst": true
  },
  "DefaultEndianMod": {
    "status": "passed",
    "elapsed": 0.001306295394897461,
    "is_kst": true
  },
  "Docstrings": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/docstrings.nim(43, 19) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.twoInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "DocstringsDocref": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/docstrings_docref.nim(56, 19) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.fooInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "DocstringsDocrefMulti": {
    "status": "passed",
    "elapsed": 0.001310825347900391,
    "is_kst": true
  },
  "Enum0": {
    "status": "passed",
    "elapsed": 0.001309871673583984,
    "is_kst": true
  },
  "Enum1": {
    "status": "passed",
    "elapsed": 0.001314878463745117,
    "is_kst": true
  },
  "EnumDeep": {
    "status": "passed",
    "elapsed": 0.001346588134765625,
    "is_kst": true
  },
  "EnumDeepLiterals": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_deep_literals.nim(45, 24) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.isPet1OkInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "EnumFancy": {
    "status": "passed",
    "elapsed": 0.001310110092163086,
    "is_kst": true
  },
  "EnumIf": {
    "status": "passed",
    "elapsed": 0.001482725143432617,
    "is_kst": true
  },
  "EnumImport": {
    "status": "passed",
    "elapsed": 0.001355409622192383,
    "is_kst": true
  },
  "EnumIntRangeS": {
    "status": "passed",
    "elapsed": 0.001318216323852539,
    "is_kst": true
  },
  "EnumIntRangeU": {
    "status": "passed",
    "elapsed": 0.001424074172973633,
    "is_kst": true
  },
  "EnumInvalid": {
    "status": "passed",
    "elapsed": 0.00133204460144043,
    "is_kst": true
  },
  "EnumLongRangeS": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "fatal.nim(53)            sysFatal\nError: unhandled exception: over- or underflow [OverflowDefect]\n",
      "trace": ""
    },
    "is_kst": true
  },
  "EnumLongRangeU": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "fatal.nim(53)            sysFatal\nError: unhandled exception: over- or underflow [OverflowDefect]\n",
      "trace": ""
    },
    "is_kst": true
  },
  "EnumNegative": {
    "status": "passed",
    "elapsed": 0.001328229904174805,
    "is_kst": true
  },
  "EnumOfValueInst": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_of_value_inst.nim(35, 20) Error: type mismatch: got <EnumOfValueInst_Animal, typeof(nil)>\nbut expected one of:\nproc `==`[Enum: enum](x, y: Enum): bool\n  first type mismatch at position: 2\n  required type for y: Enum: enum\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.pet3Inst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "EnumToI": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i.nim(41, 21) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.pet1IInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "EnumToIClassBorder1": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_1.nim(12, 21) Error: undeclared identifier: 'EnumToIClassBorder2'\ncandidates (edit distance, scope distance); see '--spellSuggest': \n (1, 0): 'EnumToIClassBorder1' [type declared in /home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_1.nim(7, 3)]\n (1, 0): 'enum_to_i_class_border_2' [module declared in /home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_1.nim(5, 8)]\nThis might be caused by a recursive module dependency:\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_2.nim imports /home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_1.nim\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_1.nim imports /home/travis/build/kaitai-io/ci_targets/compiled/nim/enum_to_i_class_border_2.nim\n",
      "trace": ""
    },
    "is_kst": true
  },
  "Expr0": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_0.nim(28, 24) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.mustBeF7Inst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "Expr1": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_1.nim(31, 25) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.lenOf1ModInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "Expr2": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_2.nim(62, 26) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.str1LenModInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "Expr3": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_3.nim(55, 23) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.isStrGeInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprArray": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_array.nim(63, 25) Error: type mismatch: got <uint32, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n24 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.aintFirstInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprBits": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_bits.nim(56, 24) Error: type mismatch: got <ExprBits_Items, typeof(nil)>\nbut expected one of:\nproc `==`[Enum: enum](x, y: Enum): bool\n  first type mismatch at position: 2\n  required type for y: Enum: enum\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.enumInstInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprBytesCmp": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_bytes_cmp.nim(49, 20) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.isLeInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprBytesLiteral": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/texpr_bytes_literal.nim(4, 26) Error: cannot open file: ../../compiled/nim/expr_bytes_literal\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprBytesOps": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_bytes_ops.nim(50, 23) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.twoLastInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprCalcArrayOps": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_calc_array_ops.nim(71, 28) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.intArraySizeInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprEnum": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_enum.nim(35, 24) Error: type mismatch: got <ExprEnum_Animal, typeof(nil)>\nbut expected one of:\nproc `==`[Enum: enum](x, y: Enum): bool\n  first type mismatch at position: 2\n  required type for y: Enum: enum\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.constDogInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprIfIntOps": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_if_int_ops.nim(36, 24) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.isEqPrimInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprIntDiv": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_int_div.nim(35, 27) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.divPosConstInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprIoEof": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_io_eof.nim(59, 26) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.reflectEofInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprIoPos": {
    "status": "passed",
    "elapsed": 0.001412630081176758,
    "is_kst": true
  },
  "ExprMod": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_mod.nim(35, 27) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.modPosConstInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprOpsParens": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_ops_parens.nim(53, 23) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.boolAndInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprSizeofType0": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_sizeof_type_0.nim(29, 27) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.sizeofBlockInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprSizeofType1": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_sizeof_type_1.nim(36, 27) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.sizeofBlockInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprSizeofValue0": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_sizeof_value_0.nim(43, 26) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.selfSizeofInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprSizeofValueSized": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_sizeof_value_sized.nim(47, 26) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.selfSizeofInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprStrEncodings": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_str_encodings.nim(61, 63) Error: number out of range: '76'u8'\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ExprStrOps": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/expr_str_ops.nim(65, 21) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.toIR8Inst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "FixedContents": {
    "status": "passed",
    "elapsed": 0.001319646835327148,
    "is_kst": true
  },
  "FixedStruct": {
    "status": "passed",
    "elapsed": 0.001331567764282227,
    "is_kst": true
  },
  "FloatToI": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/float_to_i.nim(47, 23) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.float2IInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "FloatingPoints": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/floating_points.nim(42, 34) Error: type mismatch: got <float64, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: float): bool\n  first type mismatch at position: 2\n  required type for y: float\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: float32): bool\n  first type mismatch at position: 2\n  required type for y: float32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.singleValuePlusIntInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "HelloWorld": {
    "status": "passed",
    "elapsed": 0.001392364501953125,
    "is_kst": true
  },
  "IfInstances": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/if_instances.nim(23, 28) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.neverHappensInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "IfStruct": {
    "status": "passed",
    "elapsed": 0.001392602920532227,
    "is_kst": true
  },
  "IfValues": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/if_values.nim(45, 26) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.halfOpcodeInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "Imports0": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports0.nim(31, 21) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.hwOneInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ImportsAbs": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/vlq_base128_le.nim(65, 19) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.lenInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ImportsCircularA": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_a.nim(9, 13) Error: undeclared identifier: 'ImportsCircularB'\ncandidates (edit distance, scope distance); see '--spellSuggest': \n (1, 0): 'ImportsCircularA' [type declared in /home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_a.nim(7, 3)]\n (1, 0): 'imports_circular_b' [module declared in /home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_a.nim(5, 8)]\nThis might be caused by a recursive module dependency:\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_b.nim imports /home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_a.nim\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_a.nim imports /home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_circular_b.nim\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ImportsRel1": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/imports_rel_1.nim(3, 23) Error: cannot open file: for_rel_imports/imported_1\n",
      "trace": ""
    },
    "is_kst": true
  },
  "IndexSizes": {
    "status": "passed",
    "elapsed": 0.001453161239624023,
    "is_kst": true
  },
  "IndexToParamEos": {
    "status": "passed",
    "elapsed": 0.001390695571899414,
    "is_kst": true
  },
  "IndexToParamExpr": {
    "status": "passed",
    "elapsed": 0.001459836959838867,
    "is_kst": true
  },
  "IndexToParamUntil": {
    "status": "passed",
    "elapsed": 0.001471519470214844,
    "is_kst": true
  },
  "InstanceIoUser": {
    "status": "passed",
    "elapsed": 0.001551151275634766,
    "is_kst": true
  },
  "InstanceStd": {
    "status": "passed",
    "elapsed": 0.001627445220947266,
    "is_kst": true
  },
  "InstanceStdArray": {
    "status": "passed",
    "elapsed": 0.001394748687744141,
    "is_kst": true
  },
  "InstanceUserArray": {
    "status": "passed",
    "elapsed": 0.001377105712890625,
    "is_kst": true
  },
  "Integers": {
    "status": "passed",
    "elapsed": 0.001341104507446289,
    "is_kst": true
  },
  "IntegersDoubleOverflow": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/integers_double_overflow.nim(53, 33) Error: type mismatch: got <uint64, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.unsignedSafeMaxBeInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "IntegersMinMax": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tintegers_min_max.nim(26, 35) Error: number out of range: '9223372036854775808'u64'\n",
      "trace": ""
    },
    "is_kst": true
  },
  "IoLocalVar": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/io_local_var.nim(58, 25) Error: type mismatch: got 'seq[byte]' for 'messUpInstExpr' but expected 'KaitaiStruct = ref KaitaiStruct:ObjectType'\n",
      "trace": ""
    },
    "is_kst": true
  },
  "JsSignedRightShift": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/js_signed_right_shift.nim(25, 32) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.shouldBe40000000Inst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "MetaTags": {
    "status": "passed",
    "elapsed": 0.001420736312866211,
    "is_kst": true
  },
  "MetaXref": {
    "status": "passed",
    "elapsed": 0.001321315765380859,
    "is_kst": true
  },
  "MultipleUse": {
    "status": "passed",
    "elapsed": 0.001389741897583008,
    "is_kst": true
  },
  "NavParent": {
    "status": "passed",
    "elapsed": 0.001380681991577148,
    "is_kst": true
  },
  "NavParent2": {
    "status": "passed",
    "elapsed": 0.00144195556640625,
    "is_kst": true
  },
  "NavParent3": {
    "status": "passed",
    "elapsed": 0.001420736312866211,
    "is_kst": true
  },
  "NavParentFalse": {
    "status": "passed",
    "elapsed": 0.001363039016723633,
    "is_kst": true
  },
  "NavParentFalse2": {
    "status": "passed",
    "elapsed": 0.001327991485595703,
    "is_kst": true
  },
  "NavParentOverride": {
    "status": "passed",
    "elapsed": 0.001353979110717773,
    "is_kst": true
  },
  "NavParentSwitch": {
    "status": "passed",
    "elapsed": 0.001375675201416016,
    "is_kst": true
  },
  "NavParentSwitchCast": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/nav_parent_switch_cast.nim(117, 20) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.flagInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "NavParentVsValueInst": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/nav_parent_vs_value_inst.nim(44, 27) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.doSomethingInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "NavRoot": {
    "status": "passed",
    "elapsed": 0.001366376876831055,
    "is_kst": true
  },
  "NestedSameName": {
    "status": "passed",
    "elapsed": 0.001367568969726562,
    "is_kst": true
  },
  "NestedSameName2": {
    "status": "passed",
    "elapsed": 0.001343727111816406,
    "is_kst": true
  },
  "NestedTypeParam": {
    "status": "passed",
    "elapsed": 0.001420974731445312,
    "is_kst": true
  },
  "NestedTypes": {
    "status": "passed",
    "elapsed": 0.001331329345703125,
    "is_kst": true
  },
  "NestedTypes2": {
    "status": "passed",
    "elapsed": 0.001371145248413086,
    "is_kst": true
  },
  "NestedTypes3": {
    "status": "passed",
    "elapsed": 0.001421213150024414,
    "is_kst": true
  },
  "NonStandard": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/non_standard.nim(37, 18) Error: type mismatch: got <uint8, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: uint): bool\n  first type mismatch at position: 2\n  required type for y: uint\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint16): bool\n  first type mismatch at position: 2\n  required type for y: uint16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint32): bool\n  first type mismatch at position: 2\n  required type for y: uint32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint64): bool\n  first type mismatch at position: 2\n  required type for y: uint64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: uint8): bool\n  first type mismatch at position: 2\n  required type for y: uint8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.viInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ParamsCallExtraParens": {
    "status": "passed",
    "elapsed": 0.001417160034179688,
    "is_kst": true
  },
  "ParamsCallShort": {
    "status": "passed",
    "elapsed": 0.001441001892089844,
    "is_kst": true
  },
  "ParamsEnum": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/params_enum.nim(51, 21) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.isCatInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ParamsPassArrayInt": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tparams_pass_array_int.nim(7, 27) template/generic instantiation of `fromFile` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/params_pass_array_int.nim(45, 21) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/params_pass_array_int.nim(33, 54) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/params_pass_array_int.nim(54, 29) Error: type mismatch: got 'seq[int]' for 'nums' but expected 'seq[uint16]'\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ParamsPassArrayStr": {
    "status": "passed",
    "elapsed": 0.001437902450561523,
    "is_kst": true
  },
  "ParamsPassArrayStruct": {
    "status": "passed",
    "elapsed": 0.001370668411254883,
    "is_kst": true
  },
  "ParamsPassArrayUsertype": {
    "status": "passed",
    "elapsed": 0.001349210739135742,
    "is_kst": true
  },
  "ParamsPassBool": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/params_pass_bool.nim(60, 22) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.vFalseInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ParamsPassStruct": {
    "status": "passed",
    "elapsed": 0.001452207565307617,
    "is_kst": true
  },
  "ParamsPassUsertype": {
    "status": "passed",
    "elapsed": 0.001383066177368164,
    "is_kst": true
  },
  "PositionAbs": {
    "status": "passed",
    "elapsed": 0.001425027847290039,
    "is_kst": true
  },
  "PositionInSeq": {
    "status": "passed",
    "elapsed": 0.00139927864074707,
    "is_kst": true
  },
  "PositionToEnd": {
    "status": "passed",
    "elapsed": 0.001383781433105469,
    "is_kst": true
  },
  "ProcessCoerceBytes": {
    "status": "passed",
    "elapsed": 0.001376867294311523,
    "is_kst": true
  },
  "ProcessCoerceSwitch": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tprocess_coerce_switch.nim(7, 28) template/generic instantiation of `fromFile` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_coerce_switch.nim(74, 22) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_coerce_switch.nim(47, 26) Error: type mismatch: got 'seq[byte]' for 'bufUnprocExpr' but expected 'KaitaiStruct = ref KaitaiStruct:ObjectType'\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ProcessCoerceUsertype1": {
    "status": "passed",
    "elapsed": 0.001330375671386719,
    "is_kst": true
  },
  "ProcessCoerceUsertype2": {
    "status": "passed",
    "elapsed": 0.001340627670288086,
    "is_kst": true
  },
  "ProcessCustom": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_custom.nim(3, 8) Error: cannot open file: my_custom_fx\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ProcessCustomNoArgs": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_custom_no_args.nim(3, 8) Error: cannot open file: custom_fx_no_args\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ProcessRepeatBytes": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tprocess_repeat_bytes.nim(9, 46) Error: number out of range: '118'u8'\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ProcessRepeatUsertype": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tprocess_repeat_usertype.nim(7, 30) template/generic instantiation of `fromFile` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_repeat_usertype.nim(37, 24) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_repeat_usertype.nim(30, 9) Error: redefinition of 'buf'; previous declaration here: /home/travis/build/kaitai-io/ci_targets/compiled/nim/process_repeat_usertype.nim(28, 9)\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ProcessRotate": {
    "status": "passed",
    "elapsed": 0.001372814178466797,
    "is_kst": true
  },
  "ProcessToUser": {
    "status": "passed",
    "elapsed": 0.001389265060424805,
    "is_kst": true
  },
  "ProcessXor4Const": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/process_xor4_const.nim(26, 43) Error: number out of range: '20'u8'\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ProcessXor4Value": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tprocess_xor4_value.nim(9, 20) Error: number out of range: '20'u8'\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ProcessXorConst": {
    "status": "passed",
    "elapsed": 0.001361608505249023,
    "is_kst": true
  },
  "ProcessXorValue": {
    "status": "passed",
    "elapsed": 0.001401662826538086,
    "is_kst": true
  },
  "RecursiveOne": {
    "status": "passed",
    "elapsed": 0.001397609710693359,
    "is_kst": true
  },
  "RepeatEosBit": {
    "status": "passed",
    "elapsed": 0.001445531845092773,
    "is_kst": true
  },
  "RepeatEosStruct": {
    "status": "passed",
    "elapsed": 0.001406431198120117,
    "is_kst": true
  },
  "RepeatEosU4": {
    "status": "passed",
    "elapsed": 0.001569032669067383,
    "is_kst": true
  },
  "RepeatNStruct": {
    "status": "passed",
    "elapsed": 0.001318931579589844,
    "is_kst": true
  },
  "RepeatNStrz": {
    "status": "passed",
    "elapsed": 0.001564741134643555,
    "is_kst": true
  },
  "RepeatNStrzDouble": {
    "status": "passed",
    "elapsed": 0.001413822174072266,
    "is_kst": true
  },
  "RepeatUntilCalcArrayType": {
    "status": "passed",
    "elapsed": 0.001387357711791992,
    "is_kst": true
  },
  "RepeatUntilComplex": {
    "status": "passed",
    "elapsed": 0.001439809799194336,
    "is_kst": true
  },
  "RepeatUntilS4": {
    "status": "passed",
    "elapsed": 0.00145268440246582,
    "is_kst": true
  },
  "RepeatUntilSized": {
    "status": "passed",
    "elapsed": 0.001363515853881836,
    "is_kst": true
  },
  "StrEncodings": {
    "status": "passed",
    "elapsed": 0.003119707107543945,
    "is_kst": true
  },
  "StrEncodingsDefault": {
    "status": "passed",
    "elapsed": 0.001515865325927734,
    "is_kst": true
  },
  "StrEos": {
    "status": "passed",
    "elapsed": 0.001447677612304688,
    "is_kst": true
  },
  "StrLiterals2": {
    "status": "passed",
    "elapsed": 0.001358985900878906,
    "is_kst": true
  },
  "StrPadTerm": {
    "status": "passed",
    "elapsed": 0.001444101333618164,
    "is_kst": true
  },
  "StrPadTermEmpty": {
    "status": "passed",
    "elapsed": 0.001517057418823242,
    "is_kst": true
  },
  "SwitchBytearray": {
    "status": "passed",
    "elapsed": 0.001551628112792969,
    "is_kst": true
  },
  "SwitchElseOnly": {
    "status": "passed",
    "elapsed": 0.0013885498046875,
    "is_kst": true
  },
  "SwitchIntegers": {
    "status": "passed",
    "elapsed": 0.001344203948974609,
    "is_kst": true
  },
  "SwitchIntegers2": {
    "status": "passed",
    "elapsed": 0.00136876106262207,
    "is_kst": true
  },
  "SwitchManualEnum": {
    "status": "passed",
    "elapsed": 0.001505613327026367,
    "is_kst": true
  },
  "SwitchManualEnumInvalid": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tswitch_manual_enum_invalid.nim(10, 11) Error: conversion from int literal(255) to SwitchManualEnumInvalid_Opcode_CodeEnum is invalid\n",
      "trace": ""
    },
    "is_kst": true
  },
  "SwitchManualEnumInvalidElse": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_manual_enum_invalid_else.nim(114, 21) Error: type mismatch: got <int8, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int16): bool\n  first type mismatch at position: 2\n  required type for y: int16\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int32): bool\n  first type mismatch at position: 2\n  required type for y: int32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int8): bool\n  first type mismatch at position: 2\n  required type for y: int8\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n22 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.valueInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "SwitchManualInt": {
    "status": "passed",
    "elapsed": 0.00154423713684082,
    "is_kst": true
  },
  "SwitchManualIntElse": {
    "status": "passed",
    "elapsed": 0.001462221145629883,
    "is_kst": true
  },
  "SwitchManualIntSize": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tswitch_manual_int_size.nim(16, 94) Error: number out of range: '128'u8'\n",
      "trace": ""
    },
    "is_kst": true
  },
  "SwitchManualIntSizeElse": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tswitch_manual_int_size_else.nim(16, 125) Error: number out of range: '128'u8'\n",
      "trace": ""
    },
    "is_kst": true
  },
  "SwitchManualStr": {
    "status": "passed",
    "elapsed": 0.001472234725952148,
    "is_kst": true
  },
  "SwitchManualStrElse": {
    "status": "passed",
    "elapsed": 0.001426219940185547,
    "is_kst": true
  },
  "SwitchRepeatExpr": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tswitch_repeat_expr.nim(7, 25) template/generic instantiation of `fromFile` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_repeat_expr.nim(55, 19) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_repeat_expr.nim(52, 18) Error: type mismatch: got <seq[KaitaiStruct], seq[byte]>\nbut expected one of:\nproc add[T](x: var seq[T]; y: openArray[T])\n  first type mismatch at position: 2\n  required type for y: openArray[T]\n  but expression 'it' is of type: seq[byte]\nproc add[T](x: var seq[T]; y: sink T)\n  first type mismatch at position: 2\n  required type for y: sink T\n  but expression 'it' is of type: seq[byte]\n3 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: add(result.body, it)\n",
      "trace": ""
    },
    "is_kst": true
  },
  "SwitchRepeatExprInvalid": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tswitch_repeat_expr_invalid.nim(7, 32) template/generic instantiation of `fromFile` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_repeat_expr_invalid.nim(55, 26) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/switch_repeat_expr_invalid.nim(52, 18) Error: type mismatch: got <seq[KaitaiStruct], seq[byte]>\nbut expected one of:\nproc add[T](x: var seq[T]; y: openArray[T])\n  first type mismatch at position: 2\n  required type for y: openArray[T]\n  but expression 'it' is of type: seq[byte]\nproc add[T](x: var seq[T]; y: sink T)\n  first type mismatch at position: 2\n  required type for y: sink T\n  but expression 'it' is of type: seq[byte]\n3 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: add(result.body, it)\n",
      "trace": ""
    },
    "is_kst": true
  },
  "TermBytes": {
    "status": "passed",
    "elapsed": 0.00137019157409668,
    "is_kst": true
  },
  "TermStrz": {
    "status": "passed",
    "elapsed": 0.001354217529296875,
    "is_kst": true
  },
  "TermU1Val": {
    "status": "passed",
    "elapsed": 0.001456260681152344,
    "is_kst": true
  },
  "TsPacketHeader": {
    "status": "passed",
    "elapsed": 0.001407623291015625,
    "is_kst": true
  },
  "TypeIntUnaryOp": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/type_int_unary_op.nim(31, 23) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.unaryS2Inst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "TypeTernary": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/type_ternary.nim(49, 22) Error: type mismatch: got <bool, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: bool): bool\n  first type mismatch at position: 2\n  required type for y: bool\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n26 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.isHackInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "TypeTernary2ndFalsy": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/type_ternary_2nd_falsy.nim(70, 26) Error: type mismatch: got <float64, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: float): bool\n  first type mismatch at position: 2\n  required type for y: float\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: float32): bool\n  first type mismatch at position: 2\n  required type for y: float32\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.vFloatZeroInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "UserType": {
    "status": "passed",
    "elapsed": 0.00137782096862793,
    "is_kst": true
  },
  "ValidEqStrEncodings": {
    "status": "passed",
    "elapsed": 0.001541376113891602,
    "is_kst": true
  },
  "ValidLong": {
    "status": "passed",
    "elapsed": 0.001481771469116211,
    "is_kst": true
  },
  "ValidNotParsedIf": {
    "status": "passed",
    "elapsed": 0.001356363296508789,
    "is_kst": true
  },
  "ValidShort": {
    "status": "passed",
    "elapsed": 0.001431703567504883,
    "is_kst": true
  },
  "ValidSwitch": {
    "status": "passed",
    "elapsed": 0.00133204460144043,
    "is_kst": true
  },
  "YamlInts": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/compiled/nim/yaml_ints.nim(29, 25) Error: type mismatch: got <int, typeof(nil)>\nbut expected one of:\nproc `==`(x, y: int): bool\n  first type mismatch at position: 2\n  required type for y: int\n  but expression 'nil' is of type: typeof(nil)\nproc `==`(x, y: int64): bool\n  first type mismatch at position: 2\n  required type for y: int64\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T: tuple | object](x, y: T): bool\n  first type mismatch at position: 2\n  required type for y: T: tuple or object\n  but expression 'nil' is of type: typeof(nil)\nproc `==`[T](a, b: Option[T]): bool\n  first type mismatch at position: 2\n  required type for b: Option[==.T]\n  but expression 'nil' is of type: typeof(nil)\n25 other mismatching symbols have been suppressed; compile with --showAllMismatches:on to see them\n\nexpression: this.testU4DecInst == nil\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ZlibSurrounded": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tzlib_surrounded.nim(7, 23) template/generic instantiation of `fromFile` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/zlib_surrounded.nim(41, 17) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/zlib_surrounded.nim(32, 36) Error: attempting to call undeclared routine: 'processZlib'\n",
      "trace": ""
    },
    "is_kst": true
  },
  "ZlibWithHeader78": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "/home/travis/build/kaitai-io/ci_targets/tests/spec/nim/tzlib_with_header_78.nim(7, 25) template/generic instantiation of `fromFile` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/zlib_with_header_78.nim(27, 19) template/generic instantiation of `read` from here\n/home/travis/build/kaitai-io/ci_targets/compiled/nim/zlib_with_header_78.nim(23, 30) Error: attempting to call undeclared routine: 'processZlib'\n",
      "trace": ""
    },
    "is_kst": true
  },
  "$meta": {
    "lang": "nim",
    "timestamp": "2021-11-06T20:23:18Z",
    "ci": {
      "ci": "travis",
      "build_id": "241300282",
      "job_id": "546973283",
      "job_number": "433.30",
      "url": "https://app.travis-ci.com/kaitai-io/ci_targets/jobs/546973283"
    }
  }
}