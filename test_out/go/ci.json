{
  "BcdUserTypeBe": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "BcdUserTypeLe": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "BitsByteAligned": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "BitsEnum": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "BitsSeqEndianCombo": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "BitsSimpleLe": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "BitsSimple": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "BufferedStruct": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "BytesPadTerm": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "CombineBool": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "CombineBytes": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "CombineStr": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "DebugArrayUser": {
    "status": "passed",
    "elapsed": 0.0
  },
  "DefaultBigEndian": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "DefaultBitEndianMod": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "DefaultEndianExprException": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "DefaultEndianExprInherited": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "DefaultEndianExprIsBe": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "DefaultEndianExprIsLe": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "DefaultEndianMod": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "DocstringsDocrefMulti": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "DocstringsDocref": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "Docstrings": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "Enum0": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "Enum1": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumDeepLiterals": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumDeep": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumFancy": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumIf": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumImport": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumIntRangeS": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumIntRangeU": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumInvalid": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumLongRangeS": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumLongRangeU": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumNegative": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumOfValueInst": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumToIClassBorder1": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EnumToI": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "EofExceptionBytes": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "eof_exception_bytes_test.go:31: expected kaitai.EndOfStreamError, got *errors.errorString"
      ]
    },
    "is_kst": true
  },
  "EofExceptionU4": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "eof_exception_u4_test.go:31: expected kaitai.EndOfStreamError, got &lt;nil&gt;"
      ]
    },
    "is_kst": true
  },
  "EosExceptionBytes": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "eos_exception_bytes_test.go:31: expected kaitai.EndOfStreamError, got *errors.errorString"
      ]
    },
    "is_kst": true
  },
  "EosExceptionU4": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "eos_exception_u4_test.go:31: expected kaitai.EndOfStreamError, got &lt;nil&gt;"
      ]
    },
    "is_kst": true
  },
  "Expr0": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "Expr1": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "Expr2": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "Expr3": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ExprArray": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ExprBits": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ExprBytesCmp": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ExprBytesOps": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ExprCalcArrayOps": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ExprEnum": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ExprIfIntOps": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ExprIntDiv": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "expr_int_div_test.go:43: &#xA;&#x9;&#x9;Error Trace:&#x9;expr_int_div_test.go:43&#xA;&#x9;&#x9;Error:      &#x9;Not equal: &#xA;&#x9;&#x9;            &#x9;expected: -757&#xA;&#x9;&#x9;            &#x9;actual  : -756&#xA;&#x9;&#x9;Test:       &#x9;TestExprIntDiv&#xA;expr_int_div_test.go:53: &#xA;&#x9;&#x9;Error Trace:&#x9;expr_int_div_test.go:53&#xA;&#x9;&#x9;Error:      &#x9;Not equal: &#xA;&#x9;&#x9;            &#x9;expected: -4073&#xA;&#x9;&#x9;            &#x9;actual  : -4072&#xA;&#x9;&#x9;Test:       &#x9;TestExprIntDiv"
      ]
    },
    "is_kst": true
  },
  "ExprIoEof": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "expr_io_eof_test.go:33: &#xA;&#x9;&#x9;Error Trace:&#x9;expr_io_eof_test.go:33&#xA;&#x9;&#x9;Error:      &#x9;Expected nil, but got: 0x0&#xA;&#x9;&#x9;Test:       &#x9;TestExprIoEof"
      ]
    },
    "is_kst": true
  },
  "ExprIoPos": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ExprMod": {
    "status": "passed",
    "elapsed": 0.01,
    "is_kst": true
  },
  "ExprSizeofType0": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ExprSizeofType1": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ExprSizeofValue0": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ExprSizeofValueSized": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ExprStrOps": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "FixedContents": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "FixedStruct": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "FloatToI": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "FloatingPoints": {
    "status": "passed",
    "elapsed": 0.0
  },
  "HelloWorld": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "IfInstances": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "if_instances_test.go:36: &#xA;&#x9;&#x9;Error Trace:&#x9;if_instances_test.go:36&#xA;&#x9;&#x9;Error:      &#x9;Expected nil, but got: 0x0&#xA;&#x9;&#x9;Test:       &#x9;TestIfInstances"
      ]
    },
    "is_kst": true
  },
  "IfStruct": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "IfValues": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "if_values_test.go:43: &#xA;&#x9;&#x9;Error Trace:&#x9;if_values_test.go:43&#xA;&#x9;&#x9;Error:      &#x9;Expected nil, but got: 0&#xA;&#x9;&#x9;Test:       &#x9;TestIfValues&#xA;if_values_test.go:49: &#xA;&#x9;&#x9;Error Trace:&#x9;if_values_test.go:49&#xA;&#x9;&#x9;Error:      &#x9;Expected nil, but got: 0&#xA;&#x9;&#x9;Test:       &#x9;TestIfValues"
      ]
    },
    "is_kst": true
  },
  "Imports0": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ImportsAbsAbs": {
    "status": "passed",
    "elapsed": 0.0
  },
  "ImportsAbsRel": {
    "status": "passed",
    "elapsed": 0.0
  },
  "ImportsAbs": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ImportsCircularA": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ImportsRel1": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "IndexSizes": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "InstanceIoUser": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "InstanceStdArray": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "InstanceStd": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "InstanceUserArray": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "Integers": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "JsSignedRightShift": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "MetaTags": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "MetaXref": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "MultipleUse": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NavParent2": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NavParent3": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NavParentFalse2": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NavParentFalse": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NavParentOverride": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NavParent": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NavParentVsValueInst": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NavRoot": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NestedSameName2": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NestedSameName": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NestedTypeParam": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NestedTypes2": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NestedTypes3": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NestedTypes": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "NonStandard": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "OpaqueExternalType02Parent": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "goroutine 108 [running]:&#xA;runtime/debug.Stack(0xc420059c10, 0xc420059c40, 0x47d073)&#xA;runtime/debug.PrintStack()&#xA;github.com/kaitai-io/ci_targets/tests/spec/go.TestOpaqueExternalType02Parent.func1(0xc4201860f0)&#xA;panic(0x71f700, 0x9724d0)&#xA;test_formats.(*OpaqueExternalType02Child).SomeMethod(...)&#xA;test_formats.(*OpaqueExternalType02Child_OpaqueExternalType02ChildChild).Read(0xc420180f60, 0xc420180f00, 0xc420172a50, 0x0, 0xc42016937c, 0x3)&#xA;test_formats.(*OpaqueExternalType02Child).Read(0xc420172a50, 0xc420180f00, 0x71a0e0, 0xc4200f94e0, 0x0, 0x74e8e0, 0x1)&#xA;test_formats.(*OpaqueExternalType02Parent_ParentObj).Read(0xc4200f94e0, 0xc420180f00, 0xc420180f30, 0xc420180f30, 0x74e820, 0x1)&#xA;test_formats.(*OpaqueExternalType02Parent).Read(0xc420180f30, 0xc420180f00, 0x71a080, 0xc420180f30, 0xc420180f30, 0x92d69a, 0x46)&#xA;github.com/kaitai-io/ci_targets/tests/spec/go.TestOpaqueExternalType02Parent(0xc4201860f0)&#xA;testing.tRunner(0xc4201860f0, 0x7a22b0)&#xA;created by testing.(*T).Run&#xA;opaque_external_type_02_parent_test.go:16: unexpected panic: runtime error: invalid memory address or nil pointer dereference"
      ]
    }
  },
  "OpaqueExternalType": {
    "status": "passed",
    "elapsed": 0.0
  },
  "OpaqueWithParam": {
    "status": "passed",
    "elapsed": 0.0
  },
  "ParamsCallExtraParens": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ParamsCallShort": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ParamsDef": {
    "status": "passed",
    "elapsed": 0.0
  },
  "ParamsEnum": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ParamsPassArrayStr": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ParamsPassArrayUsertype": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ParamsPassUsertype": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "PositionAbs": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "PositionInSeq": {
    "status": "passed",
    "elapsed": 0.0
  },
  "PositionToEnd": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ProcessCoerceBytes": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ProcessCoerceUsertype1": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ProcessCoerceUsertype2": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ProcessCustomNoArgs": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "process_custom_no_args_test.go:32: &#xA;&#x9;&#x9;Error Trace:&#x9;process_custom_no_args_test.go:32&#xA;&#x9;&#x9;Error:      &#x9;Not equal: &#xA;&#x9;&#x9;            &#x9;expected: []byte{0x5f, 0x9, 0xac, 0x8d, 0x8d, 0xed, 0x5f}&#xA;&#x9;&#x9;            &#x9;actual  : []byte{0x9, 0xac, 0x8d, 0x8d, 0xed}&#xA;&#x9;&#x9;            &#x9;&#xA;&#x9;&#x9;            &#x9;Diff:&#xA;&#x9;&#x9;            &#x9;--- Expected&#xA;&#x9;&#x9;            &#x9;+++ Actual&#xA;&#x9;&#x9;            &#x9;@@ -1,3 +1,3 @@&#xA;&#x9;&#x9;            &#x9;-([]uint8) (len=7) {&#xA;&#x9;&#x9;            &#x9;- 00000000  5f 09 ac 8d 8d ed 5f                              |_....._|&#xA;&#x9;&#x9;            &#x9;+([]uint8) (len=5) {&#xA;&#x9;&#x9;            &#x9;+ 00000000  09 ac 8d 8d ed                                    |.....|&#xA;&#x9;&#x9;            &#x9; }&#xA;&#x9;&#x9;Test:       &#x9;TestProcessCustomNoArgs"
      ]
    },
    "is_kst": true
  },
  "ProcessCustom": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "process_custom_test.go:32: &#xA;&#x9;&#x9;Error Trace:&#x9;process_custom_test.go:32&#xA;&#x9;&#x9;Error:      &#x9;Not equal: &#xA;&#x9;&#x9;            &#x9;expected: []byte{0x10, 0xb3, 0x94, 0x94, 0xf4}&#xA;&#x9;&#x9;            &#x9;actual  : []byte{0x9, 0xac, 0x8d, 0x8d, 0xed}&#xA;&#x9;&#x9;            &#x9;&#xA;&#x9;&#x9;            &#x9;Diff:&#xA;&#x9;&#x9;            &#x9;--- Expected&#xA;&#x9;&#x9;            &#x9;+++ Actual&#xA;&#x9;&#x9;            &#x9;@@ -1,3 +1,3 @@&#xA;&#x9;&#x9;            &#x9; ([]uint8) (len=5) {&#xA;&#x9;&#x9;            &#x9;- 00000000  10 b3 94 94 f4                                    |.....|&#xA;&#x9;&#x9;            &#x9;+ 00000000  09 ac 8d 8d ed                                    |.....|&#xA;&#x9;&#x9;            &#x9; }&#xA;&#x9;&#x9;Test:       &#x9;TestProcessCustom&#xA;process_custom_test.go:33: &#xA;&#x9;&#x9;Error Trace:&#x9;process_custom_test.go:33&#xA;&#x9;&#x9;Error:      &#x9;Not equal: &#xA;&#x9;&#x9;            &#x9;expected: []byte{0x5f, 0xba, 0x7b, 0x93, 0x63, 0x23, 0x5f}&#xA;&#x9;&#x9;            &#x9;actual  : []byte{0xba, 0x7b, 0x93, 0x63, 0x23}&#xA;&#x9;&#x9;            &#x9;&#xA;&#x9;&#x9;            &#x9;Diff:&#xA;&#x9;&#x9;            &#x9;--- Expected&#xA;&#x9;&#x9;            &#x9;+++ Actual&#xA;&#x9;&#x9;            &#x9;@@ -1,3 +1,3 @@&#xA;&#x9;&#x9;            &#x9;-([]uint8) (len=7) {&#xA;&#x9;&#x9;            &#x9;- 00000000  5f ba 7b 93 63 23 5f                              |_.{.c#_|&#xA;&#x9;&#x9;            &#x9;+([]uint8) (len=5) {&#xA;&#x9;&#x9;            &#x9;+ 00000000  ba 7b 93 63 23                                    |.{.c#|&#xA;&#x9;&#x9;            &#x9; }&#xA;&#x9;&#x9;Test:       &#x9;TestProcessCustom&#xA;process_custom_test.go:34: &#xA;&#x9;&#x9;Error Trace:&#x9;process_custom_test.go:34&#xA;&#x9;&#x9;Error:      &#x9;Not equal: &#xA;&#x9;&#x9;            &#x9;expected: []byte{0x29, 0x33, 0xb1, 0x38, 0xb1}&#xA;&#x9;&#x9;            &#x9;actual  : []byte{0x2a, 0x34, 0xb2, 0x39, 0xb2}&#xA;&#x9;&#x9;            &#x9;&#xA;&#x9;&#x9;            &#x9;Diff:&#xA;&#x9;&#x9;            &#x9;--- Expected&#xA;&#x9;&#x9;            &#x9;+++ Actual&#xA;&#x9;&#x9;            &#x9;@@ -1,3 +1,3 @@&#xA;&#x9;&#x9;            &#x9; ([]uint8) (len=5) {&#xA;&#x9;&#x9;            &#x9;- 00000000  29 33 b1 38 b1                                    |)3.8.|&#xA;&#x9;&#x9;            &#x9;+ 00000000  2a 34 b2 39 b2                                    |*4.9.|&#xA;&#x9;&#x9;            &#x9; }&#xA;&#x9;&#x9;Test:       &#x9;TestProcessCustom"
      ]
    },
    "is_kst": true
  },
  "ProcessRepeatBytes": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ProcessRepeatUsertype": {
    "status": "passed",
    "elapsed": 0.01,
    "is_kst": true
  },
  "ProcessRotate": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ProcessToUser": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ProcessXor4Const": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ProcessXor4Value": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ProcessXorConst": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ProcessXorValue": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "RepeatEosBit": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "RepeatEosStruct": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "RepeatEosU4": {
    "status": "passed",
    "elapsed": 0.0
  },
  "RepeatNStruct": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "RepeatNStrzDouble": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "RepeatNStrz": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "RepeatUntilComplex": {
    "status": "passed",
    "elapsed": 0.0
  },
  "RepeatUntilS4": {
    "status": "passed",
    "elapsed": 0.0
  },
  "StrEncodingsDefault": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "StrEncodings": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "StrEos": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "StrLiterals2": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "StrLiterals": {
    "status": "passed",
    "elapsed": 0.0
  },
  "StrPadTermEmpty": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "StrPadTerm": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "SwitchElseOnly": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "SwitchIntegers2": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "SwitchIntegers": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "SwitchManualEnumInvalid": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "TermBytes": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "TermStrz": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "TsPacketHeader": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "TypeIntUnaryOp": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "TypeTernary2ndFalsy": {
    "status": "passed",
    "elapsed": 0.0
  },
  "TypeTernaryOpaque": {
    "status": "passed",
    "elapsed": 0.0
  },
  "TypeTernary": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "UserType": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ValidFailContents": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "valid_fail_contents_test.go:31: expected kaitai.ValidationNotEqualError, got &lt;nil&gt;"
      ]
    },
    "is_kst": true
  },
  "ValidFailEqBytes": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "valid_fail_eq_bytes_test.go:31: expected kaitai.ValidationNotEqualError, got &lt;nil&gt;"
      ]
    },
    "is_kst": true
  },
  "ValidFailEqInt": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "valid_fail_eq_int_test.go:31: expected kaitai.ValidationNotEqualError, got &lt;nil&gt;"
      ]
    },
    "is_kst": true
  },
  "ValidFailInst": {
    "status": "failed",
    "elapsed": 0.0,
    "failure": {
      "file_name": null,
      "line_num": null,
      "message": "Failed",
      "trace": [
        "valid_fail_inst_test.go:31: expected kaitai.ValidationNotEqualError, got &lt;nil&gt;"
      ]
    },
    "is_kst": true
  },
  "ValidLong": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ValidNotParsedIf": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ValidShort": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ZlibSurrounded": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "ZlibWithHeader78": {
    "status": "passed",
    "elapsed": 0.0,
    "is_kst": true
  },
  "$meta": {
    "lang": "go",
    "timestamp": "2020-06-11T18:12:00Z",
    "ci": {
      "ci": "travis",
      "build_id": "697329648",
      "job_id": "697329670",
      "job_number": "371.22",
      "url": "https://travis-ci.org/kaitai-io/ci_targets/jobs/697329670"
    }
  }
}